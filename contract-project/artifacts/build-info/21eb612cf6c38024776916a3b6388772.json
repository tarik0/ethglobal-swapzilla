{"id":"21eb612cf6c38024776916a3b6388772","_format":"hh-sol-build-info-1","solcVersion":"0.8.22","solcLongVersion":"0.8.22+commit.4fc1097e","input":{"language":"Solidity","sources":{"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { ILayerZeroEndpointV2 } from \"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\";\n\n/**\n * @title IOAppCore\n */\ninterface IOAppCore {\n    // Custom error messages\n    error OnlyPeer(uint32 eid, bytes32 sender);\n    error NoPeer(uint32 eid);\n    error InvalidEndpointCall();\n    error InvalidDelegate();\n\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\n    event PeerSet(uint32 eid, bytes32 peer);\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol contract.\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\n     */\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\n\n    /**\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\n     * @return iEndpoint The LayerZero endpoint as an interface.\n     */\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\n\n    /**\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\n     */\n    function peers(uint32 _eid) external view returns (bytes32 peer);\n\n    /**\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\n     */\n    function setPeer(uint32 _eid, bytes32 _peer) external;\n\n    /**\n     * @notice Sets the delegate address for the OApp Core.\n     * @param _delegate The address of the delegate to be set.\n     */\n    function setDelegate(address _delegate) external;\n}\n"},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { ILayerZeroReceiver, Origin } from \"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\";\n\ninterface IOAppReceiver is ILayerZeroReceiver {\n    /**\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\n     * @param _origin The origin information containing the source endpoint and sender address.\n     *  - srcEid: The source chain endpoint ID.\n     *  - sender: The sender address on the src chain.\n     *  - nonce: The nonce of the message.\n     * @param _message The lzReceive payload.\n     * @param _sender The sender address.\n     * @return isSender Is a valid sender.\n     *\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\n     * @dev The default sender IS the OAppReceiver implementer.\n     */\n    function isComposeMsgSender(\n        Origin calldata _origin,\n        bytes calldata _message,\n        address _sender\n    ) external view returns (bool isSender);\n}\n"},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\n// @dev Import the 'MessagingFee' and 'MessagingReceipt' so it's exposed to OApp implementers\n// solhint-disable-next-line no-unused-import\nimport { OAppSender, MessagingFee, MessagingReceipt } from \"./OAppSender.sol\";\n// @dev Import the 'Origin' so it's exposed to OApp implementers\n// solhint-disable-next-line no-unused-import\nimport { OAppReceiver, Origin } from \"./OAppReceiver.sol\";\nimport { OAppCore } from \"./OAppCore.sol\";\n\n/**\n * @title OApp\n * @dev Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.\n */\nabstract contract OApp is OAppSender, OAppReceiver {\n    /**\n     * @dev Constructor to initialize the OApp with the provided endpoint and owner.\n     * @param _endpoint The address of the LOCAL LayerZero endpoint.\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\n     */\n    constructor(address _endpoint, address _delegate) OAppCore(_endpoint, _delegate) {}\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol implementation.\n     * @return receiverVersion The version of the OAppReceiver.sol implementation.\n     */\n    function oAppVersion()\n        public\n        pure\n        virtual\n        override(OAppSender, OAppReceiver)\n        returns (uint64 senderVersion, uint64 receiverVersion)\n    {\n        return (SENDER_VERSION, RECEIVER_VERSION);\n    }\n}\n"},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { IOAppCore, ILayerZeroEndpointV2 } from \"./interfaces/IOAppCore.sol\";\n\n/**\n * @title OAppCore\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\n */\nabstract contract OAppCore is IOAppCore, Ownable {\n    // The LayerZero endpoint associated with the given OApp\n    ILayerZeroEndpointV2 public immutable endpoint;\n\n    // Mapping to store peers associated with corresponding endpoints\n    mapping(uint32 eid => bytes32 peer) public peers;\n\n    /**\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\n     *\n     * @dev The delegate typically should be set as the owner of the contract.\n     */\n    constructor(address _endpoint, address _delegate) {\n        endpoint = ILayerZeroEndpointV2(_endpoint);\n\n        if (_delegate == address(0)) revert InvalidDelegate();\n        endpoint.setDelegate(_delegate);\n    }\n\n    /**\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\n     *\n     * @dev Only the owner/admin of the OApp can call this function.\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n     * @dev Set this to bytes32(0) to remove the peer address.\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\n     */\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\n        _setPeer(_eid, _peer);\n    }\n\n    /**\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n     * @param _eid The endpoint ID.\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\n     *\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n     * @dev Set this to bytes32(0) to remove the peer address.\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\n     */\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\n        peers[_eid] = _peer;\n        emit PeerSet(_eid, _peer);\n    }\n\n    /**\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\n     * ie. the peer is set to bytes32(0).\n     * @param _eid The endpoint ID.\n     * @return peer The address of the peer associated with the specified endpoint.\n     */\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\n        bytes32 peer = peers[_eid];\n        if (peer == bytes32(0)) revert NoPeer(_eid);\n        return peer;\n    }\n\n    /**\n     * @notice Sets the delegate address for the OApp.\n     * @param _delegate The address of the delegate to be set.\n     *\n     * @dev Only the owner/admin of the OApp can call this function.\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\n     */\n    function setDelegate(address _delegate) public onlyOwner {\n        endpoint.setDelegate(_delegate);\n    }\n}\n"},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { IOAppReceiver, Origin } from \"./interfaces/IOAppReceiver.sol\";\nimport { OAppCore } from \"./OAppCore.sol\";\n\n/**\n * @title OAppReceiver\n * @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\n */\nabstract contract OAppReceiver is IOAppReceiver, OAppCore {\n    // Custom error message for when the caller is not the registered endpoint/\n    error OnlyEndpoint(address addr);\n\n    // @dev The version of the OAppReceiver implementation.\n    // @dev Version is bumped when changes are made to this contract.\n    uint64 internal constant RECEIVER_VERSION = 2;\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol contract.\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\n     *\n     * @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\n     * ie. this is a RECEIVE only OApp.\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\n     */\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (0, RECEIVER_VERSION);\n    }\n\n    /**\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\n     * @dev _origin The origin information containing the source endpoint and sender address.\n     *  - srcEid: The source chain endpoint ID.\n     *  - sender: The sender address on the src chain.\n     *  - nonce: The nonce of the message.\n     * @dev _message The lzReceive payload.\n     * @param _sender The sender address.\n     * @return isSender Is a valid sender.\n     *\n     * @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\n     * @dev The default sender IS the OAppReceiver implementer.\n     */\n    function isComposeMsgSender(\n        Origin calldata /*_origin*/,\n        bytes calldata /*_message*/,\n        address _sender\n    ) public view virtual returns (bool) {\n        return _sender == address(this);\n    }\n\n    /**\n     * @notice Checks if the path initialization is allowed based on the provided origin.\n     * @param origin The origin information containing the source endpoint and sender address.\n     * @return Whether the path has been initialized.\n     *\n     * @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\n     * @dev This defaults to assuming if a peer has been set, its initialized.\n     * Can be overridden by the OApp if there is other logic to determine this.\n     */\n    function allowInitializePath(Origin calldata origin) public view virtual returns (bool) {\n        return peers[origin.srcEid] == origin.sender;\n    }\n\n    /**\n     * @notice Retrieves the next nonce for a given source endpoint and sender address.\n     * @dev _srcEid The source endpoint ID.\n     * @dev _sender The sender address.\n     * @return nonce The next nonce.\n     *\n     * @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\n     * @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\n     * @dev This is also enforced by the OApp.\n     * @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\n     */\n    function nextNonce(uint32 /*_srcEid*/, bytes32 /*_sender*/) public view virtual returns (uint64 nonce) {\n        return 0;\n    }\n\n    /**\n     * @dev Entry point for receiving messages or packets from the endpoint.\n     * @param _origin The origin information containing the source endpoint and sender address.\n     *  - srcEid: The source chain endpoint ID.\n     *  - sender: The sender address on the src chain.\n     *  - nonce: The nonce of the message.\n     * @param _guid The unique identifier for the received LayerZero message.\n     * @param _message The payload of the received message.\n     * @param _executor The address of the executor for the received message.\n     * @param _extraData Additional arbitrary data provided by the corresponding executor.\n     *\n     * @dev Entry point for receiving msg/packet from the LayerZero endpoint.\n     */\n    function lzReceive(\n        Origin calldata _origin,\n        bytes32 _guid,\n        bytes calldata _message,\n        address _executor,\n        bytes calldata _extraData\n    ) public payable virtual {\n        // Ensures that only the endpoint can attempt to lzReceive() messages to this OApp.\n        if (address(endpoint) != msg.sender) revert OnlyEndpoint(msg.sender);\n\n        // Ensure that the sender matches the expected peer for the source endpoint.\n        if (_getPeerOrRevert(_origin.srcEid) != _origin.sender) revert OnlyPeer(_origin.srcEid, _origin.sender);\n\n        // Call the internal OApp implementation of lzReceive.\n        _lzReceive(_origin, _guid, _message, _executor, _extraData);\n    }\n\n    /**\n     * @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation.\n     */\n    function _lzReceive(\n        Origin calldata _origin,\n        bytes32 _guid,\n        bytes calldata _message,\n        address _executor,\n        bytes calldata _extraData\n    ) internal virtual;\n}\n"},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport { SafeERC20, IERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\";\nimport { OAppCore } from \"./OAppCore.sol\";\n\n/**\n * @title OAppSender\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\n */\nabstract contract OAppSender is OAppCore {\n    using SafeERC20 for IERC20;\n\n    // Custom error messages\n    error NotEnoughNative(uint256 msgValue);\n    error LzTokenUnavailable();\n\n    // @dev The version of the OAppSender implementation.\n    // @dev Version is bumped when changes are made to this contract.\n    uint64 internal constant SENDER_VERSION = 1;\n\n    /**\n     * @notice Retrieves the OApp version information.\n     * @return senderVersion The version of the OAppSender.sol contract.\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\n     *\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\n     * ie. this is a SEND only OApp.\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\n     */\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (SENDER_VERSION, 0);\n    }\n\n    /**\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\n     * @param _dstEid The destination endpoint ID.\n     * @param _message The message payload.\n     * @param _options Additional options for the message.\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\n     * @return fee The calculated MessagingFee for the message.\n     *      - nativeFee: The native fee for the message.\n     *      - lzTokenFee: The LZ token fee for the message.\n     */\n    function _quote(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) internal view virtual returns (MessagingFee memory fee) {\n        return\n            endpoint.quote(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\n                address(this)\n            );\n    }\n\n    /**\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\n     * @param _dstEid The destination endpoint ID.\n     * @param _message The message payload.\n     * @param _options Additional options for the message.\n     * @param _fee The calculated LayerZero fee for the message.\n     *      - nativeFee: The native fee.\n     *      - lzTokenFee: The lzToken fee.\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\n     * @return receipt The receipt for the sent message.\n     *      - guid: The unique identifier for the sent message.\n     *      - nonce: The nonce of the sent message.\n     *      - fee: The LayerZero fee incurred for the message.\n     */\n    function _lzSend(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        MessagingFee memory _fee,\n        address _refundAddress\n    ) internal virtual returns (MessagingReceipt memory receipt) {\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\n        uint256 messageValue = _payNative(_fee.nativeFee);\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\n\n        return\n            // solhint-disable-next-line check-send-result\n            endpoint.send{ value: messageValue }(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\n                _refundAddress\n            );\n    }\n\n    /**\n     * @dev Internal function to pay the native fee associated with the message.\n     * @param _nativeFee The native fee to be paid.\n     * @return nativeFee The amount of native currency paid.\n     *\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\n     * this will need to be overridden because msg.value would contain multiple lzFees.\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\n     */\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\n        return _nativeFee;\n    }\n\n    /**\n     * @dev Internal function to pay the LZ token fee associated with the message.\n     * @param _lzTokenFee The LZ token fee to be paid.\n     *\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\n     */\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\n        address lzToken = endpoint.lzToken();\n        if (lzToken == address(0)) revert LzTokenUnavailable();\n\n        // Pay LZ token fee by sending tokens to the endpoint.\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\n    }\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nimport { IMessageLibManager } from \"./IMessageLibManager.sol\";\nimport { IMessagingComposer } from \"./IMessagingComposer.sol\";\nimport { IMessagingChannel } from \"./IMessagingChannel.sol\";\nimport { IMessagingContext } from \"./IMessagingContext.sol\";\n\nstruct MessagingParams {\n    uint32 dstEid;\n    bytes32 receiver;\n    bytes message;\n    bytes options;\n    bool payInLzToken;\n}\n\nstruct MessagingReceipt {\n    bytes32 guid;\n    uint64 nonce;\n    MessagingFee fee;\n}\n\nstruct MessagingFee {\n    uint256 nativeFee;\n    uint256 lzTokenFee;\n}\n\nstruct Origin {\n    uint32 srcEid;\n    bytes32 sender;\n    uint64 nonce;\n}\n\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n\n    event PacketDelivered(Origin origin, address receiver);\n\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n\n    event LzTokenSet(address token);\n\n    event DelegateSet(address sender, address delegate);\n\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n\n    function setLzToken(address _lzToken) external;\n\n    function lzToken() external view returns (address);\n\n    function nativeToken() external view returns (address);\n\n    function setDelegate(address _delegate) external;\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nimport { Origin } from \"./ILayerZeroEndpointV2.sol\";\n\ninterface ILayerZeroReceiver {\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\n\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\n\n    function lzReceive(\n        Origin calldata _origin,\n        bytes32 _guid,\n        bytes calldata _message,\n        address _executor,\n        bytes calldata _extraData\n    ) external payable;\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\nstruct SetConfigParam {\n    uint32 eid;\n    uint32 configType;\n    bytes config;\n}\n\ninterface IMessageLibManager {\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n\n    function registerLibrary(address _lib) external;\n\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n\n    function getRegisteredLibraries() external view returns (address[] memory);\n\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n\n    /// ------------------- OApp interfaces -------------------\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface IMessagingChannel {\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n\n    function eid() external view returns (uint32);\n\n    // this is an emergency function if a message cannot be verified for some reasons\n    // required to provide _nextNonce to avoid race condition\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface IMessagingComposer {\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\n    event LzComposeAlert(\n        address indexed from,\n        address indexed to,\n        address indexed executor,\n        bytes32 guid,\n        uint16 index,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n\n    function composeQueue(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index\n    ) external view returns (bytes32 messageHash);\n\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\n\n    function lzCompose(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n}\n"},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\ninterface IMessagingContext {\n    function isSendingMessage() external view returns (bool);\n\n    function getSendContext() external view returns (uint32 dstEid, address sender);\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/interfaces/IERC7683.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\n/// @title CrossChainOrder type\n/// @notice Standard order struct to be signed by swappers, disseminated to fillers, and submitted to settlement contracts\nstruct CrossChainOrder {\n\t/// @dev The contract address that the order is meant to be settled by.\n\t/// Fillers send this order to this contract address on the origin chain\n\taddress settlementContract;\n\t/// @dev The address of the user who is initiating the swap,\n\t/// whose input tokens will be taken and escrowed\n\taddress swapper;\n\t/// @dev Nonce to be used as replay protection for the order\n\tuint256 nonce;\n\t/// @dev The chainId of the origin chain\n\tuint32 originChainId;\n\t/// @dev The timestamp by which the order must be initiated\n\tuint32 initiateDeadline;\n\t/// @dev The timestamp by which the order must be filled on the destination chain\n\tuint32 fillDeadline;\n\t/// @dev Arbitrary implementation-specific data\n\t/// Can be used to define tokens, amounts, destination chains, fees, settlement parameters,\n\t/// or any other order-type specific information\n\tbytes orderData;\n}\n\n/// @title ResolvedCrossChainOrder type\n/// @notice An implementation-generic representation of an order\n/// @dev Defines all requirements for filling an order by unbundling the implementation-specific orderData.\n/// @dev Intended to improve integration generalization by allowing fillers to compute the exact input and output information of any order\nstruct ResolvedCrossChainOrder {\n\t/// @dev The contract address that the order is meant to be settled by.\n\taddress settlementContract;\n\t/// @dev The address of the user who is initiating the swap\n\taddress swapper;\n\t/// @dev Nonce to be used as replay protection for the order\n\tuint256 nonce;\n\t/// @dev The chainId of the origin chain\n\tuint32 originChainId;\n\t/// @dev The timestamp by which the order must be initiated\n\tuint32 initiateDeadline;\n\t/// @dev The timestamp by which the order must be filled on the destination chain(s)\n\tuint32 fillDeadline;\n\n\t/// @dev The inputs to be taken from the swapper as part of order initiation\n\tInput[] swapperInputs;\n\t/// @dev The outputs to be given to the swapper as part of order fulfillment\n\tOutput[] swapperOutputs;\n\t/// @dev The outputs to be given to the filler as part of order settlement\n\tOutput[] fillerOutputs;\n}\n\n/// @notice Tokens sent by the swapper as inputs to the order\nstruct Input {\n\t/// @dev The address of the ERC20 token on the origin chain\n\taddress token;\n\t/// @dev The amount of the token to be sent\n\tuint256 amount;\n}\n\n/// @notice Tokens that must be receive for a valid order fulfillment\nstruct Output {\n\t/// @dev The address of the ERC20 token on the destination chain\n\t/// @dev address(0) used as a sentinel for the native token\n\taddress token;\n\t/// @dev The amount of the token to be sent\n\tuint256 amount;\n\t/// @dev The address to receive the output tokens\n\taddress recipient;\n\t/// @dev The destination chain for this output\n\tuint32 chainId;\n}\n\n\n/// @title ISettlementContract\n/// @notice Standard interface for settlement contracts\ninterface ISettlementContract {\n    function initiate(CrossChainOrder calldata order, bytes calldata signature, bytes calldata fillerData) external;\n\n    function resolve(CrossChainOrder calldata order, bytes calldata fillerData) external view returns (ResolvedCrossChainOrder memory);\n}\n"},"contracts/MyOApp.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.22;\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { OApp, MessagingFee, Origin } from \"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol\";\nimport { MessagingReceipt } from \"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol\";\n\ncontract MyOApp is OApp {\n    constructor(address _endpoint, address _delegate) OApp(_endpoint, _delegate) Ownable(_delegate) {}\n\n    string public data = \"Nothing received yet.\";\n\n    /**\n     * @notice Sends a message from the source chain to a destination chain.\n     * @param _dstEid The endpoint ID of the destination chain.\n     * @param _message The message string to be sent.\n     * @param _options Additional options for message execution.\n     * @dev Encodes the message as bytes and sends it using the `_lzSend` internal function.\n     * @return receipt A `MessagingReceipt` struct containing details of the message sent.\n     */\n    function send(\n        uint32 _dstEid,\n        string memory _message,\n        bytes calldata _options\n    ) external payable returns (MessagingReceipt memory receipt) {\n        bytes memory _payload = abi.encode(_message);\n        receipt = _lzSend(_dstEid, _payload, _options, MessagingFee(msg.value, 0), payable(msg.sender));\n    }\n\n    /**\n     * @notice Quotes the gas needed to pay for the full omnichain transaction in native gas or ZRO token.\n     * @param _dstEid Destination chain's endpoint ID.\n     * @param _message The message.\n     * @param _options Message execution options (e.g., for sending gas to destination).\n     * @param _payInLzToken Whether to return fee in ZRO token.\n     * @return fee A `MessagingFee` struct containing the calculated gas fee in either the native token or ZRO token.\n     */\n    function quote(\n        uint32 _dstEid,\n        string memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) public view returns (MessagingFee memory fee) {\n        bytes memory payload = abi.encode(_message);\n        fee = _quote(_dstEid, payload, _options, _payInLzToken);\n    }\n\n    /**\n     * @dev Internal function override to handle incoming messages from another chain.\n     * @dev _origin A struct containing information about the message sender.\n     * @dev _guid A unique global packet identifier for the message.\n     * @param payload The encoded message payload being received.\n     *\n     * @dev The following params are unused in the current implementation of the OApp.\n     * @dev _executor The address of the Executor responsible for processing the message.\n     * @dev _extraData Arbitrary data appended by the Executor to the message.\n     *\n     * Decodes the received payload and processes it as per the business logic defined in the function.\n     */\n    function _lzReceive(\n        Origin calldata /*_origin*/,\n        bytes32 /*_guid*/,\n        bytes calldata payload,\n        address /*_executor*/,\n        bytes calldata /*_extraData*/\n    ) internal override {\n        data = abi.decode(payload, (string));\n    }\n}\n"},"contracts/SettlementContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport {ISettlementContract, CrossChainOrder, ResolvedCrossChainOrder} from \"./interfaces/IERC7683.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SettlementContract is\n    ISettlementContract,\n    Context,\n    Ownable\n{\n    using ECDSA for bytes32;\n    using MessageHashUtils for bytes32;\n\n    ///\n    /// Constructor\n    ///\n\n    constructor() Ownable(_msgSender()) {}\n\n    ///\n    /// Order Hashing\n    ///\n\n    function computeHash(CrossChainOrder calldata order) external pure returns (bytes32) {\n        return _hashOrder(order);\n    }\n\n    function _hashOrder(CrossChainOrder memory order) internal pure returns (bytes32) {\n        return keccak256(abi.encode(order));\n    }\n\n    function _verifySignature(CrossChainOrder memory order, bytes memory signature) internal view returns (bool) {\n        return _hashOrder(order)\n            .toEthSignedMessageHash()\n            .recover(signature) == _msgSender();\n    }\n\n    ///\n    /// Whitelisted Settlement Contracts\n    ///\n\n    mapping(address => bool) internal _isSettlementSupported;\n    mapping(address => uint) internal _settlementToChainId;\n\n    function whitelistSettlementContract(address settlementContract, uint chainId) external onlyOwner {\n        _isSettlementSupported[settlementContract] = true;\n        _settlementToChainId[settlementContract] = chainId;\n    }\n\n    ///\n    /// Order Registration\n    ///\n\n    mapping(bytes32 => CrossChainOrder) internal _orders;\n    mapping(address => uint256) internal _nonceOf;\n\n    function initiate(CrossChainOrder calldata order, bytes calldata signature, bytes calldata fillerData) external {\n\n    }\n\n    function nonceOf(address user) external returns (uint256) {\n        return _nonceOf[user];\n    }\n\n    ///\n    /// Order Resolving\n    ///\n\n    function resolve(CrossChainOrder calldata order, bytes calldata fillerData) external view returns (ResolvedCrossChainOrder memory) {\n\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/SettlementContract.sol:65:5:\n   |\n65 |     function nonceOf(address user) external returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":2051,"file":"contracts/SettlementContract.sol","start":1955},"type":"Warning"}],"sources":{"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol","exportedSymbols":{"MessagingFee":[631],"MessagingReceipt":[626],"OApp":[45],"OAppCore":[175],"OAppReceiver":[327],"OAppSender":[513],"Origin":[638]},"id":46,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:0"},{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol","file":"./OAppSender.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":46,"sourceUnit":514,"src":"199:78:0","symbolAliases":[{"foreign":{"id":2,"name":"OAppSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"208:10:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3,"name":"MessagingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"220:12:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4,"name":"MessagingReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"234:16:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol","file":"./OAppReceiver.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":46,"sourceUnit":328,"src":"389:58:0","symbolAliases":[{"foreign":{"id":6,"name":"OAppReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"398:12:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"Origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"412:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol","file":"./OAppCore.sol","id":10,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":46,"sourceUnit":176,"src":"448:42:0","symbolAliases":[{"foreign":{"id":9,"name":"OAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"457:8:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":12,"name":"OAppSender","nameLocations":["665:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"665:10:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"665:10:0"},{"baseName":{"id":14,"name":"OAppReceiver","nameLocations":["677:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":327,"src":"677:12:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"677:12:0"}],"canonicalName":"OApp","contractDependencies":[],"contractKind":"contract","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"492:146:0","text":" @title OApp\n @dev Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality."},"fullyImplemented":false,"id":45,"linearizedBaseContracts":[45,327,513,175,1466,2153,576,597,836],"name":"OApp","nameLocation":"657:4:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":27,"nodeType":"Block","src":"1046:2:0","statements":[]},"documentation":{"id":16,"nodeType":"StructuredDocumentation","src":"696:264:0","text":" @dev Constructor to initialize the OApp with the provided endpoint and owner.\n @param _endpoint The address of the LOCAL LayerZero endpoint.\n @param _delegate The delegate capable of making OApp configurations inside of the endpoint."},"id":28,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":23,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1024:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":24,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"1035:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":25,"kind":"baseConstructorSpecifier","modifierName":{"id":22,"name":"OAppCore","nameLocations":["1015:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"1015:8:0"},"nodeType":"ModifierInvocation","src":"1015:30:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"_endpoint","nameLocation":"985:9:0","nodeType":"VariableDeclaration","scope":28,"src":"977:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"_delegate","nameLocation":"1004:9:0","nodeType":"VariableDeclaration","scope":28,"src":"996:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"976:38:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[],"src":"1046:0:0"},"scope":45,"src":"965:83:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[207,367],"body":{"id":43,"nodeType":"Block","src":"1464:58:0","statements":[{"expression":{"components":[{"id":39,"name":"SENDER_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1482:14:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":40,"name":"RECEIVER_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1498:16:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":41,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1481:34:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint64_$_t_uint64_$","typeString":"tuple(uint64,uint64)"}},"functionReturnParameters":38,"id":42,"nodeType":"Return","src":"1474:41:0"}]},"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"1054:228:0","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol implementation.\n @return receiverVersion The version of the OAppReceiver.sol implementation."},"functionSelector":"17442b70","id":44,"implemented":true,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"1296:11:0","nodeType":"FunctionDefinition","overrides":{"id":33,"nodeType":"OverrideSpecifier","overrides":[{"id":31,"name":"OAppSender","nameLocations":["1371:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"1371:10:0"},{"id":32,"name":"OAppReceiver","nameLocations":["1383:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":327,"src":"1383:12:0"}],"src":"1362:34:0"},"parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"1307:2:0"},"returnParameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"senderVersion","nameLocation":"1421:13:0","nodeType":"VariableDeclaration","scope":44,"src":"1414:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":34,"name":"uint64","nodeType":"ElementaryTypeName","src":"1414:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"receiverVersion","nameLocation":"1443:15:0","nodeType":"VariableDeclaration","scope":44,"src":"1436:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36,"name":"uint64","nodeType":"ElementaryTypeName","src":"1436:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1413:46:0"},"scope":45,"src":"1287:235:0","stateMutability":"pure","virtual":true,"visibility":"public"}],"scope":46,"src":"639:885:0","usedErrors":[191,349,351,524,528,530,532,1332,1337],"usedEvents":[538,1343]}],"src":"33:1492:0"},"id":0},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol","exportedSymbols":{"ILayerZeroEndpointV2":[800],"IOAppCore":[576],"OAppCore":[175],"Ownable":[1466]},"id":176,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":47,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:1"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":49,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":1467,"src":"59:69:1","symbolAliases":[{"foreign":{"id":48,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"68:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol","file":"./interfaces/IOAppCore.sol","id":52,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":176,"sourceUnit":577,"src":"129:77:1","symbolAliases":[{"foreign":{"id":50,"name":"IOAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"138:9:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":51,"name":"ILayerZeroEndpointV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"149:20:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":54,"name":"IOAppCore","nameLocations":["360:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":576,"src":"360:9:1"},"id":55,"nodeType":"InheritanceSpecifier","src":"360:9:1"},{"baseName":{"id":56,"name":"Ownable","nameLocations":["371:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"371:7:1"},"id":57,"nodeType":"InheritanceSpecifier","src":"371:7:1"}],"canonicalName":"OAppCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"208:121:1","text":" @title OAppCore\n @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations."},"fullyImplemented":false,"id":175,"linearizedBaseContracts":[175,1466,2153,576],"name":"OAppCore","nameLocation":"348:8:1","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[553],"constant":false,"functionSelector":"5e280f11","id":60,"mutability":"immutable","name":"endpoint","nameLocation":"484:8:1","nodeType":"VariableDeclaration","scope":175,"src":"446:46:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"},"typeName":{"id":59,"nodeType":"UserDefinedTypeName","pathNode":{"id":58,"name":"ILayerZeroEndpointV2","nameLocations":["446:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":800,"src":"446:20:1"},"referencedDeclaration":800,"src":"446:20:1","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"visibility":"public"},{"baseFunctions":[561],"constant":false,"functionSelector":"bb0b6a53","id":64,"mutability":"mutable","name":"peers","nameLocation":"612:5:1","nodeType":"VariableDeclaration","scope":175,"src":"569:48:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"},"typeName":{"id":63,"keyName":"eid","keyNameLocation":"584:3:1","keyType":{"id":61,"name":"uint32","nodeType":"ElementaryTypeName","src":"577:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Mapping","src":"569:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"},"valueName":"peer","valueNameLocation":"599:4:1","valueType":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"591:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"public"},{"body":{"id":94,"nodeType":"Block","src":"1037:164:1","statements":[{"expression":{"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":72,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1047:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":74,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1079:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":73,"name":"ILayerZeroEndpointV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1058:20:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILayerZeroEndpointV2_$800_$","typeString":"type(contract ILayerZeroEndpointV2)"}},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1058:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"src":"1047:42:1","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"id":77,"nodeType":"ExpressionStatement","src":"1047:42:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":78,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"1104:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1125:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":80,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1117:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"1117:7:1","typeDescriptions":{}}},"id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1117:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1104:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":87,"nodeType":"IfStatement","src":"1100:53:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"InvalidDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"1136:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1136:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"RevertStatement","src":"1129:24:1"}},{"expression":{"arguments":[{"id":91,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"1184:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":88,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1163:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1172:11:1","memberName":"setDelegate","nodeType":"MemberAccess","referencedDeclaration":799,"src":"1163:20:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":93,"nodeType":"ExpressionStatement","src":"1163:31:1"}]},"documentation":{"id":65,"nodeType":"StructuredDocumentation","src":"624:358:1","text":" @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\n @param _endpoint The address of the LOCAL Layer Zero endpoint.\n @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\n @dev The delegate typically should be set as the owner of the contract."},"id":95,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"_endpoint","nameLocation":"1007:9:1","nodeType":"VariableDeclaration","scope":95,"src":"999:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"999:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":69,"mutability":"mutable","name":"_delegate","nameLocation":"1026:9:1","nodeType":"VariableDeclaration","scope":95,"src":"1018:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"998:38:1"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"1037:0:1"},"scope":175,"src":"987:214:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[569],"body":{"id":110,"nodeType":"Block","src":"1794:38:1","statements":[{"expression":{"arguments":[{"id":106,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1813:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":107,"name":"_peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1819:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":105,"name":"_setPeer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"1804:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"ExpressionStatement","src":"1804:21:1"}]},"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"1207:512:1","text":" @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n @param _eid The endpoint ID.\n @param _peer The address of the peer to be associated with the corresponding endpoint.\n @dev Only the owner/admin of the OApp can call this function.\n @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n @dev Set this to bytes32(0) to remove the peer address.\n @dev Peer is a bytes32 to accommodate non-evm chains."},"functionSelector":"3400288b","id":111,"implemented":true,"kind":"function","modifiers":[{"id":103,"kind":"modifierInvocation","modifierName":{"id":102,"name":"onlyOwner","nameLocations":["1784:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"1784:9:1"},"nodeType":"ModifierInvocation","src":"1784:9:1"}],"name":"setPeer","nameLocation":"1733:7:1","nodeType":"FunctionDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"_eid","nameLocation":"1748:4:1","nodeType":"VariableDeclaration","scope":111,"src":"1741:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":97,"name":"uint32","nodeType":"ElementaryTypeName","src":"1741:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"_peer","nameLocation":"1762:5:1","nodeType":"VariableDeclaration","scope":111,"src":"1754:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":99,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1754:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1740:28:1"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"1794:0:1"},"scope":175,"src":"1724:108:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":130,"nodeType":"Block","src":"2349:71:1","statements":[{"expression":{"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":119,"name":"peers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"2359:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"}},"id":121,"indexExpression":{"id":120,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"2365:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2359:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":122,"name":"_peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"2373:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2359:19:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":124,"nodeType":"ExpressionStatement","src":"2359:19:1"},{"eventCall":{"arguments":[{"id":126,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"2401:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":127,"name":"_peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"2407:5:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":125,"name":"PeerSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"2393:7:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2393:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"EmitStatement","src":"2388:25:1"}]},"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"1838:443:1","text":" @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n @param _eid The endpoint ID.\n @param _peer The address of the peer to be associated with the corresponding endpoint.\n @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\n @dev Set this to bytes32(0) to remove the peer address.\n @dev Peer is a bytes32 to accommodate non-evm chains."},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_setPeer","nameLocation":"2295:8:1","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"_eid","nameLocation":"2311:4:1","nodeType":"VariableDeclaration","scope":131,"src":"2304:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":113,"name":"uint32","nodeType":"ElementaryTypeName","src":"2304:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"_peer","nameLocation":"2325:5:1","nodeType":"VariableDeclaration","scope":131,"src":"2317:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2303:28:1"},"returnParameters":{"id":118,"nodeType":"ParameterList","parameters":[],"src":"2349:0:1"},"scope":175,"src":"2286:134:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":158,"nodeType":"Block","src":"2797:117:1","statements":[{"assignments":[140],"declarations":[{"constant":false,"id":140,"mutability":"mutable","name":"peer","nameLocation":"2815:4:1","nodeType":"VariableDeclaration","scope":158,"src":"2807:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2807:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":144,"initialValue":{"baseExpression":{"id":141,"name":"peers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"2822:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"}},"id":143,"indexExpression":{"id":142,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"2828:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2822:11:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2807:26:1"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":145,"name":"peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2847:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2863:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2855:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2855:7:1","typeDescriptions":{}}},"id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2847:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":155,"nodeType":"IfStatement","src":"2843:43:1","trueBody":{"errorCall":{"arguments":[{"id":152,"name":"_eid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"2881:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":151,"name":"NoPeer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"2874:6:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint32_$returns$__$","typeString":"function (uint32) pure"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":154,"nodeType":"RevertStatement","src":"2867:19:1"}},{"expression":{"id":156,"name":"peer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2903:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":138,"id":157,"nodeType":"Return","src":"2896:11:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"2426:287:1","text":" @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\n ie. the peer is set to bytes32(0).\n @param _eid The endpoint ID.\n @return peer The address of the peer associated with the specified endpoint."},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_getPeerOrRevert","nameLocation":"2727:16:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"_eid","nameLocation":"2751:4:1","nodeType":"VariableDeclaration","scope":159,"src":"2744:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":133,"name":"uint32","nodeType":"ElementaryTypeName","src":"2744:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2743:13:1"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"2788:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2788:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2787:9:1"},"scope":175,"src":"2718:196:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[575],"body":{"id":173,"nodeType":"Block","src":"3309:48:1","statements":[{"expression":{"arguments":[{"id":170,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3340:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":167,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"3319:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3328:11:1","memberName":"setDelegate","nodeType":"MemberAccess","referencedDeclaration":799,"src":"3319:20:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":172,"nodeType":"ExpressionStatement","src":"3319:31:1"}]},"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"2920:327:1","text":" @notice Sets the delegate address for the OApp.\n @param _delegate The address of the delegate to be set.\n @dev Only the owner/admin of the OApp can call this function.\n @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract."},"functionSelector":"ca5eb5e1","id":174,"implemented":true,"kind":"function","modifiers":[{"id":165,"kind":"modifierInvocation","modifierName":{"id":164,"name":"onlyOwner","nameLocations":["3299:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"3299:9:1"},"nodeType":"ModifierInvocation","src":"3299:9:1"}],"name":"setDelegate","nameLocation":"3261:11:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"_delegate","nameLocation":"3281:9:1","nodeType":"VariableDeclaration","scope":174,"src":"3273:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"3273:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3272:19:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"3309:0:1"},"scope":175,"src":"3252:105:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":176,"src":"330:3029:1","usedErrors":[524,528,530,532,1332,1337],"usedEvents":[538,1343]}],"src":"33:3327:1"},"id":1},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol","exportedSymbols":{"IOAppReceiver":[597],"OAppCore":[175],"OAppReceiver":[327],"Origin":[638]},"id":328,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":177,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:2"},{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol","file":"./interfaces/IOAppReceiver.sol","id":180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":328,"sourceUnit":598,"src":"59:71:2","symbolAliases":[{"foreign":{"id":178,"name":"IOAppReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"68:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":179,"name":"Origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"83:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol","file":"./OAppCore.sol","id":182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":328,"sourceUnit":176,"src":"131:42:2","symbolAliases":[{"foreign":{"id":181,"name":"OAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"140:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":184,"name":"IOAppReceiver","nameLocations":["355:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":597,"src":"355:13:2"},"id":185,"nodeType":"InheritanceSpecifier","src":"355:13:2"},{"baseName":{"id":186,"name":"OAppCore","nameLocations":["370:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"370:8:2"},"id":187,"nodeType":"InheritanceSpecifier","src":"370:8:2"}],"canonicalName":"OAppReceiver","contractDependencies":[],"contractKind":"contract","documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"175:145:2","text":" @title OAppReceiver\n @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers."},"fullyImplemented":false,"id":327,"linearizedBaseContracts":[327,175,1466,2153,576,597,836],"name":"OAppReceiver","nameLocation":"339:12:2","nodeType":"ContractDefinition","nodes":[{"errorSelector":"91ac5e4f","id":191,"name":"OnlyEndpoint","nameLocation":"471:12:2","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"addr","nameLocation":"492:4:2","nodeType":"VariableDeclaration","scope":191,"src":"484:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"484:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"483:14:2"},"src":"465:33:2"},{"constant":true,"id":194,"mutability":"constant","name":"RECEIVER_VERSION","nameLocation":"659:16:2","nodeType":"VariableDeclaration","scope":327,"src":"634:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":192,"name":"uint64","nodeType":"ElementaryTypeName","src":"634:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"32","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"678:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"baseFunctions":[546],"body":{"id":206,"nodeType":"Block","src":"1291:45:2","statements":[{"expression":{"components":[{"hexValue":"30","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1309:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":203,"name":"RECEIVER_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1312:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1308:21:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint64_$","typeString":"tuple(int_const 0,uint64)"}},"functionReturnParameters":201,"id":205,"nodeType":"Return","src":"1301:28:2"}]},"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"686:502:2","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol contract.\n @return receiverVersion The version of the OAppReceiver.sol contract.\n @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\n ie. this is a RECEIVE only OApp.\n @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions."},"functionSelector":"17442b70","id":207,"implemented":true,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"1202:11:2","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"1213:2:2"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"senderVersion","nameLocation":"1252:13:2","nodeType":"VariableDeclaration","scope":207,"src":"1245:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":197,"name":"uint64","nodeType":"ElementaryTypeName","src":"1245:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"receiverVersion","nameLocation":"1274:15:2","nodeType":"VariableDeclaration","scope":207,"src":"1267:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":199,"name":"uint64","nodeType":"ElementaryTypeName","src":"1267:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1244:46:2"},"scope":327,"src":"1193:143:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[596],"body":{"id":227,"nodeType":"Block","src":"2181:48:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":220,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2198:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":223,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2217:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_OAppReceiver_$327","typeString":"contract OAppReceiver"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OAppReceiver_$327","typeString":"contract OAppReceiver"}],"id":222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2209:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"2209:7:2","typeDescriptions":{}}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2198:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":219,"id":226,"nodeType":"Return","src":"2191:31:2"}]},"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"1342:666:2","text":" @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\n @dev _origin The origin information containing the source endpoint and sender address.\n  - srcEid: The source chain endpoint ID.\n  - sender: The sender address on the src chain.\n  - nonce: The nonce of the message.\n @dev _message The lzReceive payload.\n @param _sender The sender address.\n @return isSender Is a valid sender.\n @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\n @dev The default sender IS the OAppReceiver implementer."},"functionSelector":"82413eac","id":228,"implemented":true,"kind":"function","modifiers":[],"name":"isComposeMsgSender","nameLocation":"2022:18:2","nodeType":"FunctionDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"2050:15:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":210,"nodeType":"UserDefinedTypeName","pathNode":{"id":209,"name":"Origin","nameLocations":["2050:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"2050:6:2"},"referencedDeclaration":638,"src":"2050:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"2087:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":212,"name":"bytes","nodeType":"ElementaryTypeName","src":"2087:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"_sender","nameLocation":"2132:7:2","nodeType":"VariableDeclaration","scope":228,"src":"2124:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"2124:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2040:105:2"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"2175:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":217,"name":"bool","nodeType":"ElementaryTypeName","src":"2175:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2174:6:2"},"scope":327,"src":"2013:216:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[812],"body":{"id":245,"nodeType":"Block","src":"2859:61:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":237,"name":"peers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"2876:5:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint32_$_t_bytes32_$","typeString":"mapping(uint32 => bytes32)"}},"id":240,"indexExpression":{"expression":{"id":238,"name":"origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2882:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin calldata"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2889:6:2","memberName":"srcEid","nodeType":"MemberAccess","referencedDeclaration":633,"src":"2882:13:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2876:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":241,"name":"origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"2900:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin calldata"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2907:6:2","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":635,"src":"2900:13:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2876:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":236,"id":244,"nodeType":"Return","src":"2869:44:2"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"2235:531:2","text":" @notice Checks if the path initialization is allowed based on the provided origin.\n @param origin The origin information containing the source endpoint and sender address.\n @return Whether the path has been initialized.\n @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\n @dev This defaults to assuming if a peer has been set, its initialized.\n Can be overridden by the OApp if there is other logic to determine this."},"functionSelector":"ff7bd03d","id":246,"implemented":true,"kind":"function","modifiers":[],"name":"allowInitializePath","nameLocation":"2780:19:2","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"origin","nameLocation":"2816:6:2","nodeType":"VariableDeclaration","scope":246,"src":"2800:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":231,"nodeType":"UserDefinedTypeName","pathNode":{"id":230,"name":"Origin","nameLocations":["2800:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"2800:6:2"},"referencedDeclaration":638,"src":"2800:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"}],"src":"2799:24:2"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":246,"src":"2853:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":234,"name":"bool","nodeType":"ElementaryTypeName","src":"2853:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2852:6:2"},"scope":327,"src":"2771:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[821],"body":{"id":258,"nodeType":"Block","src":"3610:25:2","statements":[{"expression":{"hexValue":"30","id":256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3627:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":255,"id":257,"nodeType":"Return","src":"3620:8:2"}]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"2926:576:2","text":" @notice Retrieves the next nonce for a given source endpoint and sender address.\n @dev _srcEid The source endpoint ID.\n @dev _sender The sender address.\n @return nonce The next nonce.\n @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\n @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\n @dev This is also enforced by the OApp.\n @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0."},"functionSelector":"7d25a05e","id":259,"implemented":true,"kind":"function","modifiers":[],"name":"nextNonce","nameLocation":"3516:9:2","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":259,"src":"3526:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":248,"name":"uint32","nodeType":"ElementaryTypeName","src":"3526:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":259,"src":"3546:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3546:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3525:41:2"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"nonce","nameLocation":"3603:5:2","nodeType":"VariableDeclaration","scope":259,"src":"3596:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":253,"name":"uint64","nodeType":"ElementaryTypeName","src":"3596:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3595:14:2"},"scope":327,"src":"3507:128:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[835],"body":{"id":310,"nodeType":"Block","src":"4567:509:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":276,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"4681:8:2","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}],"id":275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4673:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"4673:7:2","typeDescriptions":{}}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4673:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":278,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4694:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4698:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4694:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4673:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4669:68:2","trueBody":{"errorCall":{"arguments":[{"expression":{"id":282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4726:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4730:6:2","memberName":"sender","nodeType":"MemberAccess","src":"4726:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":281,"name":"OnlyEndpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"4713:12:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4713:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"RevertStatement","src":"4706:31:2"}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":288,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"4854:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin calldata"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4862:6:2","memberName":"srcEid","nodeType":"MemberAccess","referencedDeclaration":633,"src":"4854:14:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":287,"name":"_getPeerOrRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"4837:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$returns$_t_bytes32_$","typeString":"function (uint32) view returns (bytes32)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4837:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":291,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"4873:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin calldata"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4881:6:2","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":635,"src":"4873:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4837:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":301,"nodeType":"IfStatement","src":"4833:103:2","trueBody":{"errorCall":{"arguments":[{"expression":{"id":295,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"4905:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin calldata"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4913:6:2","memberName":"srcEid","nodeType":"MemberAccess","referencedDeclaration":633,"src":"4905:14:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":297,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"4921:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin calldata"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4929:6:2","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":635,"src":"4921:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":294,"name":"OnlyPeer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"4896:8:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32) pure"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4896:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"RevertStatement","src":"4889:47:2"}},{"expression":{"arguments":[{"id":303,"name":"_origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"5021:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin calldata"}},{"id":304,"name":"_guid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"5030:5:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":305,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"5037:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":306,"name":"_executor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"5047:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":307,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"5058:10:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":302,"name":"_lzReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5010:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Origin_$638_calldata_ptr_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_address_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (struct Origin calldata,bytes32,bytes calldata,address,bytes calldata)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5010:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"5010:59:2"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"3641:722:2","text":" @dev Entry point for receiving messages or packets from the endpoint.\n @param _origin The origin information containing the source endpoint and sender address.\n  - srcEid: The source chain endpoint ID.\n  - sender: The sender address on the src chain.\n  - nonce: The nonce of the message.\n @param _guid The unique identifier for the received LayerZero message.\n @param _message The payload of the received message.\n @param _executor The address of the executor for the received message.\n @param _extraData Additional arbitrary data provided by the corresponding executor.\n @dev Entry point for receiving msg/packet from the LayerZero endpoint."},"functionSelector":"13137d65","id":311,"implemented":true,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"4377:9:2","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"_origin","nameLocation":"4412:7:2","nodeType":"VariableDeclaration","scope":311,"src":"4396:23:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":262,"nodeType":"UserDefinedTypeName","pathNode":{"id":261,"name":"Origin","nameLocations":["4396:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"4396:6:2"},"referencedDeclaration":638,"src":"4396:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"_guid","nameLocation":"4437:5:2","nodeType":"VariableDeclaration","scope":311,"src":"4429:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4429:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"_message","nameLocation":"4467:8:2","nodeType":"VariableDeclaration","scope":311,"src":"4452:23:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":266,"name":"bytes","nodeType":"ElementaryTypeName","src":"4452:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"_executor","nameLocation":"4493:9:2","nodeType":"VariableDeclaration","scope":311,"src":"4485:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"4485:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"_extraData","nameLocation":"4527:10:2","nodeType":"VariableDeclaration","scope":311,"src":"4512:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":270,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4386:157:2"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"4567:0:2"},"scope":327,"src":"4368:708:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"5082:126:2","text":" @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation."},"id":326,"implemented":false,"kind":"function","modifiers":[],"name":"_lzReceive","nameLocation":"5222:10:2","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"_origin","nameLocation":"5258:7:2","nodeType":"VariableDeclaration","scope":326,"src":"5242:23:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":314,"nodeType":"UserDefinedTypeName","pathNode":{"id":313,"name":"Origin","nameLocations":["5242:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"5242:6:2"},"referencedDeclaration":638,"src":"5242:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"_guid","nameLocation":"5283:5:2","nodeType":"VariableDeclaration","scope":326,"src":"5275:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5275:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"_message","nameLocation":"5313:8:2","nodeType":"VariableDeclaration","scope":326,"src":"5298:23:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":318,"name":"bytes","nodeType":"ElementaryTypeName","src":"5298:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"_executor","nameLocation":"5339:9:2","nodeType":"VariableDeclaration","scope":326,"src":"5331:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"_extraData","nameLocation":"5373:10:2","nodeType":"VariableDeclaration","scope":326,"src":"5358:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":322,"name":"bytes","nodeType":"ElementaryTypeName","src":"5358:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5232:157:2"},"returnParameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"5406:0:2"},"scope":327,"src":"5213:194:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":328,"src":"321:5088:2","usedErrors":[191,524,528,530,532,1332,1337],"usedEvents":[538,1343]}],"src":"33:5377:2"},"id":2},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol","exportedSymbols":{"IERC20":[1544],"MessagingFee":[631],"MessagingParams":[618],"MessagingReceipt":[626],"OAppCore":[175],"OAppSender":[513],"SafeERC20":[1870]},"id":514,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":329,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":332,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":514,"sourceUnit":1871,"src":"59:92:3","symbolAliases":[{"foreign":{"id":330,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"68:9:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":331,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"79:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","file":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","id":336,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":514,"sourceUnit":801,"src":"152:146:3","symbolAliases":[{"foreign":{"id":333,"name":"MessagingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"161:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":334,"name":"MessagingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"178:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":335,"name":"MessagingReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"192:16:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol","file":"./OAppCore.sol","id":338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":514,"sourceUnit":176,"src":"299:42:3","symbolAliases":[{"foreign":{"id":337,"name":"OAppCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"308:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":340,"name":"OAppCore","nameLocations":["518:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":175,"src":"518:8:3"},"id":341,"nodeType":"InheritanceSpecifier","src":"518:8:3"}],"canonicalName":"OAppSender","contractDependencies":[],"contractKind":"contract","documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"343:142:3","text":" @title OAppSender\n @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint."},"fullyImplemented":true,"id":513,"linearizedBaseContracts":[513,175,1466,2153,576],"name":"OAppSender","nameLocation":"504:10:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":345,"libraryName":{"id":342,"name":"SafeERC20","nameLocations":["539:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":1870,"src":"539:9:3"},"nodeType":"UsingForDirective","src":"533:27:3","typeName":{"id":344,"nodeType":"UserDefinedTypeName","pathNode":{"id":343,"name":"IERC20","nameLocations":["553:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":1544,"src":"553:6:3"},"referencedDeclaration":1544,"src":"553:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}}},{"errorSelector":"9f704120","id":349,"name":"NotEnoughNative","nameLocation":"601:15:3","nodeType":"ErrorDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"msgValue","nameLocation":"625:8:3","nodeType":"VariableDeclaration","scope":349,"src":"617:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"616:18:3"},"src":"595:40:3"},{"errorSelector":"5373352a","id":351,"name":"LzTokenUnavailable","nameLocation":"646:18:3","nodeType":"ErrorDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"664:2:3"},"src":"640:27:3"},{"constant":true,"id":354,"mutability":"constant","name":"SENDER_VERSION","nameLocation":"826:14:3","nodeType":"VariableDeclaration","scope":513,"src":"801:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":352,"name":"uint64","nodeType":"ElementaryTypeName","src":"801:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"31","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"baseFunctions":[546],"body":{"id":366,"nodeType":"Block","src":"1456:43:3","statements":[{"expression":{"components":[{"id":362,"name":"SENDER_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1474:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"30","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1490:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1473:19:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint64_$_t_rational_0_by_1_$","typeString":"tuple(uint64,int_const 0)"}},"functionReturnParameters":361,"id":365,"nodeType":"Return","src":"1466:26:3"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"851:502:3","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol contract.\n @return receiverVersion The version of the OAppReceiver.sol contract.\n @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\n ie. this is a SEND only OApp.\n @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions"},"functionSelector":"17442b70","id":367,"implemented":true,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"1367:11:3","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"1378:2:3"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"senderVersion","nameLocation":"1417:13:3","nodeType":"VariableDeclaration","scope":367,"src":"1410:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":357,"name":"uint64","nodeType":"ElementaryTypeName","src":"1410:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"receiverVersion","nameLocation":"1439:15:3","nodeType":"VariableDeclaration","scope":367,"src":"1432:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":359,"name":"uint64","nodeType":"ElementaryTypeName","src":"1432:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1409:46:3"},"scope":513,"src":"1358:141:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":399,"nodeType":"Block","src":"2230:199:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":385,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"2307:7:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":387,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"2333:7:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":386,"name":"_getPeerOrRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2316:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$returns$_t_bytes32_$","typeString":"function (uint32) view returns (bytes32)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":389,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2343:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":390,"name":"_options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"2353:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":391,"name":"_payInLzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2363:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":384,"name":"MessagingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"2291:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MessagingParams_$618_storage_ptr_$","typeString":"type(struct MessagingParams storage pointer)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2291:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$618_memory_ptr","typeString":"struct MessagingParams memory"}},{"arguments":[{"id":395,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2403:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_OAppSender_$513","typeString":"contract OAppSender"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OAppSender_$513","typeString":"contract OAppSender"}],"id":394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2395:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:3","typeDescriptions":{}}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2395:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MessagingParams_$618_memory_ptr","typeString":"struct MessagingParams memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":382,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"2259:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2268:5:3","memberName":"quote","nodeType":"MemberAccess","referencedDeclaration":712,"src":"2259:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_struct$_MessagingParams_$618_memory_ptr_$_t_address_$returns$_t_struct$_MessagingFee_$631_memory_ptr_$","typeString":"function (struct MessagingParams memory,address) view external returns (struct MessagingFee memory)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:163:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"}},"functionReturnParameters":381,"id":398,"nodeType":"Return","src":"2240:182:3"}]},"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"1505:528:3","text":" @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\n @param _dstEid The destination endpoint ID.\n @param _message The message payload.\n @param _options Additional options for the message.\n @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\n @return fee The calculated MessagingFee for the message.\n      - nativeFee: The native fee for the message.\n      - lzTokenFee: The LZ token fee for the message."},"id":400,"implemented":true,"kind":"function","modifiers":[],"name":"_quote","nameLocation":"2047:6:3","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"_dstEid","nameLocation":"2070:7:3","nodeType":"VariableDeclaration","scope":400,"src":"2063:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":369,"name":"uint32","nodeType":"ElementaryTypeName","src":"2063:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_message","nameLocation":"2100:8:3","nodeType":"VariableDeclaration","scope":400,"src":"2087:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":371,"name":"bytes","nodeType":"ElementaryTypeName","src":"2087:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"_options","nameLocation":"2131:8:3","nodeType":"VariableDeclaration","scope":400,"src":"2118:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":373,"name":"bytes","nodeType":"ElementaryTypeName","src":"2118:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"_payInLzToken","nameLocation":"2154:13:3","nodeType":"VariableDeclaration","scope":400,"src":"2149:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":375,"name":"bool","nodeType":"ElementaryTypeName","src":"2149:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2053:120:3"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"fee","nameLocation":"2225:3:3","nodeType":"VariableDeclaration","scope":400,"src":"2205:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":379,"nodeType":"UserDefinedTypeName","pathNode":{"id":378,"name":"MessagingFee","nameLocations":["2205:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":631,"src":"2205:12:3"},"referencedDeclaration":631,"src":"2205:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"src":"2204:25:3"},"scope":513,"src":"2038:391:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":454,"nodeType":"Block","src":"3422:532:3","statements":[{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"messageValue","nameLocation":"3562:12:3","nodeType":"VariableDeclaration","scope":454,"src":"3554:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":424,"initialValue":{"arguments":[{"expression":{"id":421,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3588:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"}},"id":422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3593:9:3","memberName":"nativeFee","nodeType":"MemberAccess","referencedDeclaration":628,"src":"3588:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":420,"name":"_payNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"3577:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) returns (uint256)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3554:49:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":425,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3617:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"}},"id":426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3622:10:3","memberName":"lzTokenFee","nodeType":"MemberAccess","referencedDeclaration":630,"src":"3617:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3635:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3617:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":434,"nodeType":"IfStatement","src":"3613:53:3","trueBody":{"expression":{"arguments":[{"expression":{"id":430,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3650:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"}},"id":431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3655:10:3","memberName":"lzTokenFee","nodeType":"MemberAccess","referencedDeclaration":630,"src":"3650:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":429,"name":"_payLzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3638:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3638:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"3638:28:3"}},{"expression":{"arguments":[{"arguments":[{"id":440,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3825:7:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":442,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3851:7:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":441,"name":"_getPeerOrRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3834:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$returns$_t_bytes32_$","typeString":"function (uint32) view returns (bytes32)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3834:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":444,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"3861:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":445,"name":"_options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"3871:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":446,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3881:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"}},"id":447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3886:10:3","memberName":"lzTokenFee","nodeType":"MemberAccess","referencedDeclaration":630,"src":"3881:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3899:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3881:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":439,"name":"MessagingParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3809:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MessagingParams_$618_storage_ptr_$","typeString":"type(struct MessagingParams storage pointer)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3809:92:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$618_memory_ptr","typeString":"struct MessagingParams memory"}},{"id":451,"name":"_refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3919:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MessagingParams_$618_memory_ptr","typeString":"struct MessagingParams memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MessagingParams_$618_memory_ptr","typeString":"struct MessagingParams memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":435,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"3755:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3764:4:3","memberName":"send","nodeType":"MemberAccess","referencedDeclaration":723,"src":"3755:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_MessagingParams_$618_memory_ptr_$_t_address_$returns$_t_struct$_MessagingReceipt_$626_memory_ptr_$","typeString":"function (struct MessagingParams memory,address) payable external returns (struct MessagingReceipt memory)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":437,"name":"messageValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"3777:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3755:36:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_MessagingParams_$618_memory_ptr_$_t_address_$returns$_t_struct$_MessagingReceipt_$626_memory_ptr_$value","typeString":"function (struct MessagingParams memory,address) payable external returns (struct MessagingReceipt memory)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3755:192:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_memory_ptr","typeString":"struct MessagingReceipt memory"}},"functionReturnParameters":417,"id":453,"nodeType":"Return","src":"3677:270:3"}]},"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"2435:748:3","text":" @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\n @param _dstEid The destination endpoint ID.\n @param _message The message payload.\n @param _options Additional options for the message.\n @param _fee The calculated LayerZero fee for the message.\n      - nativeFee: The native fee.\n      - lzTokenFee: The lzToken fee.\n @param _refundAddress The address to receive any excess fee values sent to the endpoint.\n @return receipt The receipt for the sent message.\n      - guid: The unique identifier for the sent message.\n      - nonce: The nonce of the sent message.\n      - fee: The LayerZero fee incurred for the message."},"id":455,"implemented":true,"kind":"function","modifiers":[],"name":"_lzSend","nameLocation":"3197:7:3","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"_dstEid","nameLocation":"3221:7:3","nodeType":"VariableDeclaration","scope":455,"src":"3214:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":402,"name":"uint32","nodeType":"ElementaryTypeName","src":"3214:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":405,"mutability":"mutable","name":"_message","nameLocation":"3251:8:3","nodeType":"VariableDeclaration","scope":455,"src":"3238:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":404,"name":"bytes","nodeType":"ElementaryTypeName","src":"3238:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"_options","nameLocation":"3282:8:3","nodeType":"VariableDeclaration","scope":455,"src":"3269:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":406,"name":"bytes","nodeType":"ElementaryTypeName","src":"3269:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"_fee","nameLocation":"3320:4:3","nodeType":"VariableDeclaration","scope":455,"src":"3300:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":409,"nodeType":"UserDefinedTypeName","pathNode":{"id":408,"name":"MessagingFee","nameLocations":["3300:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":631,"src":"3300:12:3"},"referencedDeclaration":631,"src":"3300:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"_refundAddress","nameLocation":"3342:14:3","nodeType":"VariableDeclaration","scope":455,"src":"3334:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3334:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:158:3"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"receipt","nameLocation":"3413:7:3","nodeType":"VariableDeclaration","scope":455,"src":"3389:31:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_memory_ptr","typeString":"struct MessagingReceipt"},"typeName":{"id":415,"nodeType":"UserDefinedTypeName","pathNode":{"id":414,"name":"MessagingReceipt","nameLocations":["3389:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":626,"src":"3389:16:3"},"referencedDeclaration":626,"src":"3389:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_storage_ptr","typeString":"struct MessagingReceipt"}},"visibility":"internal"}],"src":"3388:33:3"},"scope":513,"src":"3188:766:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":475,"nodeType":"Block","src":"4735:106:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4749:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4753:5:3","memberName":"value","nodeType":"MemberAccess","src":"4749:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":465,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"4762:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4749:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":472,"nodeType":"IfStatement","src":"4745:62:3","trueBody":{"errorCall":{"arguments":[{"expression":{"id":468,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4797:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4801:5:3","memberName":"value","nodeType":"MemberAccess","src":"4797:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"NotEnoughNative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4781:15:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4781:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"RevertStatement","src":"4774:33:3"}},{"expression":{"id":473,"name":"_nativeFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"4824:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":462,"id":474,"nodeType":"Return","src":"4817:17:3"}]},"documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"3960:685:3","text":" @dev Internal function to pay the native fee associated with the message.\n @param _nativeFee The native fee to be paid.\n @return nativeFee The amount of native currency paid.\n @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\n this will need to be overridden because msg.value would contain multiple lzFees.\n @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\n @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\n @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time."},"id":476,"implemented":true,"kind":"function","modifiers":[],"name":"_payNative","nameLocation":"4659:10:3","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":458,"mutability":"mutable","name":"_nativeFee","nameLocation":"4678:10:3","nodeType":"VariableDeclaration","scope":476,"src":"4670:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"4670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4669:20:3"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"nativeFee","nameLocation":"4724:9:3","nodeType":"VariableDeclaration","scope":476,"src":"4716:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"4716:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4715:19:3"},"scope":513,"src":"4650:191:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":511,"nodeType":"Block","src":"5277:351:3","statements":[{"assignments":[483],"declarations":[{"constant":false,"id":483,"mutability":"mutable","name":"lzToken","nameLocation":"5379:7:3","nodeType":"VariableDeclaration","scope":511,"src":"5371:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"5371:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":487,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":484,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"5389:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5398:7:3","memberName":"lzToken","nodeType":"MemberAccess","referencedDeclaration":789,"src":"5389:16:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5371:36:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":488,"name":"lzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5421:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5440:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5432:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"5432:7:3","typeDescriptions":{}}},"id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":497,"nodeType":"IfStatement","src":"5417:54:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":494,"name":"LzTokenUnavailable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5451:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5451:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"RevertStatement","src":"5444:27:3"}},{"expression":{"arguments":[{"expression":{"id":502,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5578:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5582:6:3","memberName":"sender","nodeType":"MemberAccess","src":"5578:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":506,"name":"endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"5598:8:3","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}],"id":505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5590:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"5590:7:3","typeDescriptions":{}}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5590:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":508,"name":"_lzTokenFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"5609:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":499,"name":"lzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5552:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"5545:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1544_$","typeString":"type(contract IERC20)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5561:16:3","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"5545:32:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1544_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1544_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:76:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"5545:76:3"}]},"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"4847:366:3","text":" @dev Internal function to pay the LZ token fee associated with the message.\n @param _lzTokenFee The LZ token fee to be paid.\n @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\n @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend()."},"id":512,"implemented":true,"kind":"function","modifiers":[],"name":"_payLzToken","nameLocation":"5227:11:3","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"_lzTokenFee","nameLocation":"5247:11:3","nodeType":"VariableDeclaration","scope":512,"src":"5239:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"5239:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5238:21:3"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"5277:0:3"},"scope":513,"src":"5218:410:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":514,"src":"486:5144:3","usedErrors":[349,351,524,528,530,532,1332,1337],"usedEvents":[538,1343]}],"src":"33:5598:3"},"id":3},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol","exportedSymbols":{"ILayerZeroEndpointV2":[800],"IOAppCore":[576]},"id":577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":515,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:4"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","file":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","id":517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":577,"sourceUnit":801,"src":"59:119:4","symbolAliases":[{"foreign":{"id":516,"name":"ILayerZeroEndpointV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"68:20:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IOAppCore","contractDependencies":[],"contractKind":"interface","documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"180:27:4","text":" @title IOAppCore"},"fullyImplemented":false,"id":576,"linearizedBaseContracts":[576],"name":"IOAppCore","nameLocation":"218:9:4","nodeType":"ContractDefinition","nodes":[{"errorSelector":"c26bebcc","id":524,"name":"OnlyPeer","nameLocation":"269:8:4","nodeType":"ErrorDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"eid","nameLocation":"285:3:4","nodeType":"VariableDeclaration","scope":524,"src":"278:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":519,"name":"uint32","nodeType":"ElementaryTypeName","src":"278:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"sender","nameLocation":"298:6:4","nodeType":"VariableDeclaration","scope":524,"src":"290:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"290:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"277:28:4"},"src":"263:43:4"},{"errorSelector":"f6ff4fb7","id":528,"name":"NoPeer","nameLocation":"317:6:4","nodeType":"ErrorDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"eid","nameLocation":"331:3:4","nodeType":"VariableDeclaration","scope":528,"src":"324:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":525,"name":"uint32","nodeType":"ElementaryTypeName","src":"324:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"323:12:4"},"src":"311:25:4"},{"errorSelector":"0fbdec0a","id":530,"name":"InvalidEndpointCall","nameLocation":"347:19:4","nodeType":"ErrorDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"366:2:4"},"src":"341:28:4"},{"errorSelector":"b5863604","id":532,"name":"InvalidDelegate","nameLocation":"380:15:4","nodeType":"ErrorDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"395:2:4"},"src":"374:24:4"},{"anonymous":false,"eventSelector":"238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b","id":538,"name":"PeerSet","nameLocation":"486:7:4","nodeType":"EventDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"501:3:4","nodeType":"VariableDeclaration","scope":538,"src":"494:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":533,"name":"uint32","nodeType":"ElementaryTypeName","src":"494:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":536,"indexed":false,"mutability":"mutable","name":"peer","nameLocation":"514:4:4","nodeType":"VariableDeclaration","scope":538,"src":"506:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"506:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"493:26:4"},"src":"480:40:4"},{"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"526:216:4","text":" @notice Retrieves the OApp version information.\n @return senderVersion The version of the OAppSender.sol contract.\n @return receiverVersion The version of the OAppReceiver.sol contract."},"functionSelector":"17442b70","id":546,"implemented":false,"kind":"function","modifiers":[],"name":"oAppVersion","nameLocation":"756:11:4","nodeType":"FunctionDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[],"src":"767:2:4"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"senderVersion","nameLocation":"800:13:4","nodeType":"VariableDeclaration","scope":546,"src":"793:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":541,"name":"uint64","nodeType":"ElementaryTypeName","src":"793:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"receiverVersion","nameLocation":"822:15:4","nodeType":"VariableDeclaration","scope":546,"src":"815:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":543,"name":"uint64","nodeType":"ElementaryTypeName","src":"815:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"792:46:4"},"scope":576,"src":"747:92:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"845:150:4","text":" @notice Retrieves the LayerZero endpoint associated with the OApp.\n @return iEndpoint The LayerZero endpoint as an interface."},"functionSelector":"5e280f11","id":553,"implemented":false,"kind":"function","modifiers":[],"name":"endpoint","nameLocation":"1009:8:4","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"1017:2:4"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"iEndpoint","nameLocation":"1064:9:4","nodeType":"VariableDeclaration","scope":553,"src":"1043:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"},"typeName":{"id":550,"nodeType":"UserDefinedTypeName","pathNode":{"id":549,"name":"ILayerZeroEndpointV2","nameLocations":["1043:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":800,"src":"1043:20:4"},"referencedDeclaration":800,"src":"1043:20:4","typeDescriptions":{"typeIdentifier":"t_contract$_ILayerZeroEndpointV2_$800","typeString":"contract ILayerZeroEndpointV2"}},"visibility":"internal"}],"src":"1042:32:4"},"scope":576,"src":"1000:75:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1081:227:4","text":" @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\n @param _eid The endpoint ID.\n @return peer The peer address (OApp instance) associated with the corresponding endpoint."},"functionSelector":"bb0b6a53","id":561,"implemented":false,"kind":"function","modifiers":[],"name":"peers","nameLocation":"1322:5:4","nodeType":"FunctionDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"_eid","nameLocation":"1335:4:4","nodeType":"VariableDeclaration","scope":561,"src":"1328:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":555,"name":"uint32","nodeType":"ElementaryTypeName","src":"1328:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1327:13:4"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"peer","nameLocation":"1372:4:4","nodeType":"VariableDeclaration","scope":561,"src":"1364:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1364:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1363:14:4"},"scope":576,"src":"1313:65:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"1384:224:4","text":" @notice Sets the peer address (OApp instance) for a corresponding endpoint.\n @param _eid The endpoint ID.\n @param _peer The address of the peer to be associated with the corresponding endpoint."},"functionSelector":"3400288b","id":569,"implemented":false,"kind":"function","modifiers":[],"name":"setPeer","nameLocation":"1622:7:4","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"_eid","nameLocation":"1637:4:4","nodeType":"VariableDeclaration","scope":569,"src":"1630:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":563,"name":"uint32","nodeType":"ElementaryTypeName","src":"1630:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"_peer","nameLocation":"1651:5:4","nodeType":"VariableDeclaration","scope":569,"src":"1643:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1643:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1629:28:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"1666:0:4"},"scope":576,"src":"1613:54:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"1673:134:4","text":" @notice Sets the delegate address for the OApp Core.\n @param _delegate The address of the delegate to be set."},"functionSelector":"ca5eb5e1","id":575,"implemented":false,"kind":"function","modifiers":[],"name":"setDelegate","nameLocation":"1821:11:4","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"_delegate","nameLocation":"1841:9:4","nodeType":"VariableDeclaration","scope":575,"src":"1833:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"1833:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1832:19:4"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"1860:0:4"},"scope":576,"src":"1812:49:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":577,"src":"208:1655:4","usedErrors":[524,528,530,532],"usedEvents":[538]}],"src":"33:1831:4"},"id":4},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[836],"IOAppReceiver":[597],"Origin":[638]},"id":598,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":578,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol","file":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol","id":581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":598,"sourceUnit":837,"src":"58:123:5","symbolAliases":[{"foreign":{"id":579,"name":"ILayerZeroReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"67:18:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":580,"name":"Origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"87:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":582,"name":"ILayerZeroReceiver","nameLocations":["210:18:5"],"nodeType":"IdentifierPath","referencedDeclaration":836,"src":"210:18:5"},"id":583,"nodeType":"InheritanceSpecifier","src":"210:18:5"}],"canonicalName":"IOAppReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":597,"linearizedBaseContracts":[597,836],"name":"IOAppReceiver","nameLocation":"193:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"235:670:5","text":" @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\n @param _origin The origin information containing the source endpoint and sender address.\n  - srcEid: The source chain endpoint ID.\n  - sender: The sender address on the src chain.\n  - nonce: The nonce of the message.\n @param _message The lzReceive payload.\n @param _sender The sender address.\n @return isSender Is a valid sender.\n @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\n @dev The default sender IS the OAppReceiver implementer."},"functionSelector":"82413eac","id":596,"implemented":false,"kind":"function","modifiers":[],"name":"isComposeMsgSender","nameLocation":"919:18:5","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"_origin","nameLocation":"963:7:5","nodeType":"VariableDeclaration","scope":596,"src":"947:23:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":586,"nodeType":"UserDefinedTypeName","pathNode":{"id":585,"name":"Origin","nameLocations":["947:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"947:6:5"},"referencedDeclaration":638,"src":"947:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"_message","nameLocation":"995:8:5","nodeType":"VariableDeclaration","scope":596,"src":"980:23:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"980:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"_sender","nameLocation":"1021:7:5","nodeType":"VariableDeclaration","scope":596,"src":"1013:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"1013:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"937:97:5"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"isSender","nameLocation":"1063:8:5","nodeType":"VariableDeclaration","scope":596,"src":"1058:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":593,"name":"bool","nodeType":"ElementaryTypeName","src":"1058:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1057:15:5"},"scope":597,"src":"910:163:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":598,"src":"183:892:5","usedErrors":[],"usedEvents":[]}],"src":"32:1044:5"},"id":5},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","exportedSymbols":{"ILayerZeroEndpointV2":[800],"IMessageLibManager":[1081],"IMessagingChannel":[1217],"IMessagingComposer":[1303],"IMessagingContext":[1318],"MessagingFee":[631],"MessagingParams":[618],"MessagingReceipt":[626],"Origin":[638]},"id":801,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":599,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol","file":"./IMessageLibManager.sol","id":601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":801,"sourceUnit":1082,"src":"59:62:6","symbolAliases":[{"foreign":{"id":600,"name":"IMessageLibManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"68:18:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol","file":"./IMessagingComposer.sol","id":603,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":801,"sourceUnit":1304,"src":"122:62:6","symbolAliases":[{"foreign":{"id":602,"name":"IMessagingComposer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"131:18:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol","file":"./IMessagingChannel.sol","id":605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":801,"sourceUnit":1218,"src":"185:60:6","symbolAliases":[{"foreign":{"id":604,"name":"IMessagingChannel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"194:17:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol","file":"./IMessagingContext.sol","id":607,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":801,"sourceUnit":1319,"src":"246:60:6","symbolAliases":[{"foreign":{"id":606,"name":"IMessagingContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"255:17:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"MessagingParams","id":618,"members":[{"constant":false,"id":609,"mutability":"mutable","name":"dstEid","nameLocation":"344:6:6","nodeType":"VariableDeclaration","scope":618,"src":"337:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":608,"name":"uint32","nodeType":"ElementaryTypeName","src":"337:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"receiver","nameLocation":"364:8:6","nodeType":"VariableDeclaration","scope":618,"src":"356:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":610,"name":"bytes32","nodeType":"ElementaryTypeName","src":"356:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"message","nameLocation":"384:7:6","nodeType":"VariableDeclaration","scope":618,"src":"378:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":612,"name":"bytes","nodeType":"ElementaryTypeName","src":"378:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"options","nameLocation":"403:7:6","nodeType":"VariableDeclaration","scope":618,"src":"397:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":614,"name":"bytes","nodeType":"ElementaryTypeName","src":"397:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"payInLzToken","nameLocation":"421:12:6","nodeType":"VariableDeclaration","scope":618,"src":"416:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":616,"name":"bool","nodeType":"ElementaryTypeName","src":"416:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MessagingParams","nameLocation":"315:15:6","nodeType":"StructDefinition","scope":801,"src":"308:128:6","visibility":"public"},{"canonicalName":"MessagingReceipt","id":626,"members":[{"constant":false,"id":620,"mutability":"mutable","name":"guid","nameLocation":"476:4:6","nodeType":"VariableDeclaration","scope":626,"src":"468:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"468:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"nonce","nameLocation":"493:5:6","nodeType":"VariableDeclaration","scope":626,"src":"486:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":621,"name":"uint64","nodeType":"ElementaryTypeName","src":"486:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"fee","nameLocation":"517:3:6","nodeType":"VariableDeclaration","scope":626,"src":"504:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_storage_ptr","typeString":"struct MessagingFee"},"typeName":{"id":624,"nodeType":"UserDefinedTypeName","pathNode":{"id":623,"name":"MessagingFee","nameLocations":["504:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":631,"src":"504:12:6"},"referencedDeclaration":631,"src":"504:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"name":"MessagingReceipt","nameLocation":"445:16:6","nodeType":"StructDefinition","scope":801,"src":"438:85:6","visibility":"public"},{"canonicalName":"MessagingFee","id":631,"members":[{"constant":false,"id":628,"mutability":"mutable","name":"nativeFee","nameLocation":"559:9:6","nodeType":"VariableDeclaration","scope":631,"src":"551:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"lzTokenFee","nameLocation":"582:10:6","nodeType":"VariableDeclaration","scope":631,"src":"574:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"MessagingFee","nameLocation":"532:12:6","nodeType":"StructDefinition","scope":801,"src":"525:70:6","visibility":"public"},{"canonicalName":"Origin","id":638,"members":[{"constant":false,"id":633,"mutability":"mutable","name":"srcEid","nameLocation":"624:6:6","nodeType":"VariableDeclaration","scope":638,"src":"617:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":632,"name":"uint32","nodeType":"ElementaryTypeName","src":"617:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"sender","nameLocation":"644:6:6","nodeType":"VariableDeclaration","scope":638,"src":"636:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"636:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"nonce","nameLocation":"663:5:6","nodeType":"VariableDeclaration","scope":638,"src":"656:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":636,"name":"uint64","nodeType":"ElementaryTypeName","src":"656:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Origin","nameLocation":"604:6:6","nodeType":"StructDefinition","scope":801,"src":"597:74:6","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":639,"name":"IMessageLibManager","nameLocations":["707:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1081,"src":"707:18:6"},"id":640,"nodeType":"InheritanceSpecifier","src":"707:18:6"},{"baseName":{"id":641,"name":"IMessagingComposer","nameLocations":["727:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"727:18:6"},"id":642,"nodeType":"InheritanceSpecifier","src":"727:18:6"},{"baseName":{"id":643,"name":"IMessagingChannel","nameLocations":["747:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":1217,"src":"747:17:6"},"id":644,"nodeType":"InheritanceSpecifier","src":"747:17:6"},{"baseName":{"id":645,"name":"IMessagingContext","nameLocations":["766:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"766:17:6"},"id":646,"nodeType":"InheritanceSpecifier","src":"766:17:6"}],"canonicalName":"ILayerZeroEndpointV2","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":800,"linearizedBaseContracts":[800,1318,1217,1303,1081],"name":"ILayerZeroEndpointV2","nameLocation":"683:20:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"1ab700d4ced0c005b164c0f789fd09fcbb0156d4c2041b8a3bfbcd961cd1567f","id":654,"name":"PacketSent","nameLocation":"796:10:6","nodeType":"EventDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"indexed":false,"mutability":"mutable","name":"encodedPayload","nameLocation":"813:14:6","nodeType":"VariableDeclaration","scope":654,"src":"807:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":647,"name":"bytes","nodeType":"ElementaryTypeName","src":"807:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":650,"indexed":false,"mutability":"mutable","name":"options","nameLocation":"835:7:6","nodeType":"VariableDeclaration","scope":654,"src":"829:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":649,"name":"bytes","nodeType":"ElementaryTypeName","src":"829:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":652,"indexed":false,"mutability":"mutable","name":"sendLibrary","nameLocation":"852:11:6","nodeType":"VariableDeclaration","scope":654,"src":"844:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"844:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"806:58:6"},"src":"790:75:6"},{"anonymous":false,"eventSelector":"0d87345f3d1c929caba93e1c3821b54ff3512e12b66aa3cfe54b6bcbc17e59b4","id":663,"name":"PacketVerified","nameLocation":"877:14:6","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":663,"src":"892:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_memory_ptr","typeString":"struct Origin"},"typeName":{"id":656,"nodeType":"UserDefinedTypeName","pathNode":{"id":655,"name":"Origin","nameLocations":["892:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"892:6:6"},"referencedDeclaration":638,"src":"892:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"915:8:6","nodeType":"VariableDeclaration","scope":663,"src":"907:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"payloadHash","nameLocation":"933:11:6","nodeType":"VariableDeclaration","scope":663,"src":"925:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":660,"name":"bytes32","nodeType":"ElementaryTypeName","src":"925:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"891:54:6"},"src":"871:75:6"},{"anonymous":false,"eventSelector":"3cd5e48f9730b129dc7550f0fcea9c767b7be37837cd10e55eb35f734f4bca04","id":670,"name":"PacketDelivered","nameLocation":"958:15:6","nodeType":"EventDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"981:6:6","nodeType":"VariableDeclaration","scope":670,"src":"974:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_memory_ptr","typeString":"struct Origin"},"typeName":{"id":665,"nodeType":"UserDefinedTypeName","pathNode":{"id":664,"name":"Origin","nameLocations":["974:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"974:6:6"},"referencedDeclaration":638,"src":"974:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"997:8:6","nodeType":"VariableDeclaration","scope":670,"src":"989:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"989:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:33:6"},"src":"952:55:6"},{"anonymous":false,"eventSelector":"7edfa10fe10193301ad8a8bea7e968c7bcabcc64981f368e3aeada40ce26ae2c","id":691,"name":"LzReceiveAlert","nameLocation":"1019:14:6","nodeType":"EventDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"1059:8:6","nodeType":"VariableDeclaration","scope":691,"src":"1043:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":674,"indexed":true,"mutability":"mutable","name":"executor","nameLocation":"1093:8:6","nodeType":"VariableDeclaration","scope":691,"src":"1077:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"1118:6:6","nodeType":"VariableDeclaration","scope":691,"src":"1111:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_memory_ptr","typeString":"struct Origin"},"typeName":{"id":676,"nodeType":"UserDefinedTypeName","pathNode":{"id":675,"name":"Origin","nameLocations":["1111:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"1111:6:6"},"referencedDeclaration":638,"src":"1111:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":679,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"1142:4:6","nodeType":"VariableDeclaration","scope":691,"src":"1134:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1134:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":681,"indexed":false,"mutability":"mutable","name":"gas","nameLocation":"1164:3:6","nodeType":"VariableDeclaration","scope":691,"src":"1156:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":683,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1185:5:6","nodeType":"VariableDeclaration","scope":691,"src":"1177:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":685,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1206:7:6","nodeType":"VariableDeclaration","scope":691,"src":"1200:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":684,"name":"bytes","nodeType":"ElementaryTypeName","src":"1200:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":687,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"1229:9:6","nodeType":"VariableDeclaration","scope":691,"src":"1223:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":686,"name":"bytes","nodeType":"ElementaryTypeName","src":"1223:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":689,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1254:6:6","nodeType":"VariableDeclaration","scope":691,"src":"1248:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":688,"name":"bytes","nodeType":"ElementaryTypeName","src":"1248:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1033:233:6"},"src":"1013:254:6"},{"anonymous":false,"eventSelector":"d476ec5ec1ac11cec3714d41e7ea49419471aceb9bd0dff1becfc3e363a62396","id":695,"name":"LzTokenSet","nameLocation":"1279:10:6","nodeType":"EventDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"1298:5:6","nodeType":"VariableDeclaration","scope":695,"src":"1290:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1289:15:6"},"src":"1273:32:6"},{"anonymous":false,"eventSelector":"6ee10e9ed4d6ce9742703a498707862f4b00f1396a87195eb93267b3d7983981","id":701,"name":"DelegateSet","nameLocation":"1317:11:6","nodeType":"EventDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1337:6:6","nodeType":"VariableDeclaration","scope":701,"src":"1329:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"indexed":false,"mutability":"mutable","name":"delegate","nameLocation":"1353:8:6","nodeType":"VariableDeclaration","scope":701,"src":"1345:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1328:34:6"},"src":"1311:52:6"},{"functionSelector":"ddc28c58","id":712,"implemented":false,"kind":"function","modifiers":[],"name":"quote","nameLocation":"1378:5:6","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"_params","nameLocation":"1409:7:6","nodeType":"VariableDeclaration","scope":712,"src":"1384:32:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$618_calldata_ptr","typeString":"struct MessagingParams"},"typeName":{"id":703,"nodeType":"UserDefinedTypeName","pathNode":{"id":702,"name":"MessagingParams","nameLocations":["1384:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":618,"src":"1384:15:6"},"referencedDeclaration":618,"src":"1384:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$618_storage_ptr","typeString":"struct MessagingParams"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"_sender","nameLocation":"1426:7:6","nodeType":"VariableDeclaration","scope":712,"src":"1418:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"1418:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1383:51:6"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"1458:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":709,"nodeType":"UserDefinedTypeName","pathNode":{"id":708,"name":"MessagingFee","nameLocations":["1458:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":631,"src":"1458:12:6"},"referencedDeclaration":631,"src":"1458:12:6","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"src":"1457:21:6"},"scope":800,"src":"1369:110:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2637a450","id":723,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"1494:4:6","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"_params","nameLocation":"1533:7:6","nodeType":"VariableDeclaration","scope":723,"src":"1508:32:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$618_calldata_ptr","typeString":"struct MessagingParams"},"typeName":{"id":714,"nodeType":"UserDefinedTypeName","pathNode":{"id":713,"name":"MessagingParams","nameLocations":["1508:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":618,"src":"1508:15:6"},"referencedDeclaration":618,"src":"1508:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingParams_$618_storage_ptr","typeString":"struct MessagingParams"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"_refundAddress","nameLocation":"1558:14:6","nodeType":"VariableDeclaration","scope":723,"src":"1550:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"1550:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1498:80:6"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"1605:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_memory_ptr","typeString":"struct MessagingReceipt"},"typeName":{"id":720,"nodeType":"UserDefinedTypeName","pathNode":{"id":719,"name":"MessagingReceipt","nameLocations":["1605:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":626,"src":"1605:16:6"},"referencedDeclaration":626,"src":"1605:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_storage_ptr","typeString":"struct MessagingReceipt"}},"visibility":"internal"}],"src":"1604:25:6"},"scope":800,"src":"1485:145:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a825d747","id":733,"implemented":false,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1645:6:6","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"_origin","nameLocation":"1668:7:6","nodeType":"VariableDeclaration","scope":733,"src":"1652:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":725,"nodeType":"UserDefinedTypeName","pathNode":{"id":724,"name":"Origin","nameLocations":["1652:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"1652:6:6"},"referencedDeclaration":638,"src":"1652:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"_receiver","nameLocation":"1685:9:6","nodeType":"VariableDeclaration","scope":733,"src":"1677:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":727,"name":"address","nodeType":"ElementaryTypeName","src":"1677:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"_payloadHash","nameLocation":"1704:12:6","nodeType":"VariableDeclaration","scope":733,"src":"1696:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1696:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1651:66:6"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"1726:0:6"},"scope":800,"src":"1636:91:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c9a54a99","id":743,"implemented":false,"kind":"function","modifiers":[],"name":"verifiable","nameLocation":"1742:10:6","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"_origin","nameLocation":"1769:7:6","nodeType":"VariableDeclaration","scope":743,"src":"1753:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":735,"nodeType":"UserDefinedTypeName","pathNode":{"id":734,"name":"Origin","nameLocations":["1753:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"1753:6:6"},"referencedDeclaration":638,"src":"1753:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"_receiver","nameLocation":"1786:9:6","nodeType":"VariableDeclaration","scope":743,"src":"1778:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"1778:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1752:44:6"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":743,"src":"1820:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":740,"name":"bool","nodeType":"ElementaryTypeName","src":"1820:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1819:6:6"},"scope":800,"src":"1733:93:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"861e1ca5","id":753,"implemented":false,"kind":"function","modifiers":[],"name":"initializable","nameLocation":"1841:13:6","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"_origin","nameLocation":"1871:7:6","nodeType":"VariableDeclaration","scope":753,"src":"1855:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":745,"nodeType":"UserDefinedTypeName","pathNode":{"id":744,"name":"Origin","nameLocations":["1855:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"1855:6:6"},"referencedDeclaration":638,"src":"1855:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"_receiver","nameLocation":"1888:9:6","nodeType":"VariableDeclaration","scope":753,"src":"1880:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1854:44:6"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"1922:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":750,"name":"bool","nodeType":"ElementaryTypeName","src":"1922:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1921:6:6"},"scope":800,"src":"1832:96:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0c0c389e","id":767,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"1943:9:6","nodeType":"FunctionDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"_origin","nameLocation":"1978:7:6","nodeType":"VariableDeclaration","scope":767,"src":"1962:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":755,"nodeType":"UserDefinedTypeName","pathNode":{"id":754,"name":"Origin","nameLocations":["1962:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"1962:6:6"},"referencedDeclaration":638,"src":"1962:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"_receiver","nameLocation":"2003:9:6","nodeType":"VariableDeclaration","scope":767,"src":"1995:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"1995:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"_guid","nameLocation":"2030:5:6","nodeType":"VariableDeclaration","scope":767,"src":"2022:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2022:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"_message","nameLocation":"2060:8:6","nodeType":"VariableDeclaration","scope":767,"src":"2045:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":761,"name":"bytes","nodeType":"ElementaryTypeName","src":"2045:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"_extraData","nameLocation":"2093:10:6","nodeType":"VariableDeclaration","scope":767,"src":"2078:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":763,"name":"bytes","nodeType":"ElementaryTypeName","src":"2078:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1952:157:6"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[],"src":"2126:0:6"},"scope":800,"src":"1934:193:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"2a56c1b0","id":779,"implemented":false,"kind":"function","modifiers":[],"name":"clear","nameLocation":"2269:5:6","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"_oapp","nameLocation":"2283:5:6","nodeType":"VariableDeclaration","scope":779,"src":"2275:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2275:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"_origin","nameLocation":"2306:7:6","nodeType":"VariableDeclaration","scope":779,"src":"2290:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":771,"nodeType":"UserDefinedTypeName","pathNode":{"id":770,"name":"Origin","nameLocations":["2290:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"2290:6:6"},"referencedDeclaration":638,"src":"2290:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"_guid","nameLocation":"2323:5:6","nodeType":"VariableDeclaration","scope":779,"src":"2315:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2315:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"_message","nameLocation":"2345:8:6","nodeType":"VariableDeclaration","scope":779,"src":"2330:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":775,"name":"bytes","nodeType":"ElementaryTypeName","src":"2330:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2274:80:6"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[],"src":"2363:0:6"},"scope":800,"src":"2260:104:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c28e0eed","id":784,"implemented":false,"kind":"function","modifiers":[],"name":"setLzToken","nameLocation":"2379:10:6","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"_lzToken","nameLocation":"2398:8:6","nodeType":"VariableDeclaration","scope":784,"src":"2390:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":780,"name":"address","nodeType":"ElementaryTypeName","src":"2390:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2389:18:6"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"2416:0:6"},"scope":800,"src":"2370:47:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e4fe1d94","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"lzToken","nameLocation":"2432:7:6","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"2439:2:6"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"2465:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:9:6"},"scope":800,"src":"2423:51:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e1758bd8","id":794,"implemented":false,"kind":"function","modifiers":[],"name":"nativeToken","nameLocation":"2489:11:6","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"2500:2:6"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":794,"src":"2526:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"2526:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2525:9:6"},"scope":800,"src":"2480:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ca5eb5e1","id":799,"implemented":false,"kind":"function","modifiers":[],"name":"setDelegate","nameLocation":"2550:11:6","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"_delegate","nameLocation":"2570:9:6","nodeType":"VariableDeclaration","scope":799,"src":"2562:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"2562:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2561:19:6"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[],"src":"2589:0:6"},"scope":800,"src":"2541:49:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":801,"src":"673:1919:6","usedErrors":[],"usedEvents":[654,663,670,691,695,701,854,860,866,874,882,890,900,1093,1105,1117,1231,1241,1263]}],"src":"33:2560:6"},"id":6},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol","exportedSymbols":{"ILayerZeroReceiver":[836],"Origin":[638]},"id":837,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":802,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:7"},{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol","file":"./ILayerZeroEndpointV2.sol","id":804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":837,"sourceUnit":801,"src":"59:52:7","symbolAliases":[{"foreign":{"id":803,"name":"Origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"68:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ILayerZeroReceiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":836,"linearizedBaseContracts":[836],"name":"ILayerZeroReceiver","nameLocation":"123:18:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"ff7bd03d","id":812,"implemented":false,"kind":"function","modifiers":[],"name":"allowInitializePath","nameLocation":"157:19:7","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"_origin","nameLocation":"193:7:7","nodeType":"VariableDeclaration","scope":812,"src":"177:23:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":806,"nodeType":"UserDefinedTypeName","pathNode":{"id":805,"name":"Origin","nameLocations":["177:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"177:6:7"},"referencedDeclaration":638,"src":"177:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"}],"src":"176:25:7"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"225:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":809,"name":"bool","nodeType":"ElementaryTypeName","src":"225:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"224:6:7"},"scope":836,"src":"148:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7d25a05e","id":821,"implemented":false,"kind":"function","modifiers":[],"name":"nextNonce","nameLocation":"246:9:7","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"_eid","nameLocation":"263:4:7","nodeType":"VariableDeclaration","scope":821,"src":"256:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":813,"name":"uint32","nodeType":"ElementaryTypeName","src":"256:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"_sender","nameLocation":"277:7:7","nodeType":"VariableDeclaration","scope":821,"src":"269:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"269:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"255:30:7"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":821,"src":"309:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":818,"name":"uint64","nodeType":"ElementaryTypeName","src":"309:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"308:8:7"},"scope":836,"src":"237:80:7","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"13137d65","id":835,"implemented":false,"kind":"function","modifiers":[],"name":"lzReceive","nameLocation":"332:9:7","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"_origin","nameLocation":"367:7:7","nodeType":"VariableDeclaration","scope":835,"src":"351:23:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"Origin","nameLocations":["351:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"351:6:7"},"referencedDeclaration":638,"src":"351:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"_guid","nameLocation":"392:5:7","nodeType":"VariableDeclaration","scope":835,"src":"384:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"384:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"_message","nameLocation":"422:8:7","nodeType":"VariableDeclaration","scope":835,"src":"407:23:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":827,"name":"bytes","nodeType":"ElementaryTypeName","src":"407:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"_executor","nameLocation":"448:9:7","nodeType":"VariableDeclaration","scope":835,"src":"440:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"_extraData","nameLocation":"482:10:7","nodeType":"VariableDeclaration","scope":835,"src":"467:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":831,"name":"bytes","nodeType":"ElementaryTypeName","src":"467:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"341:157:7"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"515:0:7"},"scope":836,"src":"323:193:7","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":837,"src":"113:405:7","usedErrors":[],"usedEvents":[]}],"src":"33:486:7"},"id":7},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol","exportedSymbols":{"IMessageLibManager":[1081],"SetConfigParam":[845]},"id":1082,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":838,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:8"},{"canonicalName":"SetConfigParam","id":845,"members":[{"constant":false,"id":840,"mutability":"mutable","name":"eid","nameLocation":"94:3:8","nodeType":"VariableDeclaration","scope":845,"src":"87:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":839,"name":"uint32","nodeType":"ElementaryTypeName","src":"87:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"configType","nameLocation":"110:10:8","nodeType":"VariableDeclaration","scope":845,"src":"103:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":841,"name":"uint32","nodeType":"ElementaryTypeName","src":"103:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"config","nameLocation":"132:6:8","nodeType":"VariableDeclaration","scope":845,"src":"126:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":843,"name":"bytes","nodeType":"ElementaryTypeName","src":"126:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SetConfigParam","nameLocation":"66:14:8","nodeType":"StructDefinition","scope":1082,"src":"59:82:8","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessageLibManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1081,"linearizedBaseContracts":[1081],"name":"IMessageLibManager","nameLocation":"153:18:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IMessageLibManager.Timeout","id":850,"members":[{"constant":false,"id":847,"mutability":"mutable","name":"lib","nameLocation":"211:3:8","nodeType":"VariableDeclaration","scope":850,"src":"203:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"203:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"expiry","nameLocation":"232:6:8","nodeType":"VariableDeclaration","scope":850,"src":"224:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"224:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Timeout","nameLocation":"185:7:8","nodeType":"StructDefinition","scope":1081,"src":"178:67:8","visibility":"public"},{"anonymous":false,"eventSelector":"6b374d56679ca9463f27c85c6311e2bb7fde69bf201d3da39d53f10bd9d78af5","id":854,"name":"LibraryRegistered","nameLocation":"257:17:8","nodeType":"EventDefinition","parameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"283:6:8","nodeType":"VariableDeclaration","scope":854,"src":"275:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"274:16:8"},"src":"251:40:8"},{"anonymous":false,"eventSelector":"16aa0f528038ab41019e95bae5b418a50ba8532c5800e3b7ea2f517d3fa625f5","id":860,"name":"DefaultSendLibrarySet","nameLocation":"302:21:8","nodeType":"EventDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"331:3:8","nodeType":"VariableDeclaration","scope":860,"src":"324:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":855,"name":"uint32","nodeType":"ElementaryTypeName","src":"324:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":858,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"344:6:8","nodeType":"VariableDeclaration","scope":860,"src":"336:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"323:28:8"},"src":"296:56:8"},{"anonymous":false,"eventSelector":"c16891855cffb4a5ac51ac11864a3f3c96ba816cc45fe686c987ae36277de5ec","id":866,"name":"DefaultReceiveLibrarySet","nameLocation":"363:24:8","nodeType":"EventDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"395:3:8","nodeType":"VariableDeclaration","scope":866,"src":"388:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":861,"name":"uint32","nodeType":"ElementaryTypeName","src":"388:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":864,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"408:6:8","nodeType":"VariableDeclaration","scope":866,"src":"400:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:28:8"},"src":"357:59:8"},{"anonymous":false,"eventSelector":"55b28633cdb29709386f555dfc54418592ad475ce7a65a78ac5928af60ffb8f8","id":874,"name":"DefaultReceiveLibraryTimeoutSet","nameLocation":"427:31:8","nodeType":"EventDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"466:3:8","nodeType":"VariableDeclaration","scope":874,"src":"459:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":867,"name":"uint32","nodeType":"ElementaryTypeName","src":"459:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":870,"indexed":false,"mutability":"mutable","name":"oldLib","nameLocation":"479:6:8","nodeType":"VariableDeclaration","scope":874,"src":"471:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"471:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"indexed":false,"mutability":"mutable","name":"expiry","nameLocation":"495:6:8","nodeType":"VariableDeclaration","scope":874,"src":"487:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"487:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"458:44:8"},"src":"421:82:8"},{"anonymous":false,"eventSelector":"4cff966ebee29a156dcb34cf72c1d06231fb1777f6bdf6e8089819232f002b1c","id":882,"name":"SendLibrarySet","nameLocation":"514:14:8","nodeType":"EventDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"537:6:8","nodeType":"VariableDeclaration","scope":882,"src":"529:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":878,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"552:3:8","nodeType":"VariableDeclaration","scope":882,"src":"545:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":877,"name":"uint32","nodeType":"ElementaryTypeName","src":"545:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":880,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"565:6:8","nodeType":"VariableDeclaration","scope":882,"src":"557:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"557:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"528:44:8"},"src":"508:65:8"},{"anonymous":false,"eventSelector":"cd6f92f5ac6185a5acfa02c92090746cec64d777269cbcd0ed031e396657a1c2","id":890,"name":"ReceiveLibrarySet","nameLocation":"584:17:8","nodeType":"EventDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"610:8:8","nodeType":"VariableDeclaration","scope":890,"src":"602:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"602:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":886,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"627:3:8","nodeType":"VariableDeclaration","scope":890,"src":"620:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":885,"name":"uint32","nodeType":"ElementaryTypeName","src":"620:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":888,"indexed":false,"mutability":"mutable","name":"newLib","nameLocation":"640:6:8","nodeType":"VariableDeclaration","scope":890,"src":"632:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"601:46:8"},"src":"578:70:8"},{"anonymous":false,"eventSelector":"4e0a5bbfa0c11a64effb1ada324b5437a17272e1aed9320398715ef71bb20928","id":900,"name":"ReceiveLibraryTimeoutSet","nameLocation":"659:24:8","nodeType":"EventDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"692:8:8","nodeType":"VariableDeclaration","scope":900,"src":"684:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"indexed":false,"mutability":"mutable","name":"eid","nameLocation":"709:3:8","nodeType":"VariableDeclaration","scope":900,"src":"702:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":893,"name":"uint32","nodeType":"ElementaryTypeName","src":"702:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":896,"indexed":false,"mutability":"mutable","name":"oldLib","nameLocation":"722:6:8","nodeType":"VariableDeclaration","scope":900,"src":"714:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"indexed":false,"mutability":"mutable","name":"timeout","nameLocation":"738:7:8","nodeType":"VariableDeclaration","scope":900,"src":"730:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"683:63:8"},"src":"653:94:8"},{"functionSelector":"e8964e81","id":905,"implemented":false,"kind":"function","modifiers":[],"name":"registerLibrary","nameLocation":"762:15:8","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"_lib","nameLocation":"786:4:8","nodeType":"VariableDeclaration","scope":905,"src":"778:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:14:8"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"800:0:8"},"scope":1081,"src":"753:48:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dc706a62","id":912,"implemented":false,"kind":"function","modifiers":[],"name":"isRegisteredLibrary","nameLocation":"816:19:8","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"_lib","nameLocation":"844:4:8","nodeType":"VariableDeclaration","scope":912,"src":"836:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"835:14:8"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"873:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":909,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"872:6:8"},"scope":1081,"src":"807:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9132e5c3","id":918,"implemented":false,"kind":"function","modifiers":[],"name":"getRegisteredLibraries","nameLocation":"894:22:8","nodeType":"FunctionDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"916:2:8"},"returnParameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":918,"src":"942:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":915,"nodeType":"ArrayTypeName","src":"942:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"941:18:8"},"scope":1081,"src":"885:75:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aafea312","id":925,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultSendLibrary","nameLocation":"975:21:8","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"_eid","nameLocation":"1004:4:8","nodeType":"VariableDeclaration","scope":925,"src":"997:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":919,"name":"uint32","nodeType":"ElementaryTypeName","src":"997:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"_newLib","nameLocation":"1018:7:8","nodeType":"VariableDeclaration","scope":925,"src":"1010:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"1010:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"996:30:8"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"1035:0:8"},"scope":1081,"src":"966:70:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f64be4c7","id":932,"implemented":false,"kind":"function","modifiers":[],"name":"defaultSendLibrary","nameLocation":"1051:18:8","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"_eid","nameLocation":"1077:4:8","nodeType":"VariableDeclaration","scope":932,"src":"1070:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":926,"name":"uint32","nodeType":"ElementaryTypeName","src":"1070:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1069:13:8"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"1106:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1105:9:8"},"scope":1081,"src":"1042:73:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a718531b","id":941,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultReceiveLibrary","nameLocation":"1130:24:8","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"_eid","nameLocation":"1162:4:8","nodeType":"VariableDeclaration","scope":941,"src":"1155:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":933,"name":"uint32","nodeType":"ElementaryTypeName","src":"1155:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"_newLib","nameLocation":"1176:7:8","nodeType":"VariableDeclaration","scope":941,"src":"1168:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"_gracePeriod","nameLocation":"1193:12:8","nodeType":"VariableDeclaration","scope":941,"src":"1185:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1154:52:8"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[],"src":"1215:0:8"},"scope":1081,"src":"1121:95:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6f50a803","id":948,"implemented":false,"kind":"function","modifiers":[],"name":"defaultReceiveLibrary","nameLocation":"1231:21:8","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"_eid","nameLocation":"1260:4:8","nodeType":"VariableDeclaration","scope":948,"src":"1253:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":942,"name":"uint32","nodeType":"ElementaryTypeName","src":"1253:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1252:13:8"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"1289:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:9:8"},"scope":1081,"src":"1222:76:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d4b4ec8f","id":957,"implemented":false,"kind":"function","modifiers":[],"name":"setDefaultReceiveLibraryTimeout","nameLocation":"1313:31:8","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"_eid","nameLocation":"1352:4:8","nodeType":"VariableDeclaration","scope":957,"src":"1345:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":949,"name":"uint32","nodeType":"ElementaryTypeName","src":"1345:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"_lib","nameLocation":"1366:4:8","nodeType":"VariableDeclaration","scope":957,"src":"1358:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"1358:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"_expiry","nameLocation":"1380:7:8","nodeType":"VariableDeclaration","scope":957,"src":"1372:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1372:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1344:44:8"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"1397:0:8"},"scope":1081,"src":"1304:94:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e83f5bb","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"defaultReceiveLibraryTimeout","nameLocation":"1413:28:8","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"_eid","nameLocation":"1449:4:8","nodeType":"VariableDeclaration","scope":966,"src":"1442:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":958,"name":"uint32","nodeType":"ElementaryTypeName","src":"1442:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1441:13:8"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"lib","nameLocation":"1486:3:8","nodeType":"VariableDeclaration","scope":966,"src":"1478:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"expiry","nameLocation":"1499:6:8","nodeType":"VariableDeclaration","scope":966,"src":"1491:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1477:29:8"},"scope":1081,"src":"1404:103:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6750cd4c","id":973,"implemented":false,"kind":"function","modifiers":[],"name":"isSupportedEid","nameLocation":"1522:14:8","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":968,"mutability":"mutable","name":"_eid","nameLocation":"1544:4:8","nodeType":"VariableDeclaration","scope":973,"src":"1537:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":967,"name":"uint32","nodeType":"ElementaryTypeName","src":"1537:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1536:13:8"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":973,"src":"1573:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":970,"name":"bool","nodeType":"ElementaryTypeName","src":"1573:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1572:6:8"},"scope":1081,"src":"1513:66:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9d7f9775","id":984,"implemented":false,"kind":"function","modifiers":[],"name":"isValidReceiveLibrary","nameLocation":"1594:21:8","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"_receiver","nameLocation":"1624:9:8","nodeType":"VariableDeclaration","scope":984,"src":"1616:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"_eid","nameLocation":"1642:4:8","nodeType":"VariableDeclaration","scope":984,"src":"1635:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":976,"name":"uint32","nodeType":"ElementaryTypeName","src":"1635:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"_lib","nameLocation":"1656:4:8","nodeType":"VariableDeclaration","scope":984,"src":"1648:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:46:8"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":984,"src":"1685:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":981,"name":"bool","nodeType":"ElementaryTypeName","src":"1685:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1684:6:8"},"scope":1081,"src":"1585:106:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"1697:59:8","text":"------------------- OApp interfaces -------------------"},"functionSelector":"9535ff30","id":994,"implemented":false,"kind":"function","modifiers":[],"name":"setSendLibrary","nameLocation":"1770:14:8","nodeType":"FunctionDefinition","parameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"_oapp","nameLocation":"1793:5:8","nodeType":"VariableDeclaration","scope":994,"src":"1785:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"_eid","nameLocation":"1807:4:8","nodeType":"VariableDeclaration","scope":994,"src":"1800:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":988,"name":"uint32","nodeType":"ElementaryTypeName","src":"1800:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"_newLib","nameLocation":"1821:7:8","nodeType":"VariableDeclaration","scope":994,"src":"1813:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1784:45:8"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[],"src":"1838:0:8"},"scope":1081,"src":"1761:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b96a277f","id":1003,"implemented":false,"kind":"function","modifiers":[],"name":"getSendLibrary","nameLocation":"1854:14:8","nodeType":"FunctionDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"_sender","nameLocation":"1877:7:8","nodeType":"VariableDeclaration","scope":1003,"src":"1869:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"1869:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"_eid","nameLocation":"1893:4:8","nodeType":"VariableDeclaration","scope":1003,"src":"1886:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":997,"name":"uint32","nodeType":"ElementaryTypeName","src":"1886:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1868:30:8"},"returnParameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"lib","nameLocation":"1930:3:8","nodeType":"VariableDeclaration","scope":1003,"src":"1922:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"1922:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1921:13:8"},"scope":1081,"src":"1845:90:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dc93c8a2","id":1012,"implemented":false,"kind":"function","modifiers":[],"name":"isDefaultSendLibrary","nameLocation":"1950:20:8","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"_sender","nameLocation":"1979:7:8","nodeType":"VariableDeclaration","scope":1012,"src":"1971:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"_eid","nameLocation":"1995:4:8","nodeType":"VariableDeclaration","scope":1012,"src":"1988:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1006,"name":"uint32","nodeType":"ElementaryTypeName","src":"1988:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1970:30:8"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1012,"src":"2024:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1009,"name":"bool","nodeType":"ElementaryTypeName","src":"2024:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2023:6:8"},"scope":1081,"src":"1941:89:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6a14d715","id":1023,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveLibrary","nameLocation":"2045:17:8","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"_oapp","nameLocation":"2071:5:8","nodeType":"VariableDeclaration","scope":1023,"src":"2063:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"2063:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"_eid","nameLocation":"2085:4:8","nodeType":"VariableDeclaration","scope":1023,"src":"2078:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1015,"name":"uint32","nodeType":"ElementaryTypeName","src":"2078:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"_newLib","nameLocation":"2099:7:8","nodeType":"VariableDeclaration","scope":1023,"src":"2091:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"2091:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"_gracePeriod","nameLocation":"2116:12:8","nodeType":"VariableDeclaration","scope":1023,"src":"2108:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2108:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2062:67:8"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"2138:0:8"},"scope":1081,"src":"2036:103:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"402f8468","id":1034,"implemented":false,"kind":"function","modifiers":[],"name":"getReceiveLibrary","nameLocation":"2154:17:8","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"_receiver","nameLocation":"2180:9:8","nodeType":"VariableDeclaration","scope":1034,"src":"2172:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"2172:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"_eid","nameLocation":"2198:4:8","nodeType":"VariableDeclaration","scope":1034,"src":"2191:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1026,"name":"uint32","nodeType":"ElementaryTypeName","src":"2191:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2171:32:8"},"returnParameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"lib","nameLocation":"2235:3:8","nodeType":"VariableDeclaration","scope":1034,"src":"2227:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"2227:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"isDefault","nameLocation":"2245:9:8","nodeType":"VariableDeclaration","scope":1034,"src":"2240:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"2240:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2226:29:8"},"scope":1081,"src":"2145:111:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"183c834f","id":1045,"implemented":false,"kind":"function","modifiers":[],"name":"setReceiveLibraryTimeout","nameLocation":"2271:24:8","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"_oapp","nameLocation":"2304:5:8","nodeType":"VariableDeclaration","scope":1045,"src":"2296:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"_eid","nameLocation":"2318:4:8","nodeType":"VariableDeclaration","scope":1045,"src":"2311:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1037,"name":"uint32","nodeType":"ElementaryTypeName","src":"2311:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"_lib","nameLocation":"2332:4:8","nodeType":"VariableDeclaration","scope":1045,"src":"2324:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"_expiry","nameLocation":"2346:7:8","nodeType":"VariableDeclaration","scope":1045,"src":"2338:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"2338:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:59:8"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"2363:0:8"},"scope":1081,"src":"2262:102:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ef667aa1","id":1056,"implemented":false,"kind":"function","modifiers":[],"name":"receiveLibraryTimeout","nameLocation":"2379:21:8","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"_receiver","nameLocation":"2409:9:8","nodeType":"VariableDeclaration","scope":1056,"src":"2401:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"2401:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"_eid","nameLocation":"2427:4:8","nodeType":"VariableDeclaration","scope":1056,"src":"2420:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1048,"name":"uint32","nodeType":"ElementaryTypeName","src":"2420:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2400:32:8"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"lib","nameLocation":"2464:3:8","nodeType":"VariableDeclaration","scope":1056,"src":"2456:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"2456:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"expiry","nameLocation":"2477:6:8","nodeType":"VariableDeclaration","scope":1056,"src":"2469:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2455:29:8"},"scope":1081,"src":"2370:115:8","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6dbd9f90","id":1067,"implemented":false,"kind":"function","modifiers":[],"name":"setConfig","nameLocation":"2500:9:8","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"_oapp","nameLocation":"2518:5:8","nodeType":"VariableDeclaration","scope":1067,"src":"2510:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"2510:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"_lib","nameLocation":"2533:4:8","nodeType":"VariableDeclaration","scope":1067,"src":"2525:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"_params","nameLocation":"2565:7:8","nodeType":"VariableDeclaration","scope":1067,"src":"2539:33:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SetConfigParam_$845_calldata_ptr_$dyn_calldata_ptr","typeString":"struct SetConfigParam[]"},"typeName":{"baseType":{"id":1062,"nodeType":"UserDefinedTypeName","pathNode":{"id":1061,"name":"SetConfigParam","nameLocations":["2539:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":845,"src":"2539:14:8"},"referencedDeclaration":845,"src":"2539:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_SetConfigParam_$845_storage_ptr","typeString":"struct SetConfigParam"}},"id":1063,"nodeType":"ArrayTypeName","src":"2539:16:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SetConfigParam_$845_storage_$dyn_storage_ptr","typeString":"struct SetConfigParam[]"}},"visibility":"internal"}],"src":"2509:64:8"},"returnParameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"2582:0:8"},"scope":1081,"src":"2491:92:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2b3197b9","id":1080,"implemented":false,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"2598:9:8","nodeType":"FunctionDefinition","parameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"_oapp","nameLocation":"2625:5:8","nodeType":"VariableDeclaration","scope":1080,"src":"2617:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"_lib","nameLocation":"2648:4:8","nodeType":"VariableDeclaration","scope":1080,"src":"2640:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"2640:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"_eid","nameLocation":"2669:4:8","nodeType":"VariableDeclaration","scope":1080,"src":"2662:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1072,"name":"uint32","nodeType":"ElementaryTypeName","src":"2662:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"_configType","nameLocation":"2690:11:8","nodeType":"VariableDeclaration","scope":1080,"src":"2683:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1074,"name":"uint32","nodeType":"ElementaryTypeName","src":"2683:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2607:100:8"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"config","nameLocation":"2744:6:8","nodeType":"VariableDeclaration","scope":1080,"src":"2731:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"2731:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2730:21:8"},"scope":1081,"src":"2589:163:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1082,"src":"143:2611:8","usedErrors":[],"usedEvents":[854,860,866,874,882,890,900]}],"src":"33:2722:8"},"id":8},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol","exportedSymbols":{"IMessagingChannel":[1217]},"id":1218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1083,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessagingChannel","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1217,"linearizedBaseContracts":[1217],"name":"IMessagingChannel","nameLocation":"69:17:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"28f40053783033ef755556a0c3315379141f51a33aed8334174ffbadd90bde48","id":1093,"name":"InboundNonceSkipped","nameLocation":"99:19:9","nodeType":"EventDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"126:6:9","nodeType":"VariableDeclaration","scope":1093,"src":"119:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1084,"name":"uint32","nodeType":"ElementaryTypeName","src":"119:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1087,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"142:6:9","nodeType":"VariableDeclaration","scope":1093,"src":"134:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"134:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1089,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"158:8:9","nodeType":"VariableDeclaration","scope":1093,"src":"150:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"150:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"175:5:9","nodeType":"VariableDeclaration","scope":1093,"src":"168:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1090,"name":"uint64","nodeType":"ElementaryTypeName","src":"168:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"118:63:9"},"src":"93:89:9"},{"anonymous":false,"eventSelector":"af0450c392c4f702515a457a362328c8aa21916048ca6d0419e248b30cb55292","id":1105,"name":"PacketNilified","nameLocation":"193:14:9","nodeType":"EventDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"215:6:9","nodeType":"VariableDeclaration","scope":1105,"src":"208:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1094,"name":"uint32","nodeType":"ElementaryTypeName","src":"208:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1097,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"231:6:9","nodeType":"VariableDeclaration","scope":1105,"src":"223:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"223:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1099,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"247:8:9","nodeType":"VariableDeclaration","scope":1105,"src":"239:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"239:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"264:5:9","nodeType":"VariableDeclaration","scope":1105,"src":"257:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1100,"name":"uint64","nodeType":"ElementaryTypeName","src":"257:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1103,"indexed":false,"mutability":"mutable","name":"payloadHash","nameLocation":"279:11:9","nodeType":"VariableDeclaration","scope":1105,"src":"271:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"271:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"207:84:9"},"src":"187:105:9"},{"anonymous":false,"eventSelector":"7f68a37a6e69a0de35024a234558f9efe4b33b58657753d21eaaa82d51c3510e","id":1117,"name":"PacketBurnt","nameLocation":"303:11:9","nodeType":"EventDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"indexed":false,"mutability":"mutable","name":"srcEid","nameLocation":"322:6:9","nodeType":"VariableDeclaration","scope":1117,"src":"315:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1106,"name":"uint32","nodeType":"ElementaryTypeName","src":"315:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1109,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"338:6:9","nodeType":"VariableDeclaration","scope":1117,"src":"330:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"330:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1111,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"354:8:9","nodeType":"VariableDeclaration","scope":1117,"src":"346:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"346:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"371:5:9","nodeType":"VariableDeclaration","scope":1117,"src":"364:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1112,"name":"uint64","nodeType":"ElementaryTypeName","src":"364:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1115,"indexed":false,"mutability":"mutable","name":"payloadHash","nameLocation":"386:11:9","nodeType":"VariableDeclaration","scope":1117,"src":"378:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1114,"name":"bytes32","nodeType":"ElementaryTypeName","src":"378:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"314:84:9"},"src":"297:102:9"},{"functionSelector":"416ecebf","id":1122,"implemented":false,"kind":"function","modifiers":[],"name":"eid","nameLocation":"414:3:9","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[],"src":"417:2:9"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1122,"src":"443:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1119,"name":"uint32","nodeType":"ElementaryTypeName","src":"443:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"442:8:9"},"scope":1217,"src":"405:46:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d70b8902","id":1133,"implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"614:4:9","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"_oapp","nameLocation":"627:5:9","nodeType":"VariableDeclaration","scope":1133,"src":"619:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"_srcEid","nameLocation":"641:7:9","nodeType":"VariableDeclaration","scope":1133,"src":"634:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1125,"name":"uint32","nodeType":"ElementaryTypeName","src":"634:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"_sender","nameLocation":"658:7:9","nodeType":"VariableDeclaration","scope":1133,"src":"650:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"650:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"_nonce","nameLocation":"674:6:9","nodeType":"VariableDeclaration","scope":1133,"src":"667:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1129,"name":"uint64","nodeType":"ElementaryTypeName","src":"667:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"618:63:9"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[],"src":"690:0:9"},"scope":1217,"src":"605:86:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e80fbf3","id":1146,"implemented":false,"kind":"function","modifiers":[],"name":"nilify","nameLocation":"706:6:9","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"_oapp","nameLocation":"721:5:9","nodeType":"VariableDeclaration","scope":1146,"src":"713:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"_srcEid","nameLocation":"735:7:9","nodeType":"VariableDeclaration","scope":1146,"src":"728:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1136,"name":"uint32","nodeType":"ElementaryTypeName","src":"728:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"_sender","nameLocation":"752:7:9","nodeType":"VariableDeclaration","scope":1146,"src":"744:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"744:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"_nonce","nameLocation":"768:6:9","nodeType":"VariableDeclaration","scope":1146,"src":"761:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1140,"name":"uint64","nodeType":"ElementaryTypeName","src":"761:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"_payloadHash","nameLocation":"784:12:9","nodeType":"VariableDeclaration","scope":1146,"src":"776:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"776:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"712:85:9"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"806:0:9"},"scope":1217,"src":"697:110:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"40f80683","id":1159,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"822:4:9","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"_oapp","nameLocation":"835:5:9","nodeType":"VariableDeclaration","scope":1159,"src":"827:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"_srcEid","nameLocation":"849:7:9","nodeType":"VariableDeclaration","scope":1159,"src":"842:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1149,"name":"uint32","nodeType":"ElementaryTypeName","src":"842:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"_sender","nameLocation":"866:7:9","nodeType":"VariableDeclaration","scope":1159,"src":"858:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"858:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"_nonce","nameLocation":"882:6:9","nodeType":"VariableDeclaration","scope":1159,"src":"875:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1153,"name":"uint64","nodeType":"ElementaryTypeName","src":"875:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"_payloadHash","nameLocation":"898:12:9","nodeType":"VariableDeclaration","scope":1159,"src":"890:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"890:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"826:85:9"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"920:0:9"},"scope":1217,"src":"813:108:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aafe5e07","id":1170,"implemented":false,"kind":"function","modifiers":[],"name":"nextGuid","nameLocation":"936:8:9","nodeType":"FunctionDefinition","parameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"_sender","nameLocation":"953:7:9","nodeType":"VariableDeclaration","scope":1170,"src":"945:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"_dstEid","nameLocation":"969:7:9","nodeType":"VariableDeclaration","scope":1170,"src":"962:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1162,"name":"uint32","nodeType":"ElementaryTypeName","src":"962:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"_receiver","nameLocation":"986:9:9","nodeType":"VariableDeclaration","scope":1170,"src":"978:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"978:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"944:52:9"},"returnParameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1170,"src":"1020:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1020:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1019:9:9"},"scope":1217,"src":"927:102:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a0dd43fc","id":1181,"implemented":false,"kind":"function","modifiers":[],"name":"inboundNonce","nameLocation":"1044:12:9","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"_receiver","nameLocation":"1065:9:9","nodeType":"VariableDeclaration","scope":1181,"src":"1057:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"1057:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"_srcEid","nameLocation":"1083:7:9","nodeType":"VariableDeclaration","scope":1181,"src":"1076:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1173,"name":"uint32","nodeType":"ElementaryTypeName","src":"1076:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"_sender","nameLocation":"1100:7:9","nodeType":"VariableDeclaration","scope":1181,"src":"1092:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1092:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1056:52:9"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1181,"src":"1132:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1178,"name":"uint64","nodeType":"ElementaryTypeName","src":"1132:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1131:8:9"},"scope":1217,"src":"1035:105:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9c6d7340","id":1192,"implemented":false,"kind":"function","modifiers":[],"name":"outboundNonce","nameLocation":"1155:13:9","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"_sender","nameLocation":"1177:7:9","nodeType":"VariableDeclaration","scope":1192,"src":"1169:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"1169:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"_dstEid","nameLocation":"1193:7:9","nodeType":"VariableDeclaration","scope":1192,"src":"1186:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1184,"name":"uint32","nodeType":"ElementaryTypeName","src":"1186:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"_receiver","nameLocation":"1210:9:9","nodeType":"VariableDeclaration","scope":1192,"src":"1202:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1202:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1168:52:9"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1192,"src":"1244:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1189,"name":"uint64","nodeType":"ElementaryTypeName","src":"1244:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1243:8:9"},"scope":1217,"src":"1146:106:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9fc7bcd","id":1205,"implemented":false,"kind":"function","modifiers":[],"name":"inboundPayloadHash","nameLocation":"1267:18:9","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"_receiver","nameLocation":"1303:9:9","nodeType":"VariableDeclaration","scope":1205,"src":"1295:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"1295:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"_srcEid","nameLocation":"1329:7:9","nodeType":"VariableDeclaration","scope":1205,"src":"1322:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1195,"name":"uint32","nodeType":"ElementaryTypeName","src":"1322:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1198,"mutability":"mutable","name":"_sender","nameLocation":"1354:7:9","nodeType":"VariableDeclaration","scope":1205,"src":"1346:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1346:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"_nonce","nameLocation":"1378:6:9","nodeType":"VariableDeclaration","scope":1205,"src":"1371:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1199,"name":"uint64","nodeType":"ElementaryTypeName","src":"1371:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1285:105:9"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1205,"src":"1414:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1414:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1413:9:9"},"scope":1217,"src":"1258:165:9","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"5b17bb70","id":1216,"implemented":false,"kind":"function","modifiers":[],"name":"lazyInboundNonce","nameLocation":"1438:16:9","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"_receiver","nameLocation":"1463:9:9","nodeType":"VariableDeclaration","scope":1216,"src":"1455:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"_srcEid","nameLocation":"1481:7:9","nodeType":"VariableDeclaration","scope":1216,"src":"1474:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1208,"name":"uint32","nodeType":"ElementaryTypeName","src":"1474:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"_sender","nameLocation":"1498:7:9","nodeType":"VariableDeclaration","scope":1216,"src":"1490:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1490:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1454:52:9"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1216,"src":"1530:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1213,"name":"uint64","nodeType":"ElementaryTypeName","src":"1530:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1529:8:9"},"scope":1217,"src":"1429:109:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1218,"src":"59:1481:9","usedErrors":[],"usedEvents":[1093,1105,1117]}],"src":"33:1508:9"},"id":9},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol","exportedSymbols":{"IMessagingComposer":[1303]},"id":1304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1219,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessagingComposer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1303,"linearizedBaseContracts":[1303],"name":"IMessagingComposer","nameLocation":"69:18:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"3d52ff888d033fd3dd1d8057da59e850c91d91a72c41dfa445b247dfedeb6dc1","id":1231,"name":"ComposeSent","nameLocation":"100:11:10","nodeType":"EventDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"120:4:10","nodeType":"VariableDeclaration","scope":1231,"src":"112:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"112:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"134:2:10","nodeType":"VariableDeclaration","scope":1231,"src":"126:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"126:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"146:4:10","nodeType":"VariableDeclaration","scope":1231,"src":"138:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"138:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1227,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"159:5:10","nodeType":"VariableDeclaration","scope":1231,"src":"152:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1226,"name":"uint16","nodeType":"ElementaryTypeName","src":"152:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1229,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"172:7:10","nodeType":"VariableDeclaration","scope":1231,"src":"166:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1228,"name":"bytes","nodeType":"ElementaryTypeName","src":"166:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111:69:10"},"src":"94:87:10"},{"anonymous":false,"eventSelector":"0036c98efcf9e6641dfbc9051f66f405253e8e0c2ab4a24dccda15595b7378c8","id":1241,"name":"ComposeDelivered","nameLocation":"192:16:10","nodeType":"EventDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"217:4:10","nodeType":"VariableDeclaration","scope":1241,"src":"209:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"209:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"231:2:10","nodeType":"VariableDeclaration","scope":1241,"src":"223:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1234,"name":"address","nodeType":"ElementaryTypeName","src":"223:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1237,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"243:4:10","nodeType":"VariableDeclaration","scope":1241,"src":"235:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"235:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1239,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"256:5:10","nodeType":"VariableDeclaration","scope":1241,"src":"249:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1238,"name":"uint16","nodeType":"ElementaryTypeName","src":"249:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"208:54:10"},"src":"186:77:10"},{"anonymous":false,"eventSelector":"8a0b1dce321c5c5fb42349bce46d18087c04140de520917661fb923e44a904b9","id":1263,"name":"LzComposeAlert","nameLocation":"274:14:10","nodeType":"EventDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"314:4:10","nodeType":"VariableDeclaration","scope":1263,"src":"298:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"298:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"344:2:10","nodeType":"VariableDeclaration","scope":1263,"src":"328:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"indexed":true,"mutability":"mutable","name":"executor","nameLocation":"372:8:10","nodeType":"VariableDeclaration","scope":1263,"src":"356:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"indexed":false,"mutability":"mutable","name":"guid","nameLocation":"398:4:10","nodeType":"VariableDeclaration","scope":1263,"src":"390:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"390:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1251,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"419:5:10","nodeType":"VariableDeclaration","scope":1263,"src":"412:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1250,"name":"uint16","nodeType":"ElementaryTypeName","src":"412:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1253,"indexed":false,"mutability":"mutable","name":"gas","nameLocation":"442:3:10","nodeType":"VariableDeclaration","scope":1263,"src":"434:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1255,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"463:5:10","nodeType":"VariableDeclaration","scope":1263,"src":"455:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"455:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1257,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"484:7:10","nodeType":"VariableDeclaration","scope":1263,"src":"478:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1256,"name":"bytes","nodeType":"ElementaryTypeName","src":"478:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1259,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"507:9:10","nodeType":"VariableDeclaration","scope":1263,"src":"501:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1258,"name":"bytes","nodeType":"ElementaryTypeName","src":"501:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1261,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"532:6:10","nodeType":"VariableDeclaration","scope":1263,"src":"526:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1260,"name":"bytes","nodeType":"ElementaryTypeName","src":"526:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"288:256:10"},"src":"268:277:10"},{"functionSelector":"35d330b0","id":1276,"implemented":false,"kind":"function","modifiers":[],"name":"composeQueue","nameLocation":"560:12:10","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"_from","nameLocation":"590:5:10","nodeType":"VariableDeclaration","scope":1276,"src":"582:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"_to","nameLocation":"613:3:10","nodeType":"VariableDeclaration","scope":1276,"src":"605:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"_guid","nameLocation":"634:5:10","nodeType":"VariableDeclaration","scope":1276,"src":"626:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"626:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"_index","nameLocation":"656:6:10","nodeType":"VariableDeclaration","scope":1276,"src":"649:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1270,"name":"uint16","nodeType":"ElementaryTypeName","src":"649:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"572:96:10"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"messageHash","nameLocation":"700:11:10","nodeType":"VariableDeclaration","scope":1276,"src":"692:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"692:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"691:21:10"},"scope":1303,"src":"551:162:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7cb59012","id":1287,"implemented":false,"kind":"function","modifiers":[],"name":"sendCompose","nameLocation":"728:11:10","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"_to","nameLocation":"748:3:10","nodeType":"VariableDeclaration","scope":1287,"src":"740:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"_guid","nameLocation":"761:5:10","nodeType":"VariableDeclaration","scope":1287,"src":"753:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"753:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"_index","nameLocation":"775:6:10","nodeType":"VariableDeclaration","scope":1287,"src":"768:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1281,"name":"uint16","nodeType":"ElementaryTypeName","src":"768:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"_message","nameLocation":"798:8:10","nodeType":"VariableDeclaration","scope":1287,"src":"783:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1283,"name":"bytes","nodeType":"ElementaryTypeName","src":"783:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"739:68:10"},"returnParameters":{"id":1286,"nodeType":"ParameterList","parameters":[],"src":"816:0:10"},"scope":1303,"src":"719:98:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"91d20fa1","id":1302,"implemented":false,"kind":"function","modifiers":[],"name":"lzCompose","nameLocation":"832:9:10","nodeType":"FunctionDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"_from","nameLocation":"859:5:10","nodeType":"VariableDeclaration","scope":1302,"src":"851:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"_to","nameLocation":"882:3:10","nodeType":"VariableDeclaration","scope":1302,"src":"874:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"_guid","nameLocation":"903:5:10","nodeType":"VariableDeclaration","scope":1302,"src":"895:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"895:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"_index","nameLocation":"925:6:10","nodeType":"VariableDeclaration","scope":1302,"src":"918:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1294,"name":"uint16","nodeType":"ElementaryTypeName","src":"918:6:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"_message","nameLocation":"956:8:10","nodeType":"VariableDeclaration","scope":1302,"src":"941:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1296,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"_extraData","nameLocation":"989:10:10","nodeType":"VariableDeclaration","scope":1302,"src":"974:25:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1298,"name":"bytes","nodeType":"ElementaryTypeName","src":"974:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"841:164:10"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[],"src":"1022:0:10"},"scope":1303,"src":"823:200:10","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1304,"src":"59:966:10","usedErrors":[],"usedEvents":[1231,1241,1263]}],"src":"33:993:10"},"id":10},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol":{"ast":{"absolutePath":"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol","exportedSymbols":{"IMessagingContext":[1318]},"id":1319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1305,"literals":["solidity",">=","0.8",".0"],"nodeType":"PragmaDirective","src":"33:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IMessagingContext","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1318,"linearizedBaseContracts":[1318],"name":"IMessagingContext","nameLocation":"69:17:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"79624ca9","id":1310,"implemented":false,"kind":"function","modifiers":[],"name":"isSendingMessage","nameLocation":"102:16:11","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"118:2:11"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"144:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1307,"name":"bool","nodeType":"ElementaryTypeName","src":"144:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"143:6:11"},"scope":1318,"src":"93:57:11","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"14f651a9","id":1317,"implemented":false,"kind":"function","modifiers":[],"name":"getSendContext","nameLocation":"165:14:11","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[],"src":"179:2:11"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"dstEid","nameLocation":"212:6:11","nodeType":"VariableDeclaration","scope":1317,"src":"205:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1312,"name":"uint32","nodeType":"ElementaryTypeName","src":"205:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"sender","nameLocation":"228:6:11","nodeType":"VariableDeclaration","scope":1317,"src":"220:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"220:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"204:31:11"},"scope":1318,"src":"156:80:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1319,"src":"59:179:11","usedErrors":[],"usedEvents":[]}],"src":"33:206:11"},"id":11},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2153],"Ownable":[1466]},"id":1467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1467,"sourceUnit":2154,"src":"128:45:12","symbolAliases":[{"foreign":{"id":1321,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"136:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1324,"name":"Context","nameLocations":["692:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"692:7:12"},"id":1325,"nodeType":"InheritanceSpecifier","src":"692:7:12"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"175:487:12","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1466,"linearizedBaseContracts":[1466,2153],"name":"Ownable","nameLocation":"681:7:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1327,"mutability":"mutable","name":"_owner","nameLocation":"722:6:12","nodeType":"VariableDeclaration","scope":1466,"src":"706:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"735:85:12","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":1332,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:12","nodeType":"ErrorDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"account","nameLocation":"866:7:12","nodeType":"VariableDeclaration","scope":1332,"src":"858:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:12"},"src":"825:50:12"},{"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"881:82:12","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":1337,"name":"OwnableInvalidOwner","nameLocation":"974:19:12","nodeType":"ErrorDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"owner","nameLocation":"1002:5:12","nodeType":"VariableDeclaration","scope":1337,"src":"994:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:12"},"src":"968:41:12"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1343,"name":"OwnershipTransferred","nameLocation":"1021:20:12","nodeType":"EventDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:12","nodeType":"VariableDeclaration","scope":1343,"src":"1042:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:12","nodeType":"VariableDeclaration","scope":1343,"src":"1073:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:12"},"src":"1015:84:12"},{"body":{"id":1368,"nodeType":"Block","src":"1259:153:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"1273:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:12","typeDescriptions":{}}},"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1363,"nodeType":"IfStatement","src":"1269:95:12","trueBody":{"id":1362,"nodeType":"Block","src":"1301:63:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:12","typeDescriptions":{}}},"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1355,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"1322:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"RevertStatement","src":"1315:38:12"}]}},{"expression":{"arguments":[{"id":1365,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"1392:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1364,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1373:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1367,"nodeType":"ExpressionStatement","src":"1373:32:12"}]},"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"1105:115:12","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":1369,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:12","nodeType":"VariableDeclaration","scope":1369,"src":"1237:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:12"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[],"src":"1259:0:12"},"scope":1466,"src":"1225:187:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1376,"nodeType":"Block","src":"1521:41:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1372,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"1531:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1374,"nodeType":"ExpressionStatement","src":"1531:13:12"},{"id":1375,"nodeType":"PlaceholderStatement","src":"1554:1:12"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"1418:77:12","text":" @dev Throws if called by any account other than the owner."},"id":1377,"name":"onlyOwner","nameLocation":"1509:9:12","nodeType":"ModifierDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[],"src":"1518:2:12"},"src":"1500:62:12","virtual":false,"visibility":"internal"},{"body":{"id":1385,"nodeType":"Block","src":"1693:30:12","statements":[{"expression":{"id":1383,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"1710:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1382,"id":1384,"nodeType":"Return","src":"1703:13:12"}]},"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"1568:65:12","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:12","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[],"src":"1652:2:12"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"1684:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:12"},"scope":1466,"src":"1638:85:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1402,"nodeType":"Block","src":"1841:117:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1855:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1392,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1866:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"1851:101:12","trueBody":{"id":1400,"nodeType":"Block","src":"1880:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1396,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1928:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1395,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"1901:26:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"RevertStatement","src":"1894:47:12"}]}}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"1729:62:12","text":" @dev Throws if the sender is not the owner."},"id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:12","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"1816:2:12"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"1841:0:12"},"scope":1466,"src":"1796:162:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1416,"nodeType":"Block","src":"2347:47:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:12","typeDescriptions":{}}},"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1409,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2357:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1415,"nodeType":"ExpressionStatement","src":"2357:30:12"}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"1964:324:12","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1417,"implemented":true,"kind":"function","modifiers":[{"id":1407,"kind":"modifierInvocation","modifierName":{"id":1406,"name":"onlyOwner","nameLocations":["2337:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"2337:9:12"},"nodeType":"ModifierInvocation","src":"2337:9:12"}],"name":"renounceOwnership","nameLocation":"2302:17:12","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[],"src":"2319:2:12"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[],"src":"2347:0:12"},"scope":1466,"src":"2293:101:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1444,"nodeType":"Block","src":"2613:145:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"2627:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:12","typeDescriptions":{}}},"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1439,"nodeType":"IfStatement","src":"2623:91:12","trueBody":{"id":1438,"nodeType":"Block","src":"2651:63:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:12","typeDescriptions":{}}},"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1431,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"2672:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1437,"nodeType":"RevertStatement","src":"2665:38:12"}]}},{"expression":{"arguments":[{"id":1441,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"2742:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1440,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2723:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1443,"nodeType":"ExpressionStatement","src":"2723:28:12"}]},"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"2400:138:12","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1445,"implemented":true,"kind":"function","modifiers":[{"id":1423,"kind":"modifierInvocation","modifierName":{"id":1422,"name":"onlyOwner","nameLocations":["2603:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"2603:9:12"},"nodeType":"ModifierInvocation","src":"2603:9:12"}],"name":"transferOwnership","nameLocation":"2552:17:12","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:12","nodeType":"VariableDeclaration","scope":1445,"src":"2570:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:12"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"2613:0:12"},"scope":1466,"src":"2543:215:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1464,"nodeType":"Block","src":"2975:124:12","statements":[{"assignments":[1452],"declarations":[{"constant":false,"id":1452,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:12","nodeType":"VariableDeclaration","scope":1464,"src":"2985:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1454,"initialValue":{"id":1453,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"3004:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:12"},{"expression":{"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1455,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"3020:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1456,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"3029:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1458,"nodeType":"ExpressionStatement","src":"3020:17:12"},{"eventCall":{"arguments":[{"id":1460,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3073:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1461,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"3083:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1459,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"3052:20:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1463,"nodeType":"EmitStatement","src":"3047:45:12"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"2764:143:12","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:12","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:12","nodeType":"VariableDeclaration","scope":1465,"src":"2940:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1447,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:12"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"2975:0:12"},"scope":1466,"src":"2912:187:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1467,"src":"663:2438:12","usedErrors":[1332,1337],"usedEvents":[1343]}],"src":"102:3000:12"},"id":12},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1544]},"id":1545,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1468,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"132:70:13","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1544,"linearizedBaseContracts":[1544],"name":"IERC20","nameLocation":"213:6:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"226:158:13","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1478,"name":"Transfer","nameLocation":"395:8:13","nodeType":"EventDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:13","nodeType":"VariableDeclaration","scope":1478,"src":"404:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:13","nodeType":"VariableDeclaration","scope":1478,"src":"426:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1476,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:13","nodeType":"VariableDeclaration","scope":1478,"src":"446:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:13"},"src":"389:72:13"},{"anonymous":false,"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"467:148:13","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1487,"name":"Approval","nameLocation":"626:8:13","nodeType":"EventDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:13","nodeType":"VariableDeclaration","scope":1487,"src":"635:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1483,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:13","nodeType":"VariableDeclaration","scope":1487,"src":"658:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1485,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:13","nodeType":"VariableDeclaration","scope":1487,"src":"683:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:13"},"src":"620:78:13"},{"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"704:65:13","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1493,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:13","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[],"src":"794:2:13"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"820:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:13"},"scope":1544,"src":"774:55:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"835:71:13","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1501,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:13","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"account","nameLocation":"938:7:13","nodeType":"VariableDeclaration","scope":1501,"src":"930:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:13"},"returnParameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"970:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1498,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:13"},"scope":1544,"src":"911:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"985:213:13","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1511,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:13","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"to","nameLocation":"1229:2:13","nodeType":"VariableDeclaration","scope":1511,"src":"1221:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"value","nameLocation":"1241:5:13","nodeType":"VariableDeclaration","scope":1511,"src":"1233:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:13"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"1266:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1508,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:13"},"scope":1544,"src":"1203:69:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"1278:264:13","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1521,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:13","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"owner","nameLocation":"1574:5:13","nodeType":"VariableDeclaration","scope":1521,"src":"1566:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1516,"mutability":"mutable","name":"spender","nameLocation":"1589:7:13","nodeType":"VariableDeclaration","scope":1521,"src":"1581:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:13"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"1621:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:13"},"scope":1544,"src":"1547:83:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"1636:667:13","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1531,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:13","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"spender","nameLocation":"2333:7:13","nodeType":"VariableDeclaration","scope":1531,"src":"2325:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"value","nameLocation":"2350:5:13","nodeType":"VariableDeclaration","scope":1531,"src":"2342:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:13"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"2375:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1528,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:13"},"scope":1544,"src":"2308:73:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"2387:297:13","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1543,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:13","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"from","nameLocation":"2719:4:13","nodeType":"VariableDeclaration","scope":1543,"src":"2711:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1536,"mutability":"mutable","name":"to","nameLocation":"2733:2:13","nodeType":"VariableDeclaration","scope":1543,"src":"2725:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"value","nameLocation":"2745:5:13","nodeType":"VariableDeclaration","scope":1543,"src":"2737:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:13"},"returnParameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1543,"src":"2770:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1540,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:13"},"scope":1544,"src":"2689:87:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1545,"src":"203:2575:13","usedErrors":[],"usedEvents":[1478,1487]}],"src":"106:2673:13"},"id":13},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1580]},"id":1581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1546,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"149:1963:14","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1580,"linearizedBaseContracts":[1580],"name":"IERC20Permit","nameLocation":"2123:12:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"2142:850:14","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1565,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:14","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"owner","nameLocation":"3030:5:14","nodeType":"VariableDeclaration","scope":1565,"src":"3022:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"spender","nameLocation":"3053:7:14","nodeType":"VariableDeclaration","scope":1565,"src":"3045:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"value","nameLocation":"3078:5:14","nodeType":"VariableDeclaration","scope":1565,"src":"3070:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:14","nodeType":"VariableDeclaration","scope":1565,"src":"3093:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"v","nameLocation":"3125:1:14","nodeType":"VariableDeclaration","scope":1565,"src":"3119:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1557,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"r","nameLocation":"3144:1:14","nodeType":"VariableDeclaration","scope":1565,"src":"3136:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"s","nameLocation":"3163:1:14","nodeType":"VariableDeclaration","scope":1565,"src":"3155:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1561,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:14"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"3179:0:14"},"scope":1580,"src":"2997:183:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"3186:294:14","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1573,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:14","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"owner","nameLocation":"3509:5:14","nodeType":"VariableDeclaration","scope":1573,"src":"3501:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:14"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1573,"src":"3539:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:14"},"scope":1580,"src":"3485:63:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"3554:128:14","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1579,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:14","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"3765:2:14"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"3791:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:14"},"scope":1580,"src":"3740:60:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1581,"src":"2113:1689:14","usedErrors":[],"usedEvents":[]}],"src":"123:3680:14"},"id":14},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2123],"IERC20":[1544],"IERC20Permit":[1580],"SafeERC20":[1870]},"id":1871,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1582,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1871,"sourceUnit":1545,"src":"141:37:15","symbolAliases":[{"foreign":{"id":1583,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"149:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1871,"sourceUnit":1581,"src":"179:60:15","symbolAliases":[{"foreign":{"id":1585,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"187:12:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1588,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1871,"sourceUnit":2124,"src":"240:51:15","symbolAliases":[{"foreign":{"id":1587,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"248:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"293:457:15","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1870,"linearizedBaseContracts":[1870],"name":"SafeERC20","nameLocation":"759:9:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1592,"libraryName":{"id":1590,"name":"Address","nameLocations":["781:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":2123,"src":"781:7:15"},"nodeType":"UsingForDirective","src":"775:26:15","typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"807:64:15","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1597,"name":"SafeERC20FailedOperation","nameLocation":"882:24:15","nodeType":"ErrorDefinition","parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"token","nameLocation":"915:5:15","nodeType":"VariableDeclaration","scope":1597,"src":"907:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:15"},"src":"876:46:15"},{"documentation":{"id":1598,"nodeType":"StructuredDocumentation","src":"928:71:15","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1606,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:15","nodeType":"ErrorDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"spender","nameLocation":"1051:7:15","nodeType":"VariableDeclaration","scope":1606,"src":"1043:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:15","nodeType":"VariableDeclaration","scope":1606,"src":"1060:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:15","nodeType":"VariableDeclaration","scope":1606,"src":"1086:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:15"},"src":"1004:109:15"},{"body":{"id":1629,"nodeType":"Block","src":"1375:88:15","statements":[{"expression":{"arguments":[{"id":1618,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"1405:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1621,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"1427:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1511,"src":"1427:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1623,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"1444:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1448:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1619,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1617,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1385:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1544_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1628,"nodeType":"ExpressionStatement","src":"1385:71:15"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"1119:179:15","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:15","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"token","nameLocation":"1332:5:15","nodeType":"VariableDeclaration","scope":1630,"src":"1325:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},"typeName":{"id":1609,"nodeType":"UserDefinedTypeName","pathNode":{"id":1608,"name":"IERC20","nameLocations":["1325:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1544,"src":"1325:6:15"},"referencedDeclaration":1544,"src":"1325:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1612,"mutability":"mutable","name":"to","nameLocation":"1347:2:15","nodeType":"VariableDeclaration","scope":1630,"src":"1339:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1614,"mutability":"mutable","name":"value","nameLocation":"1359:5:15","nodeType":"VariableDeclaration","scope":1630,"src":"1351:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:15"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"1375:0:15"},"scope":1870,"src":"1303:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"1792:98:15","statements":[{"expression":{"arguments":[{"id":1644,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1822:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1647,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1844:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"1844:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1649,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"1865:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1871:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"1875:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1645,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1643,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1802:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1544_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"ExpressionStatement","src":"1802:81:15"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1469:228:15","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:15","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"token","nameLocation":"1735:5:15","nodeType":"VariableDeclaration","scope":1657,"src":"1728:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},"typeName":{"id":1633,"nodeType":"UserDefinedTypeName","pathNode":{"id":1632,"name":"IERC20","nameLocations":["1728:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1544,"src":"1728:6:15"},"referencedDeclaration":1544,"src":"1728:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"from","nameLocation":"1750:4:15","nodeType":"VariableDeclaration","scope":1657,"src":"1742:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"to","nameLocation":"1764:2:15","nodeType":"VariableDeclaration","scope":1657,"src":"1756:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"value","nameLocation":"1776:5:15","nodeType":"VariableDeclaration","scope":1657,"src":"1768:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:15"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"1792:0:15"},"scope":1870,"src":"1702:188:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1687,"nodeType":"Block","src":"2167:139:15","statements":[{"assignments":[1669],"declarations":[{"constant":false,"id":1669,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:15","nodeType":"VariableDeclaration","scope":1687,"src":"2177:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1678,"initialValue":{"arguments":[{"arguments":[{"id":1674,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1870","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1870","typeString":"library SafeERC20"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:15","typeDescriptions":{}}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1676,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"2231:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1670,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2200:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1521,"src":"2200:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:15"},{"expression":{"arguments":[{"id":1680,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2262:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},{"id":1681,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"2269:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1682,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"2278:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"2293:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1679,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2249:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1544_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1686,"nodeType":"ExpressionStatement","src":"2249:50:15"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"1896:180:15","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1688,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:15","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"token","nameLocation":"2119:5:15","nodeType":"VariableDeclaration","scope":1688,"src":"2112:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},"typeName":{"id":1660,"nodeType":"UserDefinedTypeName","pathNode":{"id":1659,"name":"IERC20","nameLocations":["2112:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1544,"src":"2112:6:15"},"referencedDeclaration":1544,"src":"2112:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"spender","nameLocation":"2134:7:15","nodeType":"VariableDeclaration","scope":1688,"src":"2126:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"value","nameLocation":"2151:5:15","nodeType":"VariableDeclaration","scope":1688,"src":"2143:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:15"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"2167:0:15"},"scope":1870,"src":"2081:225:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1730,"nodeType":"Block","src":"2607:370:15","statements":[{"id":1729,"nodeType":"UncheckedBlock","src":"2617:354:15","statements":[{"assignments":[1700],"declarations":[{"constant":false,"id":1700,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:15","nodeType":"VariableDeclaration","scope":1729,"src":"2641:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1709,"initialValue":{"arguments":[{"arguments":[{"id":1705,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1870","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1870","typeString":"library SafeERC20"}],"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:15","typeDescriptions":{}}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1707,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"2699:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1701,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"2668:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1521,"src":"2668:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1710,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2725:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1711,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"2744:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1720,"nodeType":"IfStatement","src":"2721:160:15","trueBody":{"id":1719,"nodeType":"Block","src":"2763:118:15","statements":[{"errorCall":{"arguments":[{"id":1714,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"2821:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1715,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2830:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1716,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"2848:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1713,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"2788:32:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1718,"nodeType":"RevertStatement","src":"2781:85:15"}]}},{"expression":{"arguments":[{"id":1722,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"2907:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},{"id":1723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"2914:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1724,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"2923:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1725,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"2942:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1721,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2894:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1544_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1728,"nodeType":"ExpressionStatement","src":"2894:66:15"}]}]},"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"2312:192:15","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:15","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"token","nameLocation":"2547:5:15","nodeType":"VariableDeclaration","scope":1731,"src":"2540:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},"typeName":{"id":1691,"nodeType":"UserDefinedTypeName","pathNode":{"id":1690,"name":"IERC20","nameLocations":["2540:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1544,"src":"2540:6:15"},"referencedDeclaration":1544,"src":"2540:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"spender","nameLocation":"2562:7:15","nodeType":"VariableDeclaration","scope":1731,"src":"2554:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:15","nodeType":"VariableDeclaration","scope":1731,"src":"2571:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:15"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[],"src":"2607:0:15"},"scope":1870,"src":"2509:468:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1777,"nodeType":"Block","src":"3373:303:15","statements":[{"assignments":[1743],"declarations":[{"constant":false,"id":1743,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:15","nodeType":"VariableDeclaration","scope":1777,"src":"3383:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1742,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1752,"initialValue":{"arguments":[{"expression":{"id":1746,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3426:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"3426:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1748,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"3442:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1739,"src":"3451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1744,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:15"},{"condition":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:15","subExpression":{"arguments":[{"id":1754,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3498:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},{"id":1755,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3505:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1753,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"3474:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1544_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1776,"nodeType":"IfStatement","src":"3469:201:15","trueBody":{"id":1775,"nodeType":"Block","src":"3520:150:15","statements":[{"expression":{"arguments":[{"id":1759,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3554:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1762,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3576:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1531,"src":"3576:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"3592:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1760,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:15","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1758,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"3534:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1544_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1769,"nodeType":"ExpressionStatement","src":"3534:71:15"},{"expression":{"arguments":[{"id":1771,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"3639:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},{"id":1772,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3646:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1770,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"3619:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1544_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1774,"nodeType":"ExpressionStatement","src":"3619:40:15"}]}}]},"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"2983:308:15","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:15","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"token","nameLocation":"3325:5:15","nodeType":"VariableDeclaration","scope":1778,"src":"3318:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},"typeName":{"id":1734,"nodeType":"UserDefinedTypeName","pathNode":{"id":1733,"name":"IERC20","nameLocations":["3318:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1544,"src":"3318:6:15"},"referencedDeclaration":1544,"src":"3318:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"spender","nameLocation":"3340:7:15","nodeType":"VariableDeclaration","scope":1778,"src":"3332:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"value","nameLocation":"3357:5:15","nodeType":"VariableDeclaration","scope":1778,"src":"3349:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:15"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[],"src":"3373:0:15"},"scope":1870,"src":"3296:380:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"4129:559:15","statements":[{"assignments":[1788],"declarations":[{"constant":false,"id":1788,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:15","nodeType":"VariableDeclaration","scope":1819,"src":"4478:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1787,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1796,"initialValue":{"arguments":[{"id":1794,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4532:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1791,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"4512:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:15","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:15","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1944,"src":"4504:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1797,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4551:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:15","memberName":"length","nodeType":"MemberAccess","src":"4551:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:15","subExpression":{"arguments":[{"id":1803,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4589:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1804,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:15","typeDescriptions":{}}}],"id":1806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1801,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:15","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"nodeType":"IfStatement","src":"4547:135:15","trueBody":{"id":1817,"nodeType":"Block","src":"4610:72:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1813,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"4664:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}],"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:15","typeDescriptions":{}}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1810,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"4631:24:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1816,"nodeType":"RevertStatement","src":"4624:47:15"}]}}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"3682:372:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:15","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"token","nameLocation":"4095:5:15","nodeType":"VariableDeclaration","scope":1820,"src":"4088:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},"typeName":{"id":1781,"nodeType":"UserDefinedTypeName","pathNode":{"id":1780,"name":"IERC20","nameLocations":["4088:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1544,"src":"4088:6:15"},"referencedDeclaration":1544,"src":"4088:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"data","nameLocation":"4115:4:15","nodeType":"VariableDeclaration","scope":1820,"src":"4102:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1783,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:15"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"4129:0:15"},"scope":1870,"src":"4059:629:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1868,"nodeType":"Block","src":"5278:489:15","statements":[{"assignments":[1832,1834],"declarations":[{"constant":false,"id":1832,"mutability":"mutable","name":"success","nameLocation":"5579:7:15","nodeType":"VariableDeclaration","scope":1868,"src":"5574:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1831,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:15","nodeType":"VariableDeclaration","scope":1868,"src":"5588:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1842,"initialValue":{"arguments":[{"id":1840,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"5635:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1837,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"5623:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}],"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:15","typeDescriptions":{}}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:15","memberName":"call","nodeType":"MemberAccess","src":"5615:19:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:15"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"5657:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1844,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"5669:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:15","memberName":"length","nodeType":"MemberAccess","src":"5669:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1850,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"5706:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":1851,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:15","typeDescriptions":{}}}],"id":1853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":1848,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:15","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1860,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"5738:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}],"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1858,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:15","typeDescriptions":{}}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:15","memberName":"code","nodeType":"MemberAccess","src":"5730:19:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:15","memberName":"length","nodeType":"MemberAccess","src":"5730:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1830,"id":1867,"nodeType":"Return","src":"5650:110:15"}]},"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"4694:490:15","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":1869,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:15","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"token","nameLocation":"5229:5:15","nodeType":"VariableDeclaration","scope":1869,"src":"5222:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"},"typeName":{"id":1823,"nodeType":"UserDefinedTypeName","pathNode":{"id":1822,"name":"IERC20","nameLocations":["5222:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1544,"src":"5222:6:15"},"referencedDeclaration":1544,"src":"5222:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1544","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"data","nameLocation":"5249:4:15","nodeType":"VariableDeclaration","scope":1869,"src":"5236:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1825,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:15"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"5272:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1828,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:15"},"scope":1870,"src":"5189:578:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1871,"src":"751:5018:15","usedErrors":[1597,1606],"usedEvents":[]}],"src":"115:5655:15"},"id":15},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2123]},"id":2124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1872,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"127:67:16","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2123,"linearizedBaseContracts":[2123],"name":"Address","nameLocation":"203:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"217:94:16","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1878,"name":"AddressInsufficientBalance","nameLocation":"322:26:16","nodeType":"ErrorDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"account","nameLocation":"357:7:16","nodeType":"VariableDeclaration","scope":1878,"src":"349:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:16"},"src":"316:50:16"},{"documentation":{"id":1879,"nodeType":"StructuredDocumentation","src":"372:75:16","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1883,"name":"AddressEmptyCode","nameLocation":"458:16:16","nodeType":"ErrorDefinition","parameters":{"id":1882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1881,"mutability":"mutable","name":"target","nameLocation":"483:6:16","nodeType":"VariableDeclaration","scope":1883,"src":"475:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:16"},"src":"452:39:16"},{"documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"497:89:16","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1886,"name":"FailedInnerCall","nameLocation":"597:15:16","nodeType":"ErrorDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[],"src":"612:2:16"},"src":"591:24:16"},{"body":{"id":1926,"nodeType":"Block","src":"1602:260:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1896,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2123","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2123","typeString":"library Address"}],"id":1895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1894,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:16","typeDescriptions":{}}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:16","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1899,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1640:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1909,"nodeType":"IfStatement","src":"1612:109:16","trueBody":{"id":1908,"nodeType":"Block","src":"1648:73:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1904,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2123","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2123","typeString":"library Address"}],"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:16","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1901,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1669:26:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1907,"nodeType":"RevertStatement","src":"1662:48:16"}]}},{"assignments":[1911,null],"declarations":[{"constant":false,"id":1911,"mutability":"mutable","name":"success","nameLocation":"1737:7:16","nodeType":"VariableDeclaration","scope":1926,"src":"1732:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1910,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1918,"initialValue":{"arguments":[{"hexValue":"","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1912,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"1750:9:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:16","memberName":"call","nodeType":"MemberAccess","src":"1750:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1914,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"1772:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:16"},{"condition":{"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:16","subExpression":{"id":1919,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"1798:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1925,"nodeType":"IfStatement","src":"1793:63:16","trueBody":{"id":1924,"nodeType":"Block","src":"1807:49:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1921,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1828:15:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1923,"nodeType":"RevertStatement","src":"1821:24:16"}]}}]},"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"621:905:16","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:16","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:16","nodeType":"VariableDeclaration","scope":1927,"src":"1550:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"amount","nameLocation":"1585:6:16","nodeType":"VariableDeclaration","scope":1927,"src":"1577:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:16"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[],"src":"1602:0:16"},"scope":2123,"src":"1531:331:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1943,"nodeType":"Block","src":"2794:62:16","statements":[{"expression":{"arguments":[{"id":1938,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"2833:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1939,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"2841:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1937,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"2811:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1936,"id":1942,"nodeType":"Return","src":"2804:45:16"}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"1868:832:16","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1944,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:16","nodeType":"FunctionDefinition","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"target","nameLocation":"2735:6:16","nodeType":"VariableDeclaration","scope":1944,"src":"2727:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"data","nameLocation":"2756:4:16","nodeType":"VariableDeclaration","scope":1944,"src":"2743:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1931,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:16"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1944,"src":"2780:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1934,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:16"},"scope":2123,"src":"2705:151:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1989,"nodeType":"Block","src":"3293:279:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1958,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2123","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2123","typeString":"library Address"}],"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1956,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:16","typeDescriptions":{}}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:16","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"3331:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1971,"nodeType":"IfStatement","src":"3303:108:16","trueBody":{"id":1970,"nodeType":"Block","src":"3338:73:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1966,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2123","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2123","typeString":"library Address"}],"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:16","typeDescriptions":{}}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1963,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3359:26:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1969,"nodeType":"RevertStatement","src":"3352:48:16"}]}},{"assignments":[1973,1975],"declarations":[{"constant":false,"id":1973,"mutability":"mutable","name":"success","nameLocation":"3426:7:16","nodeType":"VariableDeclaration","scope":1989,"src":"3421:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1972,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:16","nodeType":"VariableDeclaration","scope":1989,"src":"3435:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1982,"initialValue":{"arguments":[{"id":1980,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"3488:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1976,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"3462:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:16","memberName":"call","nodeType":"MemberAccess","src":"3462:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"3481:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:16"},{"expression":{"arguments":[{"id":1984,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"3537:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1985,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"3545:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1986,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3554:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1983,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"3510:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1955,"id":1988,"nodeType":"Return","src":"3503:62:16"}]},"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"2862:313:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1990,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:16","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"target","nameLocation":"3219:6:16","nodeType":"VariableDeclaration","scope":1990,"src":"3211:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1946,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"data","nameLocation":"3240:4:16","nodeType":"VariableDeclaration","scope":1990,"src":"3227:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1948,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"value","nameLocation":"3254:5:16","nodeType":"VariableDeclaration","scope":1990,"src":"3246:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:16"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1990,"src":"3279:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1953,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:16"},"scope":2123,"src":"3180:392:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2015,"nodeType":"Block","src":"3811:154:16","statements":[{"assignments":[2001,2003],"declarations":[{"constant":false,"id":2001,"mutability":"mutable","name":"success","nameLocation":"3827:7:16","nodeType":"VariableDeclaration","scope":2015,"src":"3822:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2000,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:16","nodeType":"VariableDeclaration","scope":2015,"src":"3836:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2002,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2008,"initialValue":{"arguments":[{"id":2006,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"3881:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2004,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3863:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:16","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:16","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:16"},{"expression":{"arguments":[{"id":2010,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3930:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2011,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"3938:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2012,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"3947:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2009,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"3903:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1999,"id":2014,"nodeType":"Return","src":"3896:62:16"}]},"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"3578:128:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2016,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:16","nodeType":"FunctionDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"target","nameLocation":"3747:6:16","nodeType":"VariableDeclaration","scope":2016,"src":"3739:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"data","nameLocation":"3768:4:16","nodeType":"VariableDeclaration","scope":2016,"src":"3755:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1994,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:16"},"returnParameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2016,"src":"3797:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1997,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:16"},"scope":2123,"src":"3711:254:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"4203:156:16","statements":[{"assignments":[2027,2029],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"success","nameLocation":"4219:7:16","nodeType":"VariableDeclaration","scope":2041,"src":"4214:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2026,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:16","nodeType":"VariableDeclaration","scope":2041,"src":"4228:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2028,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2034,"initialValue":{"arguments":[{"id":2032,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"4275:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2030,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4255:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:16","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:16","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:16"},{"expression":{"arguments":[{"id":2036,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"4324:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2037,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"4332:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2038,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"4341:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2035,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"4297:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2025,"id":2040,"nodeType":"Return","src":"4290:62:16"}]},"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"3971:130:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:16","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"target","nameLocation":"4144:6:16","nodeType":"VariableDeclaration","scope":2042,"src":"4136:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"data","nameLocation":"4165:4:16","nodeType":"VariableDeclaration","scope":2042,"src":"4152:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2020,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:16"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"4189:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2023,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:16"},"scope":2123,"src":"4106:253:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2081,"nodeType":"Block","src":"4783:424:16","statements":[{"condition":{"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:16","subExpression":{"id":2054,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"4798:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2079,"nodeType":"Block","src":"4857:344:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2061,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"5045:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:16","memberName":"length","nodeType":"MemberAccess","src":"5045:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2065,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"5071:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:16","memberName":"code","nodeType":"MemberAccess","src":"5071:11:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:16","memberName":"length","nodeType":"MemberAccess","src":"5071:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2076,"nodeType":"IfStatement","src":"5041:119:16","trueBody":{"id":2075,"nodeType":"Block","src":"5096:64:16","statements":[{"errorCall":{"arguments":[{"id":2072,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"5138:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2071,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5121:16:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2074,"nodeType":"RevertStatement","src":"5114:31:16"}]}},{"expression":{"id":2077,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"5180:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2053,"id":2078,"nodeType":"Return","src":"5173:17:16"}]},"id":2080,"nodeType":"IfStatement","src":"4793:408:16","trueBody":{"id":2060,"nodeType":"Block","src":"4807:44:16","statements":[{"expression":{"arguments":[{"id":2057,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"4829:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2056,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"4821:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2059,"nodeType":"ExpressionStatement","src":"4821:19:16"}]}}]},"documentation":{"id":2043,"nodeType":"StructuredDocumentation","src":"4365:255:16","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:16","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"target","nameLocation":"4678:6:16","nodeType":"VariableDeclaration","scope":2082,"src":"4670:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2044,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"success","nameLocation":"4699:7:16","nodeType":"VariableDeclaration","scope":2082,"src":"4694:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2046,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:16","nodeType":"VariableDeclaration","scope":2082,"src":"4716:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2048,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:16"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"4769:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2051,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:16"},"scope":2123,"src":"4625:582:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2103,"nodeType":"Block","src":"5509:122:16","statements":[{"condition":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:16","subExpression":{"id":2092,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"5524:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2101,"nodeType":"Block","src":"5583:42:16","statements":[{"expression":{"id":2099,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"5604:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2091,"id":2100,"nodeType":"Return","src":"5597:17:16"}]},"id":2102,"nodeType":"IfStatement","src":"5519:106:16","trueBody":{"id":2098,"nodeType":"Block","src":"5533:44:16","statements":[{"expression":{"arguments":[{"id":2095,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"5555:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2094,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"5547:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2097,"nodeType":"ExpressionStatement","src":"5547:19:16"}]}}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"5213:189:16","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:16","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"success","nameLocation":"5438:7:16","nodeType":"VariableDeclaration","scope":2104,"src":"5433:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2084,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:16","nodeType":"VariableDeclaration","scope":2104,"src":"5447:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2086,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:16"},"returnParameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2104,"src":"5495:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2089,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:16"},"scope":2123,"src":"5407:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2121,"nodeType":"Block","src":"5798:461:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2110,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"5874:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:16","memberName":"length","nodeType":"MemberAccess","src":"5874:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2119,"nodeType":"Block","src":"6204:49:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2116,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"6225:15:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2118,"nodeType":"RevertStatement","src":"6218:24:16"}]},"id":2120,"nodeType":"IfStatement","src":"5870:383:16","trueBody":{"id":2115,"nodeType":"Block","src":"5897:301:16","statements":[{"AST":{"nativeSrc":"6055:133:16","nodeType":"YulBlock","src":"6055:133:16","statements":[{"nativeSrc":"6073:40:16","nodeType":"YulVariableDeclaration","src":"6073:40:16","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:16","nodeType":"YulIdentifier","src":"6102:10:16"}],"functionName":{"name":"mload","nativeSrc":"6096:5:16","nodeType":"YulIdentifier","src":"6096:5:16"},"nativeSrc":"6096:17:16","nodeType":"YulFunctionCall","src":"6096:17:16"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:16","nodeType":"YulTypedName","src":"6077:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:16","nodeType":"YulLiteral","src":"6141:2:16","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:16","nodeType":"YulIdentifier","src":"6145:10:16"}],"functionName":{"name":"add","nativeSrc":"6137:3:16","nodeType":"YulIdentifier","src":"6137:3:16"},"nativeSrc":"6137:19:16","nodeType":"YulFunctionCall","src":"6137:19:16"},{"name":"returndata_size","nativeSrc":"6158:15:16","nodeType":"YulIdentifier","src":"6158:15:16"}],"functionName":{"name":"revert","nativeSrc":"6130:6:16","nodeType":"YulIdentifier","src":"6130:6:16"},"nativeSrc":"6130:44:16","nodeType":"YulFunctionCall","src":"6130:44:16"},"nativeSrc":"6130:44:16","nodeType":"YulExpressionStatement","src":"6130:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2107,"isOffset":false,"isSlot":false,"src":"6102:10:16","valueSize":1},{"declaration":2107,"isOffset":false,"isSlot":false,"src":"6145:10:16","valueSize":1}],"id":2114,"nodeType":"InlineAssembly","src":"6046:142:16"}]}}]},"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"5637:101:16","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2122,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:16","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:16","nodeType":"VariableDeclaration","scope":2122,"src":"5760:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2106,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:16"},"returnParameters":{"id":2109,"nodeType":"ParameterList","parameters":[],"src":"5798:0:16"},"scope":2123,"src":"5743:516:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2124,"src":"195:6066:16","usedErrors":[1878,1883,1886],"usedEvents":[]}],"src":"101:6161:16"},"id":16},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2153]},"id":2154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2125,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"127:496:17","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2153,"linearizedBaseContracts":[2153],"name":"Context","nameLocation":"642:7:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":2134,"nodeType":"Block","src":"718:34:17","statements":[{"expression":{"expression":{"id":2131,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:17","memberName":"sender","nodeType":"MemberAccess","src":"735:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2130,"id":2133,"nodeType":"Return","src":"728:17:17"}]},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:17","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[],"src":"675:2:17"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"709:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:17"},"scope":2153,"src":"656:96:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2143,"nodeType":"Block","src":"825:32:17","statements":[{"expression":{"expression":{"id":2140,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:17","memberName":"data","nodeType":"MemberAccess","src":"842:8:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2139,"id":2142,"nodeType":"Return","src":"835:15:17"}]},"id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:17","nodeType":"FunctionDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[],"src":"775:2:17"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2144,"src":"809:14:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2137,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:17"},"scope":2153,"src":"758:99:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2151,"nodeType":"Block","src":"935:25:17","statements":[{"expression":{"hexValue":"30","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2148,"id":2150,"nodeType":"Return","src":"945:8:17"}]},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:17","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[],"src":"892:2:17"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2152,"src":"926:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:17"},"scope":2153,"src":"863:97:17","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2154,"src":"624:338:17","usedErrors":[],"usedEvents":[]}],"src":"101:862:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3884],"SignedMath":[3989],"Strings":[2408]},"id":2409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2155,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2409,"sourceUnit":3885,"src":"127:37:18","symbolAliases":[{"foreign":{"id":2156,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2159,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2409,"sourceUnit":3990,"src":"165:49:18","symbolAliases":[{"foreign":{"id":2158,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"173:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"216:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":2408,"linearizedBaseContracts":[2408],"name":"Strings","nameLocation":"259:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2163,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:18","nodeType":"VariableDeclaration","scope":2408,"src":"273:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2161,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2166,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:18","nodeType":"VariableDeclaration","scope":2408,"src":"335:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2164,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"384:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2173,"name":"StringsInsufficientHexLength","nameLocation":"476:28:18","nodeType":"ErrorDefinition","parameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"value","nameLocation":"513:5:18","nodeType":"VariableDeclaration","scope":2173,"src":"505:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2171,"mutability":"mutable","name":"length","nameLocation":"528:6:18","nodeType":"VariableDeclaration","scope":2173,"src":"520:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:18"},"src":"470:66:18"},{"body":{"id":2220,"nodeType":"Block","src":"708:627:18","statements":[{"id":2219,"nodeType":"UncheckedBlock","src":"718:611:18","statements":[{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"length","nameLocation":"750:6:18","nodeType":"VariableDeclaration","scope":2219,"src":"742:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2189,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2183,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"759:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3884_$","typeString":"type(library Math)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"759:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:18"},{"assignments":[2191],"declarations":[{"constant":false,"id":2191,"mutability":"mutable","name":"buffer","nameLocation":"808:6:18","nodeType":"VariableDeclaration","scope":2219,"src":"794:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2190,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2196,"initialValue":{"arguments":[{"id":2194,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"828:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2192,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:18"},{"assignments":[2198],"declarations":[{"constant":false,"id":2198,"mutability":"mutable","name":"ptr","nameLocation":"857:3:18","nodeType":"VariableDeclaration","scope":2219,"src":"849:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2199,"nodeType":"VariableDeclarationStatement","src":"849:11:18"},{"AST":{"nativeSrc":"930:67:18","nodeType":"YulBlock","src":"930:67:18","statements":[{"nativeSrc":"948:35:18","nodeType":"YulAssignment","src":"948:35:18","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:18","nodeType":"YulIdentifier","src":"959:6:18"},{"arguments":[{"kind":"number","nativeSrc":"971:2:18","nodeType":"YulLiteral","src":"971:2:18","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:18","nodeType":"YulIdentifier","src":"975:6:18"}],"functionName":{"name":"add","nativeSrc":"967:3:18","nodeType":"YulIdentifier","src":"967:3:18"},"nativeSrc":"967:15:18","nodeType":"YulFunctionCall","src":"967:15:18"}],"functionName":{"name":"add","nativeSrc":"955:3:18","nodeType":"YulIdentifier","src":"955:3:18"},"nativeSrc":"955:28:18","nodeType":"YulFunctionCall","src":"955:28:18"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:18","nodeType":"YulIdentifier","src":"948:3:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2191,"isOffset":false,"isSlot":false,"src":"959:6:18","valueSize":1},{"declaration":2182,"isOffset":false,"isSlot":false,"src":"975:6:18","valueSize":1},{"declaration":2198,"isOffset":false,"isSlot":false,"src":"948:3:18","valueSize":1}],"id":2200,"nodeType":"InlineAssembly","src":"921:76:18"},{"body":{"id":2215,"nodeType":"Block","src":"1023:269:18","statements":[{"expression":{"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:18","subExpression":{"id":2202,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"1041:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2204,"nodeType":"ExpressionStatement","src":"1041:5:18"},{"AST":{"nativeSrc":"1124:86:18","nodeType":"YulBlock","src":"1124:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:18","nodeType":"YulIdentifier","src":"1154:3:18"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:18","nodeType":"YulIdentifier","src":"1168:5:18"},{"kind":"number","nativeSrc":"1175:2:18","nodeType":"YulLiteral","src":"1175:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:18","nodeType":"YulIdentifier","src":"1164:3:18"},"nativeSrc":"1164:14:18","nodeType":"YulFunctionCall","src":"1164:14:18"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:18","nodeType":"YulIdentifier","src":"1180:10:18"}],"functionName":{"name":"byte","nativeSrc":"1159:4:18","nodeType":"YulIdentifier","src":"1159:4:18"},"nativeSrc":"1159:32:18","nodeType":"YulFunctionCall","src":"1159:32:18"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:18","nodeType":"YulIdentifier","src":"1146:7:18"},"nativeSrc":"1146:46:18","nodeType":"YulFunctionCall","src":"1146:46:18"},"nativeSrc":"1146:46:18","nodeType":"YulExpressionStatement","src":"1146:46:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2163,"isOffset":false,"isSlot":false,"src":"1180:10:18","valueSize":1},{"declaration":2198,"isOffset":false,"isSlot":false,"src":"1154:3:18","valueSize":1},{"declaration":2176,"isOffset":false,"isSlot":false,"src":"1168:5:18","valueSize":1}],"id":2205,"nodeType":"InlineAssembly","src":"1115:95:18"},{"expression":{"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1227:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2209,"nodeType":"ExpressionStatement","src":"1227:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"1260:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2214,"nodeType":"IfStatement","src":"1256:21:18","trueBody":{"id":2213,"nodeType":"Break","src":"1272:5:18"}}]},"condition":{"hexValue":"74727565","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2216,"nodeType":"WhileStatement","src":"1010:282:18"},{"expression":{"id":2217,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"1312:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2180,"id":2218,"nodeType":"Return","src":"1305:13:18"}]}]},"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"542:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2221,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:18","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"value","nameLocation":"663:5:18","nodeType":"VariableDeclaration","scope":2221,"src":"655:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:18"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2221,"src":"693:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2178,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:18"},"scope":2408,"src":"637:698:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2246,"nodeType":"Block","src":"1511:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"1542:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:18","trueExpression":{"hexValue":"2d","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"1588:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2239,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"1573:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3989_$","typeString":"type(library SignedMath)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3988,"src":"1573:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2238,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1564:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2229,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:18","typeDescriptions":{}}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:18","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2228,"id":2245,"nodeType":"Return","src":"1521:75:18"}]},"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"1341:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:18","nodeType":"FunctionDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"value","nameLocation":"1466:5:18","nodeType":"VariableDeclaration","scope":2247,"src":"1459:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2223,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:18"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2247,"src":"1496:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2226,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:18"},"scope":2408,"src":"1435:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2266,"nodeType":"Block","src":"1782:100:18","statements":[{"id":2265,"nodeType":"UncheckedBlock","src":"1792:84:18","statements":[{"expression":{"arguments":[{"id":2256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"1835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"1854:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2257,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"1842:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3884_$","typeString":"type(library Math)"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3826,"src":"1842:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2255,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2267,2350,2370],"referencedDeclaration":2350,"src":"1823:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2254,"id":2264,"nodeType":"Return","src":"1816:49:18"}]}]},"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"1609:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2267,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:18","nodeType":"FunctionDefinition","parameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"value","nameLocation":"1737:5:18","nodeType":"VariableDeclaration","scope":2267,"src":"1729:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:18"},"returnParameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2267,"src":"1767:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2252,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:18"},"scope":2408,"src":"1708:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2349,"nodeType":"Block","src":"2095:435:18","statements":[{"assignments":[2278],"declarations":[{"constant":false,"id":2278,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:18","nodeType":"VariableDeclaration","scope":2349,"src":"2105:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2280,"initialValue":{"id":2279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2126:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:18"},{"assignments":[2282],"declarations":[{"constant":false,"id":2282,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:18","nodeType":"VariableDeclaration","scope":2349,"src":"2141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2281,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2291,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2286,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"2177:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2283,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:18"},{"expression":{"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2292,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2198:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2294,"indexExpression":{"hexValue":"30","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2297,"nodeType":"ExpressionStatement","src":"2198:15:18"},{"expression":{"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2298,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2223:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2300,"indexExpression":{"hexValue":"31","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2303,"nodeType":"ExpressionStatement","src":"2223:15:18"},{"body":{"id":2332,"nodeType":"Block","src":"2293:95:18","statements":[{"expression":{"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2318,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2307:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2320,"indexExpression":{"id":2319,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2314:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2321,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"2319:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2325,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2322,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"2330:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2327,"nodeType":"ExpressionStatement","src":"2307:40:18"},{"expression":{"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2328,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"2361:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2331,"nodeType":"ExpressionStatement","src":"2361:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2312,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2281:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2333,"initializationExpression":{"assignments":[2305],"declarations":[{"constant":false,"id":2305,"mutability":"mutable","name":"i","nameLocation":"2261:1:18","nodeType":"VariableDeclaration","scope":2333,"src":"2253:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2311,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2307,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"2269:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:18","subExpression":{"id":2315,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2290:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2317,"nodeType":"ExpressionStatement","src":"2288:3:18"},"nodeType":"ForStatement","src":"2248:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2334,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"2401:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2343,"nodeType":"IfStatement","src":"2397:96:18","trueBody":{"id":2342,"nodeType":"Block","src":"2418:75:18","statements":[{"errorCall":{"arguments":[{"id":2338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2468:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2339,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"2475:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2337,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"2439:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2341,"nodeType":"RevertStatement","src":"2432:50:18"}]}},{"expression":{"arguments":[{"id":2346,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2516:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2344,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:18","typeDescriptions":{}}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2276,"id":2348,"nodeType":"Return","src":"2502:21:18"}]},"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"1888:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:18","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"value","nameLocation":"2034:5:18","nodeType":"VariableDeclaration","scope":2350,"src":"2026:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2272,"mutability":"mutable","name":"length","nameLocation":"2049:6:18","nodeType":"VariableDeclaration","scope":2350,"src":"2041:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:18"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2350,"src":"2080:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2274,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:18"},"scope":2408,"src":"2005:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2369,"nodeType":"Block","src":"2762:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2363,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"2807:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2361,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:18","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:18","typeDescriptions":{}}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2366,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"2815:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2358,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2267,2350,2370],"referencedDeclaration":2350,"src":"2779:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2357,"id":2368,"nodeType":"Return","src":"2772:58:18"}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"2536:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2370,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:18","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"addr","nameLocation":"2718:4:18","nodeType":"VariableDeclaration","scope":2370,"src":"2710:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2352,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:18"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2370,"src":"2747:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2355,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:18"},"scope":2408,"src":"2689:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2406,"nodeType":"Block","src":"2992:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2382,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"3015:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2380,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:18","typeDescriptions":{}}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:18","memberName":"length","nodeType":"MemberAccess","src":"3009:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2387,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"3034:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2385,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:18","typeDescriptions":{}}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:18","memberName":"length","nodeType":"MemberAccess","src":"3028:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"3063:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2392,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:18","typeDescriptions":{}}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2391,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2400,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"3086:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2398,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:18","typeDescriptions":{}}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2397,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2379,"id":2405,"nodeType":"Return","src":"3002:87:18"}]},"documentation":{"id":2371,"nodeType":"StructuredDocumentation","src":"2843:66:18","text":" @dev Returns true if the two strings are equal."},"id":2407,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:18","nodeType":"FunctionDefinition","parameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2373,"mutability":"mutable","name":"a","nameLocation":"2943:1:18","nodeType":"VariableDeclaration","scope":2407,"src":"2929:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2372,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2375,"mutability":"mutable","name":"b","nameLocation":"2960:1:18","nodeType":"VariableDeclaration","scope":2407,"src":"2946:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2374,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:18"},"returnParameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2407,"src":"2986:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2377,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:18"},"scope":2408,"src":"2914:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2409,"src":"251:2847:18","usedErrors":[2173],"usedEvents":[]}],"src":"101:2998:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2756]},"id":2757,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2410,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"138:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2756,"linearizedBaseContracts":[2756],"name":"ECDSA","nameLocation":"352:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2416,"members":[{"id":2412,"name":"NoError","nameLocation":"392:7:19","nodeType":"EnumValue","src":"392:7:19"},{"id":2413,"name":"InvalidSignature","nameLocation":"409:16:19","nodeType":"EnumValue","src":"409:16:19"},{"id":2414,"name":"InvalidSignatureLength","nameLocation":"435:22:19","nodeType":"EnumValue","src":"435:22:19"},{"id":2415,"name":"InvalidSignatureS","nameLocation":"467:17:19","nodeType":"EnumValue","src":"467:17:19"}],"name":"RecoverError","nameLocation":"369:12:19","nodeType":"EnumDefinition","src":"364:126:19"},{"documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"496:63:19","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2419,"name":"ECDSAInvalidSignature","nameLocation":"570:21:19","nodeType":"ErrorDefinition","parameters":{"id":2418,"nodeType":"ParameterList","parameters":[],"src":"591:2:19"},"src":"564:30:19"},{"documentation":{"id":2420,"nodeType":"StructuredDocumentation","src":"600:60:19","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2424,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:19","nodeType":"ErrorDefinition","parameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2422,"mutability":"mutable","name":"length","nameLocation":"707:6:19","nodeType":"VariableDeclaration","scope":2424,"src":"699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:19"},"src":"665:50:19"},{"documentation":{"id":2425,"nodeType":"StructuredDocumentation","src":"721:85:19","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2429,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:19","nodeType":"ErrorDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2427,"mutability":"mutable","name":"s","nameLocation":"848:1:19","nodeType":"VariableDeclaration","scope":2429,"src":"840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:19"},"src":"811:40:19"},{"body":{"id":2481,"nodeType":"Block","src":"2242:653:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2444,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"2256:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:19","memberName":"length","nodeType":"MemberAccess","src":"2256:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2479,"nodeType":"Block","src":"2781:108:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:19","typeDescriptions":{}}},"id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2470,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"2815:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2416_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2414,"src":"2815:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2474,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"2860:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:19","memberName":"length","nodeType":"MemberAccess","src":"2860:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:19","typeDescriptions":{}}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2443,"id":2478,"nodeType":"Return","src":"2795:83:19"}]},"id":2480,"nodeType":"IfStatement","src":"2252:637:19","trueBody":{"id":2465,"nodeType":"Block","src":"2280:495:19","statements":[{"assignments":[2449],"declarations":[{"constant":false,"id":2449,"mutability":"mutable","name":"r","nameLocation":"2302:1:19","nodeType":"VariableDeclaration","scope":2465,"src":"2294:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2450,"nodeType":"VariableDeclarationStatement","src":"2294:9:19"},{"assignments":[2452],"declarations":[{"constant":false,"id":2452,"mutability":"mutable","name":"s","nameLocation":"2325:1:19","nodeType":"VariableDeclaration","scope":2465,"src":"2317:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2453,"nodeType":"VariableDeclarationStatement","src":"2317:9:19"},{"assignments":[2455],"declarations":[{"constant":false,"id":2455,"mutability":"mutable","name":"v","nameLocation":"2346:1:19","nodeType":"VariableDeclaration","scope":2465,"src":"2340:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2454,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2456,"nodeType":"VariableDeclarationStatement","src":"2340:7:19"},{"AST":{"nativeSrc":"2548:171:19","nodeType":"YulBlock","src":"2548:171:19","statements":[{"nativeSrc":"2566:32:19","nodeType":"YulAssignment","src":"2566:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:19","nodeType":"YulIdentifier","src":"2581:9:19"},{"kind":"number","nativeSrc":"2592:4:19","nodeType":"YulLiteral","src":"2592:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:19","nodeType":"YulIdentifier","src":"2577:3:19"},"nativeSrc":"2577:20:19","nodeType":"YulFunctionCall","src":"2577:20:19"}],"functionName":{"name":"mload","nativeSrc":"2571:5:19","nodeType":"YulIdentifier","src":"2571:5:19"},"nativeSrc":"2571:27:19","nodeType":"YulFunctionCall","src":"2571:27:19"},"variableNames":[{"name":"r","nativeSrc":"2566:1:19","nodeType":"YulIdentifier","src":"2566:1:19"}]},{"nativeSrc":"2615:32:19","nodeType":"YulAssignment","src":"2615:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:19","nodeType":"YulIdentifier","src":"2630:9:19"},{"kind":"number","nativeSrc":"2641:4:19","nodeType":"YulLiteral","src":"2641:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:19","nodeType":"YulIdentifier","src":"2626:3:19"},"nativeSrc":"2626:20:19","nodeType":"YulFunctionCall","src":"2626:20:19"}],"functionName":{"name":"mload","nativeSrc":"2620:5:19","nodeType":"YulIdentifier","src":"2620:5:19"},"nativeSrc":"2620:27:19","nodeType":"YulFunctionCall","src":"2620:27:19"},"variableNames":[{"name":"s","nativeSrc":"2615:1:19","nodeType":"YulIdentifier","src":"2615:1:19"}]},{"nativeSrc":"2664:41:19","nodeType":"YulAssignment","src":"2664:41:19","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:19","nodeType":"YulLiteral","src":"2674:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:19","nodeType":"YulIdentifier","src":"2687:9:19"},{"kind":"number","nativeSrc":"2698:4:19","nodeType":"YulLiteral","src":"2698:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:19","nodeType":"YulIdentifier","src":"2683:3:19"},"nativeSrc":"2683:20:19","nodeType":"YulFunctionCall","src":"2683:20:19"}],"functionName":{"name":"mload","nativeSrc":"2677:5:19","nodeType":"YulIdentifier","src":"2677:5:19"},"nativeSrc":"2677:27:19","nodeType":"YulFunctionCall","src":"2677:27:19"}],"functionName":{"name":"byte","nativeSrc":"2669:4:19","nodeType":"YulIdentifier","src":"2669:4:19"},"nativeSrc":"2669:36:19","nodeType":"YulFunctionCall","src":"2669:36:19"},"variableNames":[{"name":"v","nativeSrc":"2664:1:19","nodeType":"YulIdentifier","src":"2664:1:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2449,"isOffset":false,"isSlot":false,"src":"2566:1:19","valueSize":1},{"declaration":2452,"isOffset":false,"isSlot":false,"src":"2615:1:19","valueSize":1},{"declaration":2434,"isOffset":false,"isSlot":false,"src":"2581:9:19","valueSize":1},{"declaration":2434,"isOffset":false,"isSlot":false,"src":"2630:9:19","valueSize":1},{"declaration":2434,"isOffset":false,"isSlot":false,"src":"2687:9:19","valueSize":1},{"declaration":2455,"isOffset":false,"isSlot":false,"src":"2664:1:19","valueSize":1}],"id":2457,"nodeType":"InlineAssembly","src":"2539:180:19"},{"expression":{"arguments":[{"id":2459,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"2750:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2460,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"2756:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2461,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"2759:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2462,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"2762:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2458,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2482,2562,2670],"referencedDeclaration":2670,"src":"2739:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2443,"id":2464,"nodeType":"Return","src":"2732:32:19"}]}}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"857:1267:19","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2482,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:19","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"hash","nameLocation":"2157:4:19","nodeType":"VariableDeclaration","scope":2482,"src":"2149:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2434,"mutability":"mutable","name":"signature","nameLocation":"2176:9:19","nodeType":"VariableDeclaration","scope":2482,"src":"2163:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2433,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:19"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2482,"src":"2210:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2482,"src":"2219:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2439,"nodeType":"UserDefinedTypeName","pathNode":{"id":2438,"name":"RecoverError","nameLocations":["2219:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2416,"src":"2219:12:19"},"referencedDeclaration":2416,"src":"2219:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2482,"src":"2233:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:19"},"scope":2756,"src":"2129:766:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2511,"nodeType":"Block","src":"3789:168:19","statements":[{"assignments":[2493,2496,2498],"declarations":[{"constant":false,"id":2493,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:19","nodeType":"VariableDeclaration","scope":2511,"src":"3800:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2492,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2496,"mutability":"mutable","name":"error","nameLocation":"3832:5:19","nodeType":"VariableDeclaration","scope":2511,"src":"3819:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2495,"nodeType":"UserDefinedTypeName","pathNode":{"id":2494,"name":"RecoverError","nameLocations":["3819:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2416,"src":"3819:12:19"},"referencedDeclaration":2416,"src":"3819:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2498,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:19","nodeType":"VariableDeclaration","scope":2511,"src":"3839:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2503,"initialValue":{"arguments":[{"id":2500,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"3870:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2501,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"3876:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2499,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2482,2562,2670],"referencedDeclaration":2482,"src":"3859:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:19"},{"expression":{"arguments":[{"id":2505,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"3908:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},{"id":2506,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"3915:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2504,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"3896:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2416_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2508,"nodeType":"ExpressionStatement","src":"3896:28:19"},{"expression":{"id":2509,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"3941:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2491,"id":2510,"nodeType":"Return","src":"3934:16:19"}]},"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"2901:796:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:19","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"hash","nameLocation":"3727:4:19","nodeType":"VariableDeclaration","scope":2512,"src":"3719:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"signature","nameLocation":"3746:9:19","nodeType":"VariableDeclaration","scope":2512,"src":"3733:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2486,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:19"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"3780:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2489,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:19"},"scope":2756,"src":"3702:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2561,"nodeType":"Block","src":"4285:342:19","statements":[{"id":2560,"nodeType":"UncheckedBlock","src":"4295:326:19","statements":[{"assignments":[2530],"declarations":[{"constant":false,"id":2530,"mutability":"mutable","name":"s","nameLocation":"4327:1:19","nodeType":"VariableDeclaration","scope":2560,"src":"4319:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2537,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4331:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:19","typeDescriptions":{}}},"id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:19"},{"assignments":[2539],"declarations":[{"constant":false,"id":2539,"mutability":"mutable","name":"v","nameLocation":"4528:1:19","nodeType":"VariableDeclaration","scope":2560,"src":"4522:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2538,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2552,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2544,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"4547:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:19","typeDescriptions":{}}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2540,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:19","typeDescriptions":{}}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:19"},{"expression":{"arguments":[{"id":2554,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"4596:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2555,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"4602:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2556,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"4605:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2557,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"4608:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2553,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2482,2562,2670],"referencedDeclaration":2670,"src":"4585:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2528,"id":2559,"nodeType":"Return","src":"4578:32:19"}]}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"3963:205:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:19","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"hash","nameLocation":"4201:4:19","nodeType":"VariableDeclaration","scope":2562,"src":"4193:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"r","nameLocation":"4215:1:19","nodeType":"VariableDeclaration","scope":2562,"src":"4207:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"vs","nameLocation":"4226:2:19","nodeType":"VariableDeclaration","scope":2562,"src":"4218:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:19"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"4253:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"4262:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2524,"nodeType":"UserDefinedTypeName","pathNode":{"id":2523,"name":"RecoverError","nameLocations":["4262:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2416,"src":"4262:12:19"},"referencedDeclaration":2416,"src":"4262:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"4276:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:19"},"scope":2756,"src":"4173:454:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2594,"nodeType":"Block","src":"4840:164:19","statements":[{"assignments":[2575,2578,2580],"declarations":[{"constant":false,"id":2575,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:19","nodeType":"VariableDeclaration","scope":2594,"src":"4851:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"error","nameLocation":"4883:5:19","nodeType":"VariableDeclaration","scope":2594,"src":"4870:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2577,"nodeType":"UserDefinedTypeName","pathNode":{"id":2576,"name":"RecoverError","nameLocations":["4870:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2416,"src":"4870:12:19"},"referencedDeclaration":2416,"src":"4870:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:19","nodeType":"VariableDeclaration","scope":2594,"src":"4890:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2586,"initialValue":{"arguments":[{"id":2582,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"4921:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2583,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4927:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2584,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"4930:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2581,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2482,2562,2670],"referencedDeclaration":2562,"src":"4910:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:19"},{"expression":{"arguments":[{"id":2588,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"4955:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},{"id":2589,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"4962:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2587,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"4943:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2416_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"ExpressionStatement","src":"4943:28:19"},{"expression":{"id":2592,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"4988:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2573,"id":2593,"nodeType":"Return","src":"4981:16:19"}]},"documentation":{"id":2563,"nodeType":"StructuredDocumentation","src":"4633:116:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:19","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"hash","nameLocation":"4779:4:19","nodeType":"VariableDeclaration","scope":2595,"src":"4771:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"r","nameLocation":"4793:1:19","nodeType":"VariableDeclaration","scope":2595,"src":"4785:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2569,"mutability":"mutable","name":"vs","nameLocation":"4804:2:19","nodeType":"VariableDeclaration","scope":2595,"src":"4796:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2568,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:19"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2595,"src":"4831:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2571,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:19"},"scope":2756,"src":"4754:250:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2669,"nodeType":"Block","src":"5298:1372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2616,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"6194:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:19","typeDescriptions":{}}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2630,"nodeType":"IfStatement","src":"6182:164:19","trueBody":{"id":2629,"nodeType":"Block","src":"6267:79:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:19","typeDescriptions":{}}},"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2624,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"6301:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2416_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"6301:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},{"id":2626,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"6333:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2613,"id":2628,"nodeType":"Return","src":"6281:54:19"}]}},{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"signer","nameLocation":"6448:6:19","nodeType":"VariableDeclaration","scope":2669,"src":"6440:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2631,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2639,"initialValue":{"arguments":[{"id":2634,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"6467:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2635,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"6473:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2636,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"6476:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2637,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"6479:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2633,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"6495:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:19","typeDescriptions":{}}},"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2659,"nodeType":"IfStatement","src":"6491:113:19","trueBody":{"id":2658,"nodeType":"Block","src":"6517:87:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2646,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:19","typeDescriptions":{}}},"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2650,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"6551:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2416_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2413,"src":"6551:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:19","typeDescriptions":{}}},"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2613,"id":2657,"nodeType":"Return","src":"6531:62:19"}]}},{"expression":{"components":[{"id":2660,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"6622:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2661,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"6630:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2416_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2412,"src":"6630:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:19","typeDescriptions":{}}},"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2613,"id":2668,"nodeType":"Return","src":"6614:49:19"}]},"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"5010:125:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2670,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:19","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"hash","nameLocation":"5177:4:19","nodeType":"VariableDeclaration","scope":2670,"src":"5169:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"v","nameLocation":"5197:1:19","nodeType":"VariableDeclaration","scope":2670,"src":"5191:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2599,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"r","nameLocation":"5216:1:19","nodeType":"VariableDeclaration","scope":2670,"src":"5208:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"s","nameLocation":"5235:1:19","nodeType":"VariableDeclaration","scope":2670,"src":"5227:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:19"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2670,"src":"5266:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2670,"src":"5275:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2609,"nodeType":"UserDefinedTypeName","pathNode":{"id":2608,"name":"RecoverError","nameLocations":["5275:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2416,"src":"5275:12:19"},"referencedDeclaration":2416,"src":"5275:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2670,"src":"5289:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:19"},"scope":2756,"src":"5140:1530:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2705,"nodeType":"Block","src":"6897:166:19","statements":[{"assignments":[2685,2688,2690],"declarations":[{"constant":false,"id":2685,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:19","nodeType":"VariableDeclaration","scope":2705,"src":"6908:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2688,"mutability":"mutable","name":"error","nameLocation":"6940:5:19","nodeType":"VariableDeclaration","scope":2705,"src":"6927:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2687,"nodeType":"UserDefinedTypeName","pathNode":{"id":2686,"name":"RecoverError","nameLocations":["6927:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2416,"src":"6927:12:19"},"referencedDeclaration":2416,"src":"6927:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2690,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:19","nodeType":"VariableDeclaration","scope":2705,"src":"6947:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2697,"initialValue":{"arguments":[{"id":2692,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"6978:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2693,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"6984:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2694,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"6987:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2695,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"6990:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2691,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2482,2562,2670],"referencedDeclaration":2670,"src":"6967:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2416_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:19"},{"expression":{"arguments":[{"id":2699,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"7014:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},{"id":2700,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"7021:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2698,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"7002:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2416_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2702,"nodeType":"ExpressionStatement","src":"7002:28:19"},{"expression":{"id":2703,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"7047:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2683,"id":2704,"nodeType":"Return","src":"7040:16:19"}]},"documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"6676:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:19","nodeType":"FunctionDefinition","parameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"hash","nameLocation":"6828:4:19","nodeType":"VariableDeclaration","scope":2706,"src":"6820:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"v","nameLocation":"6840:1:19","nodeType":"VariableDeclaration","scope":2706,"src":"6834:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2674,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2677,"mutability":"mutable","name":"r","nameLocation":"6851:1:19","nodeType":"VariableDeclaration","scope":2706,"src":"6843:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2679,"mutability":"mutable","name":"s","nameLocation":"6862:1:19","nodeType":"VariableDeclaration","scope":2706,"src":"6854:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:19"},"returnParameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2706,"src":"6888:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:19"},"scope":2756,"src":"6803:260:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2754,"nodeType":"Block","src":"7268:460:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"7282:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2716,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"7291:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2416_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2412,"src":"7291:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2721,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"7378:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2722,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"7387:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2416_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2413,"src":"7387:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2729,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"7483:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2730,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"7492:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2416_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2414,"src":"7492:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"7617:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2742,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"7626:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2416_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2415,"src":"7626:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2750,"nodeType":"IfStatement","src":"7613:109:19","trueBody":{"id":2749,"nodeType":"Block","src":"7658:64:19","statements":[{"errorCall":{"arguments":[{"id":2746,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"7702:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2745,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"7679:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2748,"nodeType":"RevertStatement","src":"7672:39:19"}]}},"id":2751,"nodeType":"IfStatement","src":"7479:243:19","trueBody":{"id":2740,"nodeType":"Block","src":"7529:78:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2736,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"7586:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:19","typeDescriptions":{}}},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2733,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"7550:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2739,"nodeType":"RevertStatement","src":"7543:53:19"}]}},"id":2752,"nodeType":"IfStatement","src":"7374:348:19","trueBody":{"id":2728,"nodeType":"Block","src":"7418:55:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2725,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"7439:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2727,"nodeType":"RevertStatement","src":"7432:30:19"}]}},"id":2753,"nodeType":"IfStatement","src":"7278:444:19","trueBody":{"id":2720,"nodeType":"Block","src":"7313:55:19","statements":[{"functionReturnParameters":2714,"id":2719,"nodeType":"Return","src":"7327:7:19"}]}}]},"documentation":{"id":2707,"nodeType":"StructuredDocumentation","src":"7069:122:19","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2755,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:19","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"error","nameLocation":"7230:5:19","nodeType":"VariableDeclaration","scope":2755,"src":"7217:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2709,"nodeType":"UserDefinedTypeName","pathNode":{"id":2708,"name":"RecoverError","nameLocations":["7217:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2416,"src":"7217:12:19"},"referencedDeclaration":2416,"src":"7217:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2416","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:19","nodeType":"VariableDeclaration","scope":2755,"src":"7237:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:19"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[],"src":"7268:0:19"},"scope":2756,"src":"7196:532:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2757,"src":"344:7386:19","usedErrors":[2419,2424,2429],"usedEvents":[]}],"src":"112:7619:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2830],"Strings":[2408]},"id":2831,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2758,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2760,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2831,"sourceUnit":2409,"src":"149:39:20","symbolAliases":[{"foreign":{"id":2759,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"157:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2761,"nodeType":"StructuredDocumentation","src":"190:330:20","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2830,"linearizedBaseContracts":[2830],"name":"MessageHashUtils","nameLocation":"529:16:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":2770,"nodeType":"Block","src":"1314:368:20","statements":[{"AST":{"nativeSrc":"1376:300:20","nodeType":"YulBlock","src":"1376:300:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:20","nodeType":"YulLiteral","src":"1397:4:20","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:20","nodeType":"YulLiteral","src":"1403:34:20","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:20","nodeType":"YulIdentifier","src":"1390:6:20"},"nativeSrc":"1390:48:20","nodeType":"YulFunctionCall","src":"1390:48:20"},"nativeSrc":"1390:48:20","nodeType":"YulExpressionStatement","src":"1390:48:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:20","nodeType":"YulLiteral","src":"1499:4:20","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:20","nodeType":"YulIdentifier","src":"1505:11:20"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:20","nodeType":"YulIdentifier","src":"1492:6:20"},"nativeSrc":"1492:25:20","nodeType":"YulFunctionCall","src":"1492:25:20"},"nativeSrc":"1492:25:20","nodeType":"YulExpressionStatement","src":"1492:25:20"},{"nativeSrc":"1571:31:20","nodeType":"YulAssignment","src":"1571:31:20","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:20","nodeType":"YulLiteral","src":"1591:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:20","nodeType":"YulLiteral","src":"1597:4:20","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:20","nodeType":"YulIdentifier","src":"1581:9:20"},"nativeSrc":"1581:21:20","nodeType":"YulFunctionCall","src":"1581:21:20"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:20","nodeType":"YulIdentifier","src":"1571:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2767,"isOffset":false,"isSlot":false,"src":"1571:6:20","valueSize":1},{"declaration":2764,"isOffset":false,"isSlot":false,"src":"1505:11:20","valueSize":1}],"id":2769,"nodeType":"InlineAssembly","src":"1367:309:20"}]},"documentation":{"id":2762,"nodeType":"StructuredDocumentation","src":"552:665:20","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2771,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:20","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:20","nodeType":"VariableDeclaration","scope":2771,"src":"1254:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:20"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"digest","nameLocation":"1306:6:20","nodeType":"VariableDeclaration","scope":2771,"src":"1298:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:20"},"scope":2830,"src":"1222:460:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2796,"nodeType":"Block","src":"2234:143:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2788,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"2343:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:20","memberName":"length","nodeType":"MemberAccess","src":"2343:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2786,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"2326:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2408_$","typeString":"type(library Strings)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2221,"src":"2326:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2784,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:20","typeDescriptions":{}}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2792,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"2361:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2780,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:20","typeDescriptions":{}}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:20","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:20","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2779,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2778,"id":2795,"nodeType":"Return","src":"2244:126:20"}]},"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"1688:455:20","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:20","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"message","nameLocation":"2193:7:20","nodeType":"VariableDeclaration","scope":2797,"src":"2180:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:20"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2797,"src":"2225:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:20"},"scope":2830,"src":"2148:229:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2816,"nodeType":"Block","src":"2831:80:20","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2811,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"2887:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2812,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"2898:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2808,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2807,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2806,"id":2815,"nodeType":"Return","src":"2841:63:20"}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"2383:332:20","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:20","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"validator","nameLocation":"2769:9:20","nodeType":"VariableDeclaration","scope":2817,"src":"2761:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"data","nameLocation":"2793:4:20","nodeType":"VariableDeclaration","scope":2817,"src":"2780:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2801,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:20"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2817,"src":"2822:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:20"},"scope":2830,"src":"2720:191:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2828,"nodeType":"Block","src":"3462:292:20","statements":[{"AST":{"nativeSrc":"3524:224:20","nodeType":"YulBlock","src":"3524:224:20","statements":[{"nativeSrc":"3538:22:20","nodeType":"YulVariableDeclaration","src":"3538:22:20","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:20","nodeType":"YulLiteral","src":"3555:4:20","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:20","nodeType":"YulIdentifier","src":"3549:5:20"},"nativeSrc":"3549:11:20","nodeType":"YulFunctionCall","src":"3549:11:20"},"variables":[{"name":"ptr","nativeSrc":"3542:3:20","nodeType":"YulTypedName","src":"3542:3:20","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:20","nodeType":"YulIdentifier","src":"3580:3:20"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:20","nodeType":"YulLiteral","src":"3585:10:20","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:20","nodeType":"YulIdentifier","src":"3573:6:20"},"nativeSrc":"3573:23:20","nodeType":"YulFunctionCall","src":"3573:23:20"},"nativeSrc":"3573:23:20","nodeType":"YulExpressionStatement","src":"3573:23:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:20","nodeType":"YulIdentifier","src":"3620:3:20"},{"kind":"number","nativeSrc":"3625:4:20","nodeType":"YulLiteral","src":"3625:4:20","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:20","nodeType":"YulIdentifier","src":"3616:3:20"},"nativeSrc":"3616:14:20","nodeType":"YulFunctionCall","src":"3616:14:20"},{"name":"domainSeparator","nativeSrc":"3632:15:20","nodeType":"YulIdentifier","src":"3632:15:20"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:20","nodeType":"YulIdentifier","src":"3609:6:20"},"nativeSrc":"3609:39:20","nodeType":"YulFunctionCall","src":"3609:39:20"},"nativeSrc":"3609:39:20","nodeType":"YulExpressionStatement","src":"3609:39:20"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:20","nodeType":"YulIdentifier","src":"3672:3:20"},{"kind":"number","nativeSrc":"3677:4:20","nodeType":"YulLiteral","src":"3677:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:20","nodeType":"YulIdentifier","src":"3668:3:20"},"nativeSrc":"3668:14:20","nodeType":"YulFunctionCall","src":"3668:14:20"},{"name":"structHash","nativeSrc":"3684:10:20","nodeType":"YulIdentifier","src":"3684:10:20"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:20","nodeType":"YulIdentifier","src":"3661:6:20"},"nativeSrc":"3661:34:20","nodeType":"YulFunctionCall","src":"3661:34:20"},"nativeSrc":"3661:34:20","nodeType":"YulExpressionStatement","src":"3661:34:20"},{"nativeSrc":"3708:30:20","nodeType":"YulAssignment","src":"3708:30:20","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:20","nodeType":"YulIdentifier","src":"3728:3:20"},{"kind":"number","nativeSrc":"3733:4:20","nodeType":"YulLiteral","src":"3733:4:20","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:20","nodeType":"YulIdentifier","src":"3718:9:20"},"nativeSrc":"3718:20:20","nodeType":"YulFunctionCall","src":"3718:20:20"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:20","nodeType":"YulIdentifier","src":"3708:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2825,"isOffset":false,"isSlot":false,"src":"3708:6:20","valueSize":1},{"declaration":2820,"isOffset":false,"isSlot":false,"src":"3632:15:20","valueSize":1},{"declaration":2822,"isOffset":false,"isSlot":false,"src":"3684:10:20","valueSize":1}],"id":2827,"nodeType":"InlineAssembly","src":"3515:233:20"}]},"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"2917:431:20","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2829,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:20","nodeType":"FunctionDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:20","nodeType":"VariableDeclaration","scope":2829,"src":"3378:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:20","nodeType":"VariableDeclaration","scope":2829,"src":"3403:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:20"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"digest","nameLocation":"3454:6:20","nodeType":"VariableDeclaration","scope":2829,"src":"3446:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:20"},"scope":2830,"src":"3353:401:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2831,"src":"521:3235:20","usedErrors":[],"usedEvents":[]}],"src":"123:3634:20"},"id":20},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3884]},"id":3885,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2832,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2833,"nodeType":"StructuredDocumentation","src":"129:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3884,"linearizedBaseContracts":[3884],"name":"Math","nameLocation":"211:4:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"222:50:21","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2836,"name":"MathOverflowedMulDiv","nameLocation":"283:20:21","nodeType":"ErrorDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[],"src":"303:2:21"},"src":"277:29:21"},{"canonicalName":"Math.Rounding","id":2841,"members":[{"id":2837,"name":"Floor","nameLocation":"336:5:21","nodeType":"EnumValue","src":"336:5:21"},{"id":2838,"name":"Ceil","nameLocation":"379:4:21","nodeType":"EnumValue","src":"379:4:21"},{"id":2839,"name":"Trunc","nameLocation":"421:5:21","nodeType":"EnumValue","src":"421:5:21"},{"id":2840,"name":"Expand","nameLocation":"451:6:21","nodeType":"EnumValue","src":"451:6:21"}],"name":"Rounding","nameLocation":"317:8:21","nodeType":"EnumDefinition","src":"312:169:21"},{"body":{"id":2872,"nodeType":"Block","src":"661:140:21","statements":[{"id":2871,"nodeType":"UncheckedBlock","src":"671:124:21","statements":[{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"c","nameLocation":"703:1:21","nodeType":"VariableDeclaration","scope":2871,"src":"695:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2858,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"707:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2856,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"711:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2859,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"730:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2860,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"734:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2866,"nodeType":"IfStatement","src":"726:28:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2852,"id":2865,"nodeType":"Return","src":"737:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2868,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"782:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2852,"id":2870,"nodeType":"Return","src":"768:16:21"}]}]},"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"487:93:21","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2873,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:21","nodeType":"FunctionDefinition","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"a","nameLocation":"609:1:21","nodeType":"VariableDeclaration","scope":2873,"src":"601:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"b","nameLocation":"620:1:21","nodeType":"VariableDeclaration","scope":2873,"src":"612:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:21"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2873,"src":"646:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2848,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2873,"src":"652:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:21"},"scope":3884,"src":"585:216:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2900,"nodeType":"Block","src":"984:113:21","statements":[{"id":2899,"nodeType":"UncheckedBlock","src":"994:97:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"1022:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2886,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"1026:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2892,"nodeType":"IfStatement","src":"1018:28:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2884,"id":2891,"nodeType":"Return","src":"1029:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"1074:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"1078:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2884,"id":2898,"nodeType":"Return","src":"1060:20:21"}]}]},"documentation":{"id":2874,"nodeType":"StructuredDocumentation","src":"807:96:21","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:21","nodeType":"FunctionDefinition","parameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"a","nameLocation":"932:1:21","nodeType":"VariableDeclaration","scope":2901,"src":"924:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2878,"mutability":"mutable","name":"b","nameLocation":"943:1:21","nodeType":"VariableDeclaration","scope":2901,"src":"935:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:21"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"969:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2880,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"975:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:21"},"scope":3884,"src":"908:189:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2942,"nodeType":"Block","src":"1283:417:21","statements":[{"id":2941,"nodeType":"UncheckedBlock","src":"1293:401:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"1551:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2920,"nodeType":"IfStatement","src":"1547:28:21","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2912,"id":2919,"nodeType":"Return","src":"1559:16:21"}},{"assignments":[2922],"declarations":[{"constant":false,"id":2922,"mutability":"mutable","name":"c","nameLocation":"1597:1:21","nodeType":"VariableDeclaration","scope":2941,"src":"1589:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2926,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2923,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"1601:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2924,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"1605:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"1624:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"1628:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"1633:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2936,"nodeType":"IfStatement","src":"1620:33:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2912,"id":2935,"nodeType":"Return","src":"1636:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2938,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"1681:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2912,"id":2940,"nodeType":"Return","src":"1667:16:21"}]}]},"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"1103:99:21","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2943,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:21","nodeType":"FunctionDefinition","parameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"a","nameLocation":"1231:1:21","nodeType":"VariableDeclaration","scope":2943,"src":"1223:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"b","nameLocation":"1242:1:21","nodeType":"VariableDeclaration","scope":2943,"src":"1234:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:21"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2943,"src":"1268:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2908,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2943,"src":"1274:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:21"},"scope":3884,"src":"1207:493:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2970,"nodeType":"Block","src":"1887:114:21","statements":[{"id":2969,"nodeType":"UncheckedBlock","src":"1897:98:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2955,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"1925:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2962,"nodeType":"IfStatement","src":"1921:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2954,"id":2961,"nodeType":"Return","src":"1933:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"1978:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2965,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"1982:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2954,"id":2968,"nodeType":"Return","src":"1964:20:21"}]}]},"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"1706:100:21","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2971,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:21","nodeType":"FunctionDefinition","parameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"a","nameLocation":"1835:1:21","nodeType":"VariableDeclaration","scope":2971,"src":"1827:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"b","nameLocation":"1846:1:21","nodeType":"VariableDeclaration","scope":2971,"src":"1838:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:21"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"1872:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2950,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"1878:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:21"},"scope":3884,"src":"1811:190:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2998,"nodeType":"Block","src":"2198:114:21","statements":[{"id":2997,"nodeType":"UncheckedBlock","src":"2208:98:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"2236:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2990,"nodeType":"IfStatement","src":"2232:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2982,"id":2989,"nodeType":"Return","src":"2244:17:21"}},{"expression":{"components":[{"hexValue":"74727565","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2992,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"2289:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2993,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"2293:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2982,"id":2996,"nodeType":"Return","src":"2275:20:21"}]}]},"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"2007:110:21","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2999,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:21","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"a","nameLocation":"2146:1:21","nodeType":"VariableDeclaration","scope":2999,"src":"2138:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"b","nameLocation":"2157:1:21","nodeType":"VariableDeclaration","scope":2999,"src":"2149:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:21"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2999,"src":"2183:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2978,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2999,"src":"2189:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:21"},"scope":3884,"src":"2122:190:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3016,"nodeType":"Block","src":"2449:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"2466:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3010,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"2470:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"2478:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:21","trueExpression":{"id":3012,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"2474:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3008,"id":3015,"nodeType":"Return","src":"2459:20:21"}]},"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"2318:59:21","text":" @dev Returns the largest of two numbers."},"id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:21","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"a","nameLocation":"2403:1:21","nodeType":"VariableDeclaration","scope":3017,"src":"2395:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"b","nameLocation":"2414:1:21","nodeType":"VariableDeclaration","scope":3017,"src":"2406:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:21"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3017,"src":"2440:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:21"},"scope":3884,"src":"2382:104:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3034,"nodeType":"Block","src":"2624:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"2641:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3028,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2645:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3031,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"2653:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:21","trueExpression":{"id":3030,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"2649:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3026,"id":3033,"nodeType":"Return","src":"2634:20:21"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"2492:60:21","text":" @dev Returns the smallest of two numbers."},"id":3035,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:21","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"a","nameLocation":"2578:1:21","nodeType":"VariableDeclaration","scope":3035,"src":"2570:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"b","nameLocation":"2589:1:21","nodeType":"VariableDeclaration","scope":3035,"src":"2581:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:21"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3035,"src":"2615:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:21"},"scope":3884,"src":"2557:104:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3057,"nodeType":"Block","src":"2845:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3045,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"2900:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3046,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"2904:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"2910:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3050,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"2914:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3044,"id":3056,"nodeType":"Return","src":"2892:28:21"}]},"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"2667:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3058,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:21","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"a","nameLocation":"2799:1:21","nodeType":"VariableDeclaration","scope":3058,"src":"2791:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"b","nameLocation":"2810:1:21","nodeType":"VariableDeclaration","scope":3058,"src":"2802:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:21"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3058,"src":"2836:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:21"},"scope":3884,"src":"2774:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3091,"nodeType":"Block","src":"3219:260:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"3233:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3076,"nodeType":"IfStatement","src":"3229:127:21","trueBody":{"id":3075,"nodeType":"Block","src":"3241:115:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"3340:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3072,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"3344:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3067,"id":3074,"nodeType":"Return","src":"3333:12:21"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"3444:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"3458:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"3467:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:21","trueExpression":{"hexValue":"30","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3067,"id":3090,"nodeType":"Return","src":"3437:35:21"}]},"documentation":{"id":3059,"nodeType":"StructuredDocumentation","src":"2933:210:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3092,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:21","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"a","nameLocation":"3173:1:21","nodeType":"VariableDeclaration","scope":3092,"src":"3165:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3063,"mutability":"mutable","name":"b","nameLocation":"3184:1:21","nodeType":"VariableDeclaration","scope":3092,"src":"3176:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:21"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3092,"src":"3210:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:21"},"scope":3884,"src":"3148:331:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3217,"nodeType":"Block","src":"3901:4018:21","statements":[{"id":3216,"nodeType":"UncheckedBlock","src":"3911:4002:21","statements":[{"assignments":[3105],"declarations":[{"constant":false,"id":3105,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:21","nodeType":"VariableDeclaration","scope":3216,"src":"4232:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3109,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"4248:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3107,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"4252:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:21"},{"assignments":[3111],"declarations":[{"constant":false,"id":3111,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:21","nodeType":"VariableDeclaration","scope":3216,"src":"4312:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3112,"nodeType":"VariableDeclarationStatement","src":"4312:13:21"},{"AST":{"nativeSrc":"4392:122:21","nodeType":"YulBlock","src":"4392:122:21","statements":[{"nativeSrc":"4410:30:21","nodeType":"YulVariableDeclaration","src":"4410:30:21","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:21","nodeType":"YulIdentifier","src":"4427:1:21"},{"name":"y","nativeSrc":"4430:1:21","nodeType":"YulIdentifier","src":"4430:1:21"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:21","nodeType":"YulLiteral","src":"4437:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:21","nodeType":"YulIdentifier","src":"4433:3:21"},"nativeSrc":"4433:6:21","nodeType":"YulFunctionCall","src":"4433:6:21"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:21","nodeType":"YulIdentifier","src":"4420:6:21"},"nativeSrc":"4420:20:21","nodeType":"YulFunctionCall","src":"4420:20:21"},"variables":[{"name":"mm","nativeSrc":"4414:2:21","nodeType":"YulTypedName","src":"4414:2:21","type":""}]},{"nativeSrc":"4457:43:21","nodeType":"YulAssignment","src":"4457:43:21","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:21","nodeType":"YulIdentifier","src":"4474:2:21"},{"name":"prod0","nativeSrc":"4478:5:21","nodeType":"YulIdentifier","src":"4478:5:21"}],"functionName":{"name":"sub","nativeSrc":"4470:3:21","nodeType":"YulIdentifier","src":"4470:3:21"},"nativeSrc":"4470:14:21","nodeType":"YulFunctionCall","src":"4470:14:21"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:21","nodeType":"YulIdentifier","src":"4489:2:21"},{"name":"prod0","nativeSrc":"4493:5:21","nodeType":"YulIdentifier","src":"4493:5:21"}],"functionName":{"name":"lt","nativeSrc":"4486:2:21","nodeType":"YulIdentifier","src":"4486:2:21"},"nativeSrc":"4486:13:21","nodeType":"YulFunctionCall","src":"4486:13:21"}],"functionName":{"name":"sub","nativeSrc":"4466:3:21","nodeType":"YulIdentifier","src":"4466:3:21"},"nativeSrc":"4466:34:21","nodeType":"YulFunctionCall","src":"4466:34:21"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:21","nodeType":"YulIdentifier","src":"4457:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3105,"isOffset":false,"isSlot":false,"src":"4478:5:21","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"4493:5:21","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"4457:5:21","valueSize":1},{"declaration":3095,"isOffset":false,"isSlot":false,"src":"4427:1:21","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"4430:1:21","valueSize":1}],"id":3113,"nodeType":"InlineAssembly","src":"4383:131:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4595:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3122,"nodeType":"IfStatement","src":"4591:368:21","trueBody":{"id":3121,"nodeType":"Block","src":"4607:352:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"4925:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3118,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"4933:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3103,"id":3120,"nodeType":"Return","src":"4918:26:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"5065:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3124,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"5080:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3130,"nodeType":"IfStatement","src":"5061:88:21","trueBody":{"id":3129,"nodeType":"Block","src":"5087:62:21","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3126,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"5112:20:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3128,"nodeType":"RevertStatement","src":"5105:29:21"}]}},{"assignments":[3132],"declarations":[{"constant":false,"id":3132,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:21","nodeType":"VariableDeclaration","scope":3216,"src":"5404:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3133,"nodeType":"VariableDeclarationStatement","src":"5404:17:21"},{"AST":{"nativeSrc":"5444:291:21","nodeType":"YulBlock","src":"5444:291:21","statements":[{"nativeSrc":"5513:38:21","nodeType":"YulAssignment","src":"5513:38:21","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:21","nodeType":"YulIdentifier","src":"5533:1:21"},{"name":"y","nativeSrc":"5536:1:21","nodeType":"YulIdentifier","src":"5536:1:21"},{"name":"denominator","nativeSrc":"5539:11:21","nodeType":"YulIdentifier","src":"5539:11:21"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:21","nodeType":"YulIdentifier","src":"5526:6:21"},"nativeSrc":"5526:25:21","nodeType":"YulFunctionCall","src":"5526:25:21"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:21","nodeType":"YulIdentifier","src":"5513:9:21"}]},{"nativeSrc":"5633:41:21","nodeType":"YulAssignment","src":"5633:41:21","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:21","nodeType":"YulIdentifier","src":"5646:5:21"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:21","nodeType":"YulIdentifier","src":"5656:9:21"},{"name":"prod0","nativeSrc":"5667:5:21","nodeType":"YulIdentifier","src":"5667:5:21"}],"functionName":{"name":"gt","nativeSrc":"5653:2:21","nodeType":"YulIdentifier","src":"5653:2:21"},"nativeSrc":"5653:20:21","nodeType":"YulFunctionCall","src":"5653:20:21"}],"functionName":{"name":"sub","nativeSrc":"5642:3:21","nodeType":"YulIdentifier","src":"5642:3:21"},"nativeSrc":"5642:32:21","nodeType":"YulFunctionCall","src":"5642:32:21"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:21","nodeType":"YulIdentifier","src":"5633:5:21"}]},{"nativeSrc":"5691:30:21","nodeType":"YulAssignment","src":"5691:30:21","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:21","nodeType":"YulIdentifier","src":"5704:5:21"},{"name":"remainder","nativeSrc":"5711:9:21","nodeType":"YulIdentifier","src":"5711:9:21"}],"functionName":{"name":"sub","nativeSrc":"5700:3:21","nodeType":"YulIdentifier","src":"5700:3:21"},"nativeSrc":"5700:21:21","nodeType":"YulFunctionCall","src":"5700:21:21"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:21","nodeType":"YulIdentifier","src":"5691:5:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3099,"isOffset":false,"isSlot":false,"src":"5539:11:21","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"5667:5:21","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"5691:5:21","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"5704:5:21","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"5633:5:21","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"5646:5:21","valueSize":1},{"declaration":3132,"isOffset":false,"isSlot":false,"src":"5513:9:21","valueSize":1},{"declaration":3132,"isOffset":false,"isSlot":false,"src":"5656:9:21","valueSize":1},{"declaration":3132,"isOffset":false,"isSlot":false,"src":"5711:9:21","valueSize":1},{"declaration":3095,"isOffset":false,"isSlot":false,"src":"5533:1:21","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"5536:1:21","valueSize":1}],"id":3134,"nodeType":"InlineAssembly","src":"5435:300:21"},{"assignments":[3136],"declarations":[{"constant":false,"id":3136,"mutability":"mutable","name":"twos","nameLocation":"5947:4:21","nodeType":"VariableDeclaration","scope":3216,"src":"5939:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3143,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"5954:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3139,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"5973:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:21"},{"AST":{"nativeSrc":"6008:362:21","nodeType":"YulBlock","src":"6008:362:21","statements":[{"nativeSrc":"6073:37:21","nodeType":"YulAssignment","src":"6073:37:21","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:21","nodeType":"YulIdentifier","src":"6092:11:21"},{"name":"twos","nativeSrc":"6105:4:21","nodeType":"YulIdentifier","src":"6105:4:21"}],"functionName":{"name":"div","nativeSrc":"6088:3:21","nodeType":"YulIdentifier","src":"6088:3:21"},"nativeSrc":"6088:22:21","nodeType":"YulFunctionCall","src":"6088:22:21"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:21","nodeType":"YulIdentifier","src":"6073:11:21"}]},{"nativeSrc":"6177:25:21","nodeType":"YulAssignment","src":"6177:25:21","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:21","nodeType":"YulIdentifier","src":"6190:5:21"},{"name":"twos","nativeSrc":"6197:4:21","nodeType":"YulIdentifier","src":"6197:4:21"}],"functionName":{"name":"div","nativeSrc":"6186:3:21","nodeType":"YulIdentifier","src":"6186:3:21"},"nativeSrc":"6186:16:21","nodeType":"YulFunctionCall","src":"6186:16:21"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:21","nodeType":"YulIdentifier","src":"6177:5:21"}]},{"nativeSrc":"6317:39:21","nodeType":"YulAssignment","src":"6317:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:21","nodeType":"YulLiteral","src":"6337:1:21","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:21","nodeType":"YulIdentifier","src":"6340:4:21"}],"functionName":{"name":"sub","nativeSrc":"6333:3:21","nodeType":"YulIdentifier","src":"6333:3:21"},"nativeSrc":"6333:12:21","nodeType":"YulFunctionCall","src":"6333:12:21"},{"name":"twos","nativeSrc":"6347:4:21","nodeType":"YulIdentifier","src":"6347:4:21"}],"functionName":{"name":"div","nativeSrc":"6329:3:21","nodeType":"YulIdentifier","src":"6329:3:21"},"nativeSrc":"6329:23:21","nodeType":"YulFunctionCall","src":"6329:23:21"},{"kind":"number","nativeSrc":"6354:1:21","nodeType":"YulLiteral","src":"6354:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:21","nodeType":"YulIdentifier","src":"6325:3:21"},"nativeSrc":"6325:31:21","nodeType":"YulFunctionCall","src":"6325:31:21"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:21","nodeType":"YulIdentifier","src":"6317:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3099,"isOffset":false,"isSlot":false,"src":"6073:11:21","valueSize":1},{"declaration":3099,"isOffset":false,"isSlot":false,"src":"6092:11:21","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"6177:5:21","valueSize":1},{"declaration":3105,"isOffset":false,"isSlot":false,"src":"6190:5:21","valueSize":1},{"declaration":3136,"isOffset":false,"isSlot":false,"src":"6105:4:21","valueSize":1},{"declaration":3136,"isOffset":false,"isSlot":false,"src":"6197:4:21","valueSize":1},{"declaration":3136,"isOffset":false,"isSlot":false,"src":"6317:4:21","valueSize":1},{"declaration":3136,"isOffset":false,"isSlot":false,"src":"6340:4:21","valueSize":1},{"declaration":3136,"isOffset":false,"isSlot":false,"src":"6347:4:21","valueSize":1}],"id":3144,"nodeType":"InlineAssembly","src":"5999:371:21"},{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3145,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"6436:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"6445:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3147,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"6453:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ExpressionStatement","src":"6436:21:21"},{"assignments":[3152],"declarations":[{"constant":false,"id":3152,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:21","nodeType":"VariableDeclaration","scope":3216,"src":"6775:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3159,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3154,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"6798:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:21"},{"expression":{"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3160,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7031:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3162,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"7046:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3163,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7060:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3167,"nodeType":"ExpressionStatement","src":"7031:36:21"},{"expression":{"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3168,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7100:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3170,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"7115:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3171,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7129:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3175,"nodeType":"ExpressionStatement","src":"7100:36:21"},{"expression":{"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3176,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7170:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3178,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"7185:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3179,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7199:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3183,"nodeType":"ExpressionStatement","src":"7170:36:21"},{"expression":{"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3184,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7240:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"7255:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3187,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7269:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3191,"nodeType":"ExpressionStatement","src":"7240:36:21"},{"expression":{"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3192,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7310:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3194,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"7325:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3195,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7339:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3199,"nodeType":"ExpressionStatement","src":"7310:36:21"},{"expression":{"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3200,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7381:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"7396:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3203,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7410:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3207,"nodeType":"ExpressionStatement","src":"7381:36:21"},{"expression":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"7851:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"7860:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3210,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7868:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3213,"nodeType":"ExpressionStatement","src":"7851:24:21"},{"expression":{"id":3214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"7896:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3103,"id":3215,"nodeType":"Return","src":"7889:13:21"}]}]},"documentation":{"id":3093,"nodeType":"StructuredDocumentation","src":"3485:313:21","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3218,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:21","nodeType":"FunctionDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"x","nameLocation":"3827:1:21","nodeType":"VariableDeclaration","scope":3218,"src":"3819:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"y","nameLocation":"3838:1:21","nodeType":"VariableDeclaration","scope":3218,"src":"3830:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:21","nodeType":"VariableDeclaration","scope":3218,"src":"3841:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:21"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"result","nameLocation":"3893:6:21","nodeType":"VariableDeclaration","scope":3218,"src":"3885:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:21"},"scope":3884,"src":"3803:4116:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"8161:192:21","statements":[{"assignments":[3234],"declarations":[{"constant":false,"id":3234,"mutability":"mutable","name":"result","nameLocation":"8179:6:21","nodeType":"VariableDeclaration","scope":3260,"src":"8171:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3240,"initialValue":{"arguments":[{"id":3236,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"8195:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3237,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"8198:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3238,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"8201:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3235,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3218,3261],"referencedDeclaration":3218,"src":"8188:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3242,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"8244:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}],"id":3241,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"8227:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2841_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3245,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"8264:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3246,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"8267:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3247,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"8270:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3244,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3257,"nodeType":"IfStatement","src":"8223:101:21","trueBody":{"id":3256,"nodeType":"Block","src":"8288:36:21","statements":[{"expression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"8302:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3255,"nodeType":"ExpressionStatement","src":"8302:11:21"}]}},{"expression":{"id":3258,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"8340:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3232,"id":3259,"nodeType":"Return","src":"8333:13:21"}]},"documentation":{"id":3219,"nodeType":"StructuredDocumentation","src":"7925:121:21","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:21","nodeType":"FunctionDefinition","parameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"x","nameLocation":"8075:1:21","nodeType":"VariableDeclaration","scope":3261,"src":"8067:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"y","nameLocation":"8086:1:21","nodeType":"VariableDeclaration","scope":3261,"src":"8078:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:21","nodeType":"VariableDeclaration","scope":3261,"src":"8089:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:21","nodeType":"VariableDeclaration","scope":3261,"src":"8110:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"},"typeName":{"id":3227,"nodeType":"UserDefinedTypeName","pathNode":{"id":3226,"name":"Rounding","nameLocations":["8110:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"8110:8:21"},"referencedDeclaration":2841,"src":"8110:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:21"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3261,"src":"8152:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:21"},"scope":3884,"src":"8051:302:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"8644:1585:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"8658:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3275,"nodeType":"IfStatement","src":"8654:45:21","trueBody":{"id":3274,"nodeType":"Block","src":"8666:33:21","statements":[{"expression":{"hexValue":"30","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3268,"id":3273,"nodeType":"Return","src":"8680:8:21"}]}},{"assignments":[3277],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"result","nameLocation":"9386:6:21","nodeType":"VariableDeclaration","scope":3372,"src":"9378:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3286,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3280,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9406:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3279,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3540,3575],"referencedDeclaration":3540,"src":"9401:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:21"},{"id":3371,"nodeType":"UncheckedBlock","src":"9815:408:21","statements":[{"expression":{"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9839:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9849:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9858:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9862:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3297,"nodeType":"ExpressionStatement","src":"9839:35:21"},{"expression":{"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9888:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9898:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9907:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9911:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3308,"nodeType":"ExpressionStatement","src":"9888:35:21"},{"expression":{"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3309,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9937:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9947:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9956:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9960:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3319,"nodeType":"ExpressionStatement","src":"9937:35:21"},{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9986:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"9996:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10005:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10009:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3330,"nodeType":"ExpressionStatement","src":"9986:35:21"},{"expression":{"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10035:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10045:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10054:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10058:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3341,"nodeType":"ExpressionStatement","src":"10035:35:21"},{"expression":{"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10084:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10094:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10103:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10107:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3352,"nodeType":"ExpressionStatement","src":"10084:35:21"},{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3353,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10133:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10143:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3355,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10152:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10156:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"nodeType":"ExpressionStatement","src":"10133:35:21"},{"expression":{"arguments":[{"id":3365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10193:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10201:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"10205:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3364,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"10189:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3268,"id":3370,"nodeType":"Return","src":"10182:30:21"}]}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"8359:223:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:21","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"a","nameLocation":"8609:1:21","nodeType":"VariableDeclaration","scope":3373,"src":"8601:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:21"},"returnParameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3373,"src":"8635:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:21"},"scope":3884,"src":"8587:1642:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3407,"nodeType":"Block","src":"10405:164:21","statements":[{"id":3406,"nodeType":"UncheckedBlock","src":"10415:148:21","statements":[{"assignments":[3385],"declarations":[{"constant":false,"id":3385,"mutability":"mutable","name":"result","nameLocation":"10447:6:21","nodeType":"VariableDeclaration","scope":3406,"src":"10439:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3389,"initialValue":{"arguments":[{"id":3387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"10461:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3386,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3373,3408],"referencedDeclaration":3373,"src":"10456:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3390,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"10484:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3392,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"10511:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}],"id":3391,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"10494:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2841_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"10524:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"10533:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"10542:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:21","trueExpression":{"hexValue":"31","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3383,"id":3405,"nodeType":"Return","src":"10477:75:21"}]}]},"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"10235:89:21","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:21","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"a","nameLocation":"10351:1:21","nodeType":"VariableDeclaration","scope":3408,"src":"10343:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:21","nodeType":"VariableDeclaration","scope":3408,"src":"10354:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"},"typeName":{"id":3378,"nodeType":"UserDefinedTypeName","pathNode":{"id":3377,"name":"Rounding","nameLocations":["10354:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"10354:8:21"},"referencedDeclaration":2841,"src":"10354:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:21"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3408,"src":"10396:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:21"},"scope":3884,"src":"10329:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3539,"nodeType":"Block","src":"10760:922:21","statements":[{"assignments":[3417],"declarations":[{"constant":false,"id":3417,"mutability":"mutable","name":"result","nameLocation":"10778:6:21","nodeType":"VariableDeclaration","scope":3539,"src":"10770:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3419,"initialValue":{"hexValue":"30","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:21"},{"id":3536,"nodeType":"UncheckedBlock","src":"10798:855:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"10826:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"nodeType":"IfStatement","src":"10822:99:21","trueBody":{"id":3433,"nodeType":"Block","src":"10844:77:21","statements":[{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"10862:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3428,"nodeType":"ExpressionStatement","src":"10862:13:21"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"10893:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3432,"nodeType":"ExpressionStatement","src":"10893:13:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"10938:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3449,"nodeType":"IfStatement","src":"10934:96:21","trueBody":{"id":3448,"nodeType":"Block","src":"10955:75:21","statements":[{"expression":{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"10973:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3443,"nodeType":"ExpressionStatement","src":"10973:12:21"},{"expression":{"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"11003:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3447,"nodeType":"ExpressionStatement","src":"11003:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11047:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3464,"nodeType":"IfStatement","src":"11043:96:21","trueBody":{"id":3463,"nodeType":"Block","src":"11064:75:21","statements":[{"expression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11082:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3458,"nodeType":"ExpressionStatement","src":"11082:12:21"},{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"11112:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"11112:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11156:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3479,"nodeType":"IfStatement","src":"11152:96:21","trueBody":{"id":3478,"nodeType":"Block","src":"11173:75:21","statements":[{"expression":{"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11191:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3473,"nodeType":"ExpressionStatement","src":"11191:12:21"},{"expression":{"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"11221:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3477,"nodeType":"ExpressionStatement","src":"11221:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11265:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3494,"nodeType":"IfStatement","src":"11261:93:21","trueBody":{"id":3493,"nodeType":"Block","src":"11281:73:21","statements":[{"expression":{"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11299:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3488,"nodeType":"ExpressionStatement","src":"11299:11:21"},{"expression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3489,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"11328:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3492,"nodeType":"ExpressionStatement","src":"11328:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11371:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3509,"nodeType":"IfStatement","src":"11367:93:21","trueBody":{"id":3508,"nodeType":"Block","src":"11387:73:21","statements":[{"expression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11405:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3503,"nodeType":"ExpressionStatement","src":"11405:11:21"},{"expression":{"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"11434:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3507,"nodeType":"ExpressionStatement","src":"11434:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11477:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3524,"nodeType":"IfStatement","src":"11473:93:21","trueBody":{"id":3523,"nodeType":"Block","src":"11493:73:21","statements":[{"expression":{"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11511:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3518,"nodeType":"ExpressionStatement","src":"11511:11:21"},{"expression":{"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3519,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"11540:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3522,"nodeType":"ExpressionStatement","src":"11540:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"11583:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3535,"nodeType":"IfStatement","src":"11579:64:21","trueBody":{"id":3534,"nodeType":"Block","src":"11599:44:21","statements":[{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"11617:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3533,"nodeType":"ExpressionStatement","src":"11617:11:21"}]}}]},{"expression":{"id":3537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"11669:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3415,"id":3538,"nodeType":"Return","src":"11662:13:21"}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"10575:119:21","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3540,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:21","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"value","nameLocation":"10721:5:21","nodeType":"VariableDeclaration","scope":3540,"src":"10713:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:21"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3540,"src":"10751:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:21"},"scope":3884,"src":"10699:983:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3574,"nodeType":"Block","src":"11915:168:21","statements":[{"id":3573,"nodeType":"UncheckedBlock","src":"11925:152:21","statements":[{"assignments":[3552],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"result","nameLocation":"11957:6:21","nodeType":"VariableDeclaration","scope":3573,"src":"11949:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3556,"initialValue":{"arguments":[{"id":3554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11971:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3553,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3540,3575],"referencedDeclaration":3540,"src":"11966:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"11998:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3559,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"12025:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}],"id":3558,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"12008:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2841_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"12043:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"12052:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:21","trueExpression":{"hexValue":"31","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3550,"id":3572,"nodeType":"Return","src":"11991:75:21"}]}]},"documentation":{"id":3541,"nodeType":"StructuredDocumentation","src":"11688:142:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:21","nodeType":"FunctionDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"value","nameLocation":"11857:5:21","nodeType":"VariableDeclaration","scope":3575,"src":"11849:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:21","nodeType":"VariableDeclaration","scope":3575,"src":"11864:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"},"typeName":{"id":3545,"nodeType":"UserDefinedTypeName","pathNode":{"id":3544,"name":"Rounding","nameLocations":["11864:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"11864:8:21"},"referencedDeclaration":2841,"src":"11864:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:21"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3575,"src":"11906:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:21"},"scope":3884,"src":"11835:248:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3703,"nodeType":"Block","src":"12276:854:21","statements":[{"assignments":[3584],"declarations":[{"constant":false,"id":3584,"mutability":"mutable","name":"result","nameLocation":"12294:6:21","nodeType":"VariableDeclaration","scope":3703,"src":"12286:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3586,"initialValue":{"hexValue":"30","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:21"},{"id":3700,"nodeType":"UncheckedBlock","src":"12314:787:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12342:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3603,"nodeType":"IfStatement","src":"12338:103:21","trueBody":{"id":3602,"nodeType":"Block","src":"12361:80:21","statements":[{"expression":{"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12379:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3597,"nodeType":"ExpressionStatement","src":"12379:17:21"},{"expression":{"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3598,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"12414:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3601,"nodeType":"ExpressionStatement","src":"12414:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12458:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3620,"nodeType":"IfStatement","src":"12454:103:21","trueBody":{"id":3619,"nodeType":"Block","src":"12477:80:21","statements":[{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12495:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"nodeType":"ExpressionStatement","src":"12495:17:21"},{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"12530:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ExpressionStatement","src":"12530:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12574:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3637,"nodeType":"IfStatement","src":"12570:103:21","trueBody":{"id":3636,"nodeType":"Block","src":"12593:80:21","statements":[{"expression":{"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12611:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3631,"nodeType":"ExpressionStatement","src":"12611:17:21"},{"expression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"12646:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3635,"nodeType":"ExpressionStatement","src":"12646:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12690:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3654,"nodeType":"IfStatement","src":"12686:100:21","trueBody":{"id":3653,"nodeType":"Block","src":"12708:78:21","statements":[{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12726:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ExpressionStatement","src":"12726:16:21"},{"expression":{"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"12760:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3652,"nodeType":"ExpressionStatement","src":"12760:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12803:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3671,"nodeType":"IfStatement","src":"12799:100:21","trueBody":{"id":3670,"nodeType":"Block","src":"12821:78:21","statements":[{"expression":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12839:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3665,"nodeType":"ExpressionStatement","src":"12839:16:21"},{"expression":{"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"12873:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3669,"nodeType":"ExpressionStatement","src":"12873:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12916:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3688,"nodeType":"IfStatement","src":"12912:100:21","trueBody":{"id":3687,"nodeType":"Block","src":"12934:78:21","statements":[{"expression":{"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12952:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3682,"nodeType":"ExpressionStatement","src":"12952:16:21"},{"expression":{"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"12986:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3686,"nodeType":"ExpressionStatement","src":"12986:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"13029:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3699,"nodeType":"IfStatement","src":"13025:66:21","trueBody":{"id":3698,"nodeType":"Block","src":"13047:44:21","statements":[{"expression":{"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"13065:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3697,"nodeType":"ExpressionStatement","src":"13065:11:21"}]}}]},{"expression":{"id":3701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"13117:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3582,"id":3702,"nodeType":"Return","src":"13110:13:21"}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"12089:120:21","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3704,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:21","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"value","nameLocation":"12237:5:21","nodeType":"VariableDeclaration","scope":3704,"src":"12229:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:21"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3704,"src":"12267:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:21"},"scope":3884,"src":"12214:916:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3738,"nodeType":"Block","src":"13365:170:21","statements":[{"id":3737,"nodeType":"UncheckedBlock","src":"13375:154:21","statements":[{"assignments":[3716],"declarations":[{"constant":false,"id":3716,"mutability":"mutable","name":"result","nameLocation":"13407:6:21","nodeType":"VariableDeclaration","scope":3737,"src":"13399:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3720,"initialValue":{"arguments":[{"id":3718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"13422:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3717,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3704,3739],"referencedDeclaration":3704,"src":"13416:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"13449:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3723,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"13476:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}],"id":3722,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"13459:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2841_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"13495:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"13504:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:21","trueExpression":{"hexValue":"31","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3714,"id":3736,"nodeType":"Return","src":"13442:76:21"}]}]},"documentation":{"id":3705,"nodeType":"StructuredDocumentation","src":"13136:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3739,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:21","nodeType":"FunctionDefinition","parameters":{"id":3711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"value","nameLocation":"13307:5:21","nodeType":"VariableDeclaration","scope":3739,"src":"13299:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3710,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:21","nodeType":"VariableDeclaration","scope":3739,"src":"13314:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"},"typeName":{"id":3709,"nodeType":"UserDefinedTypeName","pathNode":{"id":3708,"name":"Rounding","nameLocations":["13314:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"13314:8:21"},"referencedDeclaration":2841,"src":"13314:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:21"},"returnParameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3739,"src":"13356:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3712,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:21"},"scope":3884,"src":"13284:251:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3825,"nodeType":"Block","src":"13855:600:21","statements":[{"assignments":[3748],"declarations":[{"constant":false,"id":3748,"mutability":"mutable","name":"result","nameLocation":"13873:6:21","nodeType":"VariableDeclaration","scope":3825,"src":"13865:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3750,"initialValue":{"hexValue":"30","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:21"},{"id":3822,"nodeType":"UncheckedBlock","src":"13893:533:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"13921:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"IfStatement","src":"13917:98:21","trueBody":{"id":3764,"nodeType":"Block","src":"13939:76:21","statements":[{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"13957:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"13957:13:21"},{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"13988:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"13988:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"14032:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3780,"nodeType":"IfStatement","src":"14028:95:21","trueBody":{"id":3779,"nodeType":"Block","src":"14049:74:21","statements":[{"expression":{"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"14067:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3774,"nodeType":"ExpressionStatement","src":"14067:12:21"},{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"14097:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3778,"nodeType":"ExpressionStatement","src":"14097:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"14140:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"14136:95:21","trueBody":{"id":3794,"nodeType":"Block","src":"14157:74:21","statements":[{"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"14175:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ExpressionStatement","src":"14175:12:21"},{"expression":{"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"14205:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3793,"nodeType":"ExpressionStatement","src":"14205:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"14248:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3810,"nodeType":"IfStatement","src":"14244:95:21","trueBody":{"id":3809,"nodeType":"Block","src":"14265:74:21","statements":[{"expression":{"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"14283:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3804,"nodeType":"ExpressionStatement","src":"14283:12:21"},{"expression":{"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"14313:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3808,"nodeType":"ExpressionStatement","src":"14313:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"14356:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3821,"nodeType":"IfStatement","src":"14352:64:21","trueBody":{"id":3820,"nodeType":"Block","src":"14372:44:21","statements":[{"expression":{"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"14390:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3819,"nodeType":"ExpressionStatement","src":"14390:11:21"}]}}]},{"expression":{"id":3823,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"14442:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3746,"id":3824,"nodeType":"Return","src":"14435:13:21"}]},"documentation":{"id":3740,"nodeType":"StructuredDocumentation","src":"13541:246:21","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3826,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:21","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"value","nameLocation":"13816:5:21","nodeType":"VariableDeclaration","scope":3826,"src":"13808:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:21"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3826,"src":"13846:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:21"},"scope":3884,"src":"13792:663:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3863,"nodeType":"Block","src":"14692:177:21","statements":[{"id":3862,"nodeType":"UncheckedBlock","src":"14702:161:21","statements":[{"assignments":[3838],"declarations":[{"constant":false,"id":3838,"mutability":"mutable","name":"result","nameLocation":"14734:6:21","nodeType":"VariableDeclaration","scope":3862,"src":"14726:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3842,"initialValue":{"arguments":[{"id":3840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"14750:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3839,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3826,3864],"referencedDeclaration":3826,"src":"14743:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"14777:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3845,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"14804:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}],"id":3844,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"14787:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2841_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"14823:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"14838:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:21","trueExpression":{"hexValue":"31","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3836,"id":3861,"nodeType":"Return","src":"14770:82:21"}]}]},"documentation":{"id":3827,"nodeType":"StructuredDocumentation","src":"14461:144:21","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3864,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:21","nodeType":"FunctionDefinition","parameters":{"id":3833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"value","nameLocation":"14634:5:21","nodeType":"VariableDeclaration","scope":3864,"src":"14626:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:21","nodeType":"VariableDeclaration","scope":3864,"src":"14641:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"},"typeName":{"id":3831,"nodeType":"UserDefinedTypeName","pathNode":{"id":3830,"name":"Rounding","nameLocations":["14641:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"14641:8:21"},"referencedDeclaration":2841,"src":"14641:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:21"},"returnParameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3864,"src":"14683:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:21"},"scope":3884,"src":"14610:259:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3882,"nodeType":"Block","src":"15067:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3875,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"15090:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}],"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3873,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:21","typeDescriptions":{}}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3872,"id":3881,"nodeType":"Return","src":"15077:31:21"}]},"documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"14875:113:21","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3883,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:21","nodeType":"FunctionDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3868,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:21","nodeType":"VariableDeclaration","scope":3883,"src":"15019:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"},"typeName":{"id":3867,"nodeType":"UserDefinedTypeName","pathNode":{"id":3866,"name":"Rounding","nameLocations":["15019:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"15019:8:21"},"referencedDeclaration":2841,"src":"15019:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2841","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:21"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3883,"src":"15061:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3870,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:21"},"scope":3884,"src":"14993:122:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3885,"src":"203:14914:21","usedErrors":[2836],"usedEvents":[]}],"src":"103:15015:21"},"id":21},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3989]},"id":3990,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3886,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3887,"nodeType":"StructuredDocumentation","src":"135:80:22","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3989,"linearizedBaseContracts":[3989],"name":"SignedMath","nameLocation":"224:10:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":3904,"nodeType":"Block","src":"376:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"393:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"397:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3901,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"405:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:22","trueExpression":{"id":3900,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"401:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3896,"id":3903,"nodeType":"Return","src":"386:20:22"}]},"documentation":{"id":3888,"nodeType":"StructuredDocumentation","src":"241:66:22","text":" @dev Returns the largest of two signed numbers."},"id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:22","nodeType":"FunctionDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3890,"mutability":"mutable","name":"a","nameLocation":"332:1:22","nodeType":"VariableDeclaration","scope":3905,"src":"325:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3889,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3892,"mutability":"mutable","name":"b","nameLocation":"342:1:22","nodeType":"VariableDeclaration","scope":3905,"src":"335:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3891,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:22"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3905,"src":"368:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3894,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:22"},"scope":3989,"src":"312:101:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3922,"nodeType":"Block","src":"555:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3915,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"572:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3916,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"576:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"584:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:22","trueExpression":{"id":3918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"580:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3914,"id":3921,"nodeType":"Return","src":"565:20:22"}]},"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"419:67:22","text":" @dev Returns the smallest of two signed numbers."},"id":3923,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:22","nodeType":"FunctionDefinition","parameters":{"id":3911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"a","nameLocation":"511:1:22","nodeType":"VariableDeclaration","scope":3923,"src":"504:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3907,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3910,"mutability":"mutable","name":"b","nameLocation":"521:1:22","nodeType":"VariableDeclaration","scope":3923,"src":"514:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3909,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:22"},"returnParameters":{"id":3914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3923,"src":"547:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3912,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:22"},"scope":3989,"src":"491:101:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3966,"nodeType":"Block","src":"797:162:22","statements":[{"assignments":[3934],"declarations":[{"constant":false,"id":3934,"mutability":"mutable","name":"x","nameLocation":"866:1:22","nodeType":"VariableDeclaration","scope":3966,"src":"859:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3933,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3947,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3935,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"871:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3936,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"875:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"882:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3940,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"886:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:22"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"911:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3953,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"931:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3951,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:22","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3949,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:22","typeDescriptions":{}}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"945:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3959,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"949:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3932,"id":3965,"nodeType":"Return","src":"904:48:22"}]},"documentation":{"id":3924,"nodeType":"StructuredDocumentation","src":"598:126:22","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:22","nodeType":"FunctionDefinition","parameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"a","nameLocation":"753:1:22","nodeType":"VariableDeclaration","scope":3967,"src":"746:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3925,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"b","nameLocation":"763:1:22","nodeType":"VariableDeclaration","scope":3967,"src":"756:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3927,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:22"},"returnParameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3967,"src":"789:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3930,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:22"},"scope":3989,"src":"729:230:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3987,"nodeType":"Block","src":"1103:158:22","statements":[{"id":3986,"nodeType":"UncheckedBlock","src":"1113:142:22","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3977,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"1228:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:22","subExpression":{"id":3981,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"1242:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:22","trueExpression":{"id":3980,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"1237:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:22","typeDescriptions":{}}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3974,"id":3985,"nodeType":"Return","src":"1213:31:22"}]}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"965:78:22","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3988,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:22","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"n","nameLocation":"1068:1:22","nodeType":"VariableDeclaration","scope":3988,"src":"1061:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3969,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:22"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"1094:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:22"},"scope":3989,"src":"1048:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3990,"src":"216:1047:22","usedErrors":[],"usedEvents":[]}],"src":"109:1155:22"},"id":22},"contracts/MyOApp.sol":{"ast":{"absolutePath":"contracts/MyOApp.sol","exportedSymbols":{"MessagingFee":[631],"MessagingReceipt":[626],"MyOApp":[4118],"OApp":[45],"Origin":[638],"Ownable":[1466]},"id":4119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3991,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"33:24:23"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3993,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4119,"sourceUnit":1467,"src":"59:69:23","symbolAliases":[{"foreign":{"id":3992,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"68:7:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol","file":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol","id":3997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4119,"sourceUnit":46,"src":"129:99:23","symbolAliases":[{"foreign":{"id":3994,"name":"OApp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"138:4:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3995,"name":"MessagingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"144:12:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3996,"name":"Origin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"158:6:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol","file":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol","id":3999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4119,"sourceUnit":514,"src":"229:95:23","symbolAliases":[{"foreign":{"id":3998,"name":"MessagingReceipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"238:16:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4000,"name":"OApp","nameLocations":["345:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"345:4:23"},"id":4001,"nodeType":"InheritanceSpecifier","src":"345:4:23"}],"canonicalName":"MyOApp","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4118,"linearizedBaseContracts":[4118,45,327,513,175,1466,2153,576,597,836],"name":"MyOApp","nameLocation":"335:6:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4015,"nodeType":"Block","src":"452:2:23","statements":[]},"id":4016,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4008,"name":"_endpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"411:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4009,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"422:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4010,"kind":"baseConstructorSpecifier","modifierName":{"id":4007,"name":"OApp","nameLocations":["406:4:23"],"nodeType":"IdentifierPath","referencedDeclaration":45,"src":"406:4:23"},"nodeType":"ModifierInvocation","src":"406:26:23"},{"arguments":[{"id":4012,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"441:9:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4013,"kind":"baseConstructorSpecifier","modifierName":{"id":4011,"name":"Ownable","nameLocations":["433:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"433:7:23"},"nodeType":"ModifierInvocation","src":"433:18:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"_endpoint","nameLocation":"376:9:23","nodeType":"VariableDeclaration","scope":4016,"src":"368:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4002,"name":"address","nodeType":"ElementaryTypeName","src":"368:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4005,"mutability":"mutable","name":"_delegate","nameLocation":"395:9:23","nodeType":"VariableDeclaration","scope":4016,"src":"387:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"387:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"367:38:23"},"returnParameters":{"id":4014,"nodeType":"ParameterList","parameters":[],"src":"452:0:23"},"scope":4118,"src":"356:98:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"functionSelector":"73d4a13a","id":4019,"mutability":"mutable","name":"data","nameLocation":"474:4:23","nodeType":"VariableDeclaration","scope":4118,"src":"460:44:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4017,"name":"string","nodeType":"ElementaryTypeName","src":"460:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4e6f7468696e67207265636569766564207965742e","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"481:23:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_655190e70af2323680352b2d6489fbe1f040a5cb0f300a68726e4235496f69ba","typeString":"literal_string \"Nothing received yet.\""},"value":"Nothing received yet."},"visibility":"public"},{"body":{"id":4057,"nodeType":"Block","src":"1139:166:23","statements":[{"assignments":[4033],"declarations":[{"constant":false,"id":4033,"mutability":"mutable","name":"_payload","nameLocation":"1162:8:23","nodeType":"VariableDeclaration","scope":4057,"src":"1149:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4032,"name":"bytes","nodeType":"ElementaryTypeName","src":"1149:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4038,"initialValue":{"arguments":[{"id":4036,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"1184:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4034,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1173:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1177:6:23","memberName":"encode","nodeType":"MemberAccess","src":"1173:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1173:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1149:44:23"},{"expression":{"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4039,"name":"receipt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"1203:7:23","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_memory_ptr","typeString":"struct MessagingReceipt memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4041,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"1221:7:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4042,"name":"_payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"1230:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4043,"name":"_options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"1240:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[{"expression":{"id":4045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1263:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1267:5:23","memberName":"value","nodeType":"MemberAccess","src":"1263:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1274:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4044,"name":"MessagingFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"1250:12:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MessagingFee_$631_storage_ptr_$","typeString":"type(struct MessagingFee storage pointer)"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1250:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"}},{"arguments":[{"expression":{"id":4051,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1286:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1290:6:23","memberName":"sender","nodeType":"MemberAccess","src":"1286:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1278:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4049,"name":"address","nodeType":"ElementaryTypeName","src":"1278:8:23","stateMutability":"payable","typeDescriptions":{}}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4040,"name":"_lzSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"1213:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_MessagingFee_$631_memory_ptr_$_t_address_$returns$_t_struct$_MessagingReceipt_$626_memory_ptr_$","typeString":"function (uint32,bytes memory,bytes memory,struct MessagingFee memory,address) returns (struct MessagingReceipt memory)"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1213:85:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_memory_ptr","typeString":"struct MessagingReceipt memory"}},"src":"1203:95:23","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_memory_ptr","typeString":"struct MessagingReceipt memory"}},"id":4056,"nodeType":"ExpressionStatement","src":"1203:95:23"}]},"documentation":{"id":4020,"nodeType":"StructuredDocumentation","src":"511:455:23","text":" @notice Sends a message from the source chain to a destination chain.\n @param _dstEid The endpoint ID of the destination chain.\n @param _message The message string to be sent.\n @param _options Additional options for message execution.\n @dev Encodes the message as bytes and sends it using the `_lzSend` internal function.\n @return receipt A `MessagingReceipt` struct containing details of the message sent."},"functionSelector":"e0539e58","id":4058,"implemented":true,"kind":"function","modifiers":[],"name":"send","nameLocation":"980:4:23","nodeType":"FunctionDefinition","parameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"_dstEid","nameLocation":"1001:7:23","nodeType":"VariableDeclaration","scope":4058,"src":"994:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4021,"name":"uint32","nodeType":"ElementaryTypeName","src":"994:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"_message","nameLocation":"1032:8:23","nodeType":"VariableDeclaration","scope":4058,"src":"1018:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4023,"name":"string","nodeType":"ElementaryTypeName","src":"1018:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4026,"mutability":"mutable","name":"_options","nameLocation":"1065:8:23","nodeType":"VariableDeclaration","scope":4058,"src":"1050:23:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4025,"name":"bytes","nodeType":"ElementaryTypeName","src":"1050:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"984:95:23"},"returnParameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"receipt","nameLocation":"1130:7:23","nodeType":"VariableDeclaration","scope":4058,"src":"1106:31:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_memory_ptr","typeString":"struct MessagingReceipt"},"typeName":{"id":4029,"nodeType":"UserDefinedTypeName","pathNode":{"id":4028,"name":"MessagingReceipt","nameLocations":["1106:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":626,"src":"1106:16:23"},"referencedDeclaration":626,"src":"1106:16:23","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingReceipt_$626_storage_ptr","typeString":"struct MessagingReceipt"}},"visibility":"internal"}],"src":"1105:33:23"},"scope":4118,"src":"971:334:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4089,"nodeType":"Block","src":"1978:125:23","statements":[{"assignments":[4074],"declarations":[{"constant":false,"id":4074,"mutability":"mutable","name":"payload","nameLocation":"2001:7:23","nodeType":"VariableDeclaration","scope":4089,"src":"1988:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4073,"name":"bytes","nodeType":"ElementaryTypeName","src":"1988:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4079,"initialValue":{"arguments":[{"id":4077,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"2022:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4075,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2011:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2015:6:23","memberName":"encode","nodeType":"MemberAccess","src":"2011:10:23","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1988:43:23"},{"expression":{"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4080,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"2041:3:23","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4082,"name":"_dstEid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"2054:7:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4083,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"2063:7:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4084,"name":"_options","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4065,"src":"2072:8:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4085,"name":"_payInLzToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"2082:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4081,"name":"_quote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2047:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$_t_struct$_MessagingFee_$631_memory_ptr_$","typeString":"function (uint32,bytes memory,bytes memory,bool) view returns (struct MessagingFee memory)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:49:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"}},"src":"2041:55:23","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee memory"}},"id":4088,"nodeType":"ExpressionStatement","src":"2041:55:23"}]},"documentation":{"id":4059,"nodeType":"StructuredDocumentation","src":"1311:480:23","text":" @notice Quotes the gas needed to pay for the full omnichain transaction in native gas or ZRO token.\n @param _dstEid Destination chain's endpoint ID.\n @param _message The message.\n @param _options Message execution options (e.g., for sending gas to destination).\n @param _payInLzToken Whether to return fee in ZRO token.\n @return fee A `MessagingFee` struct containing the calculated gas fee in either the native token or ZRO token."},"functionSelector":"f77e5dd3","id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"quote","nameLocation":"1805:5:23","nodeType":"FunctionDefinition","parameters":{"id":4068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"mutability":"mutable","name":"_dstEid","nameLocation":"1827:7:23","nodeType":"VariableDeclaration","scope":4090,"src":"1820:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4060,"name":"uint32","nodeType":"ElementaryTypeName","src":"1820:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4063,"mutability":"mutable","name":"_message","nameLocation":"1858:8:23","nodeType":"VariableDeclaration","scope":4090,"src":"1844:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4062,"name":"string","nodeType":"ElementaryTypeName","src":"1844:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4065,"mutability":"mutable","name":"_options","nameLocation":"1889:8:23","nodeType":"VariableDeclaration","scope":4090,"src":"1876:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4064,"name":"bytes","nodeType":"ElementaryTypeName","src":"1876:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4067,"mutability":"mutable","name":"_payInLzToken","nameLocation":"1912:13:23","nodeType":"VariableDeclaration","scope":4090,"src":"1907:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4066,"name":"bool","nodeType":"ElementaryTypeName","src":"1907:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1810:121:23"},"returnParameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4071,"mutability":"mutable","name":"fee","nameLocation":"1973:3:23","nodeType":"VariableDeclaration","scope":4090,"src":"1953:23:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_memory_ptr","typeString":"struct MessagingFee"},"typeName":{"id":4070,"nodeType":"UserDefinedTypeName","pathNode":{"id":4069,"name":"MessagingFee","nameLocations":["1953:12:23"],"nodeType":"IdentifierPath","referencedDeclaration":631,"src":"1953:12:23"},"referencedDeclaration":631,"src":"1953:12:23","typeDescriptions":{"typeIdentifier":"t_struct$_MessagingFee_$631_storage_ptr","typeString":"struct MessagingFee"}},"visibility":"internal"}],"src":"1952:25:23"},"scope":4118,"src":"1796:307:23","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[326],"body":{"id":4116,"nodeType":"Block","src":"3009:53:23","statements":[{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4106,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"3019:4:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4109,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"3037:7:23","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3047:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4110,"name":"string","nodeType":"ElementaryTypeName","src":"3047:6:23","typeDescriptions":{}}}],"id":4112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3046:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"}],"expression":{"id":4107,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3026:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3030:6:23","memberName":"decode","nodeType":"MemberAccess","src":"3026:10:23","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3026:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3019:36:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4115,"nodeType":"ExpressionStatement","src":"3019:36:23"}]},"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"2109:685:23","text":" @dev Internal function override to handle incoming messages from another chain.\n @dev _origin A struct containing information about the message sender.\n @dev _guid A unique global packet identifier for the message.\n @param payload The encoded message payload being received.\n @dev The following params are unused in the current implementation of the OApp.\n @dev _executor The address of the Executor responsible for processing the message.\n @dev _extraData Arbitrary data appended by the Executor to the message.\n Decodes the received payload and processes it as per the business logic defined in the function."},"id":4117,"implemented":true,"kind":"function","modifiers":[],"name":"_lzReceive","nameLocation":"2808:10:23","nodeType":"FunctionDefinition","overrides":{"id":4104,"nodeType":"OverrideSpecifier","overrides":[],"src":"3000:8:23"},"parameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"2828:15:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_calldata_ptr","typeString":"struct Origin"},"typeName":{"id":4093,"nodeType":"UserDefinedTypeName","pathNode":{"id":4092,"name":"Origin","nameLocations":["2828:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"2828:6:23"},"referencedDeclaration":638,"src":"2828:6:23","typeDescriptions":{"typeIdentifier":"t_struct$_Origin_$638_storage_ptr","typeString":"struct Origin"}},"visibility":"internal"},{"constant":false,"id":4096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"2865:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2865:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4098,"mutability":"mutable","name":"payload","nameLocation":"2907:7:23","nodeType":"VariableDeclaration","scope":4117,"src":"2892:22:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4097,"name":"bytes","nodeType":"ElementaryTypeName","src":"2892:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"2924:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4099,"name":"address","nodeType":"ElementaryTypeName","src":"2924:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4117,"src":"2955:14:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4101,"name":"bytes","nodeType":"ElementaryTypeName","src":"2955:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2818:172:23"},"returnParameters":{"id":4105,"nodeType":"ParameterList","parameters":[],"src":"3009:0:23"},"scope":4118,"src":"2799:263:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4119,"src":"326:2738:23","usedErrors":[191,349,351,524,528,530,532,1332,1337,1597,1878,1883,1886],"usedEvents":[538,1343]}],"src":"33:3032:23"},"id":23},"contracts/SettlementContract.sol":{"ast":{"absolutePath":"contracts/SettlementContract.sol","exportedSymbols":{"Context":[2153],"CrossChainOrder":[4309],"ECDSA":[2756],"ISettlementContract":[4389],"MessageHashUtils":[2830],"Ownable":[1466],"ResolvedCrossChainOrder":[4344],"SettlementContract":[4284]},"id":4285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4120,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"contracts/interfaces/IERC7683.sol","file":"./interfaces/IERC7683.sol","id":4124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4285,"sourceUnit":4390,"src":"58:104:24","symbolAliases":[{"foreign":{"id":4121,"name":"ISettlementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"66:19:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4122,"name":"CrossChainOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"87:15:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":4123,"name":"ResolvedCrossChainOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"104:23:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":4126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4285,"sourceUnit":2757,"src":"163:75:24","symbolAliases":[{"foreign":{"id":4125,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"171:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":4128,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4285,"sourceUnit":2831,"src":"239:97:24","symbolAliases":[{"foreign":{"id":4127,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"247:16:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":4130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4285,"sourceUnit":2154,"src":"337:66:24","symbolAliases":[{"foreign":{"id":4129,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"345:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4132,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4285,"sourceUnit":1467,"src":"404:67:24","symbolAliases":[{"foreign":{"id":4131,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"412:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4133,"name":"ISettlementContract","nameLocations":["508:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"508:19:24"},"id":4134,"nodeType":"InheritanceSpecifier","src":"508:19:24"},{"baseName":{"id":4135,"name":"Context","nameLocations":["533:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"533:7:24"},"id":4136,"nodeType":"InheritanceSpecifier","src":"533:7:24"},{"baseName":{"id":4137,"name":"Ownable","nameLocations":["546:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"546:7:24"},"id":4138,"nodeType":"InheritanceSpecifier","src":"546:7:24"}],"canonicalName":"SettlementContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4284,"linearizedBaseContracts":[4284,1466,2153,4389],"name":"SettlementContract","nameLocation":"482:18:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4141,"libraryName":{"id":4139,"name":"ECDSA","nameLocations":["566:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":2756,"src":"566:5:24"},"nodeType":"UsingForDirective","src":"560:24:24","typeName":{"id":4140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"576:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":4144,"libraryName":{"id":4142,"name":"MessageHashUtils","nameLocations":["595:16:24"],"nodeType":"IdentifierPath","referencedDeclaration":2830,"src":"595:16:24"},"nodeType":"UsingForDirective","src":"589:35:24","typeName":{"id":4143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"616:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":4152,"nodeType":"Block","src":"703:2:24","statements":[]},"documentation":{"id":4145,"nodeType":"StructuredDocumentation","src":"630:32:24","text":"\n Constructor"},"id":4153,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4148,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"689:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"689:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4150,"kind":"baseConstructorSpecifier","modifierName":{"id":4147,"name":"Ownable","nameLocations":["681:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"681:7:24"},"nodeType":"ModifierInvocation","src":"681:21:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4146,"nodeType":"ParameterList","parameters":[],"src":"678:2:24"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[],"src":"703:0:24"},"scope":4284,"src":"667:38:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4166,"nodeType":"Block","src":"835:41:24","statements":[{"expression":{"arguments":[{"id":4163,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"863:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_calldata_ptr","typeString":"struct CrossChainOrder calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_calldata_ptr","typeString":"struct CrossChainOrder calldata"}],"id":4162,"name":"_hashOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"852:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CrossChainOrder_$4309_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct CrossChainOrder memory) pure returns (bytes32)"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"852:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4161,"id":4165,"nodeType":"Return","src":"845:24:24"}]},"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"711:34:24","text":"\n Order Hashing"},"functionSelector":"44b438a7","id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"computeHash","nameLocation":"759:11:24","nodeType":"FunctionDefinition","parameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4157,"mutability":"mutable","name":"order","nameLocation":"796:5:24","nodeType":"VariableDeclaration","scope":4167,"src":"771:30:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_calldata_ptr","typeString":"struct CrossChainOrder"},"typeName":{"id":4156,"nodeType":"UserDefinedTypeName","pathNode":{"id":4155,"name":"CrossChainOrder","nameLocations":["771:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":4309,"src":"771:15:24"},"referencedDeclaration":4309,"src":"771:15:24","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_storage_ptr","typeString":"struct CrossChainOrder"}},"visibility":"internal"}],"src":"770:32:24"},"returnParameters":{"id":4161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"826:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"826:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"825:9:24"},"scope":4284,"src":"750:126:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"body":{"id":4182,"nodeType":"Block","src":"964:52:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":4178,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"1002:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_memory_ptr","typeString":"struct CrossChainOrder memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_memory_ptr","typeString":"struct CrossChainOrder memory"}],"expression":{"id":4176,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"991:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"995:6:24","memberName":"encode","nodeType":"MemberAccess","src":"991:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"991:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4175,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"981:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"981:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4174,"id":4181,"nodeType":"Return","src":"974:35:24"}]},"id":4183,"implemented":true,"kind":"function","modifiers":[],"name":"_hashOrder","nameLocation":"891:10:24","nodeType":"FunctionDefinition","parameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"order","nameLocation":"925:5:24","nodeType":"VariableDeclaration","scope":4183,"src":"902:28:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_memory_ptr","typeString":"struct CrossChainOrder"},"typeName":{"id":4169,"nodeType":"UserDefinedTypeName","pathNode":{"id":4168,"name":"CrossChainOrder","nameLocations":["902:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":4309,"src":"902:15:24"},"referencedDeclaration":4309,"src":"902:15:24","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_storage_ptr","typeString":"struct CrossChainOrder"}},"visibility":"internal"}],"src":"901:30:24"},"returnParameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4183,"src":"955:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"955:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"954:9:24"},"scope":4284,"src":"882:134:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4205,"nodeType":"Block","src":"1131:127:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4199,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"1225:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4194,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"1159:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_memory_ptr","typeString":"struct CrossChainOrder memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_memory_ptr","typeString":"struct CrossChainOrder memory"}],"id":4193,"name":"_hashOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"1148:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CrossChainOrder_$4309_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct CrossChainOrder memory) pure returns (bytes32)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1148:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1179:22:24","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"1148:53:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1148:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1217:7:24","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2512,"src":"1148:76:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1148:87:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4201,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1239:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1148:103:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4192,"id":4204,"nodeType":"Return","src":"1141:110:24"}]},"id":4206,"implemented":true,"kind":"function","modifiers":[],"name":"_verifySignature","nameLocation":"1031:16:24","nodeType":"FunctionDefinition","parameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"order","nameLocation":"1071:5:24","nodeType":"VariableDeclaration","scope":4206,"src":"1048:28:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_memory_ptr","typeString":"struct CrossChainOrder"},"typeName":{"id":4185,"nodeType":"UserDefinedTypeName","pathNode":{"id":4184,"name":"CrossChainOrder","nameLocations":["1048:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":4309,"src":"1048:15:24"},"referencedDeclaration":4309,"src":"1048:15:24","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_storage_ptr","typeString":"struct CrossChainOrder"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"signature","nameLocation":"1091:9:24","nodeType":"VariableDeclaration","scope":4206,"src":"1078:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4187,"name":"bytes","nodeType":"ElementaryTypeName","src":"1078:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1047:54:24"},"returnParameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4206,"src":"1125:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4190,"name":"bool","nodeType":"ElementaryTypeName","src":"1125:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1124:6:24"},"scope":4284,"src":"1022:236:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":4207,"nodeType":"StructuredDocumentation","src":"1264:53:24","text":"\n Whitelisted Settlement Contracts"},"id":4211,"mutability":"mutable","name":"_isSettlementSupported","nameLocation":"1356:22:24","nodeType":"VariableDeclaration","scope":4284,"src":"1322:56:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4210,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4208,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1322:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4209,"name":"bool","nodeType":"ElementaryTypeName","src":"1341:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"_settlementToChainId","nameLocation":"1418:20:24","nodeType":"VariableDeclaration","scope":4284,"src":"1384:54:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4214,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4212,"name":"address","nodeType":"ElementaryTypeName","src":"1392:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1384:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4213,"name":"uint","nodeType":"ElementaryTypeName","src":"1403:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"body":{"id":4236,"nodeType":"Block","src":"1543:126:24","statements":[{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4224,"name":"_isSettlementSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"1553:22:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4226,"indexExpression":{"id":4225,"name":"settlementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"1576:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1553:42:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1598:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1553:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4229,"nodeType":"ExpressionStatement","src":"1553:49:24"},{"expression":{"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4230,"name":"_settlementToChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"1612:20:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4232,"indexExpression":{"id":4231,"name":"settlementContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"1633:18:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1612:40:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4233,"name":"chainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"1655:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1612:50:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4235,"nodeType":"ExpressionStatement","src":"1612:50:24"}]},"functionSelector":"97b2b09f","id":4237,"implemented":true,"kind":"function","modifiers":[{"id":4222,"kind":"modifierInvocation","modifierName":{"id":4221,"name":"onlyOwner","nameLocations":["1533:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":1377,"src":"1533:9:24"},"nodeType":"ModifierInvocation","src":"1533:9:24"}],"name":"whitelistSettlementContract","nameLocation":"1454:27:24","nodeType":"FunctionDefinition","parameters":{"id":4220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"settlementContract","nameLocation":"1490:18:24","nodeType":"VariableDeclaration","scope":4237,"src":"1482:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4216,"name":"address","nodeType":"ElementaryTypeName","src":"1482:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"chainId","nameLocation":"1515:7:24","nodeType":"VariableDeclaration","scope":4237,"src":"1510:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4218,"name":"uint","nodeType":"ElementaryTypeName","src":"1510:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1481:42:24"},"returnParameters":{"id":4223,"nodeType":"ParameterList","parameters":[],"src":"1543:0:24"},"scope":4284,"src":"1445:224:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"constant":false,"documentation":{"id":4238,"nodeType":"StructuredDocumentation","src":"1675:39:24","text":"\n Order Registration"},"id":4243,"mutability":"mutable","name":"_orders","nameLocation":"1764:7:24","nodeType":"VariableDeclaration","scope":4284,"src":"1719:52:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_CrossChainOrder_$4309_storage_$","typeString":"mapping(bytes32 => struct CrossChainOrder)"},"typeName":{"id":4242,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1727:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1719:35:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_CrossChainOrder_$4309_storage_$","typeString":"mapping(bytes32 => struct CrossChainOrder)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4241,"nodeType":"UserDefinedTypeName","pathNode":{"id":4240,"name":"CrossChainOrder","nameLocations":["1738:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":4309,"src":"1738:15:24"},"referencedDeclaration":4309,"src":"1738:15:24","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_storage_ptr","typeString":"struct CrossChainOrder"}}},"visibility":"internal"},{"constant":false,"id":4247,"mutability":"mutable","name":"_nonceOf","nameLocation":"1814:8:24","nodeType":"VariableDeclaration","scope":4284,"src":"1777:45:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4246,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4244,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1777:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4245,"name":"uint256","nodeType":"ElementaryTypeName","src":"1796:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"baseFunctions":[4377],"body":{"id":4257,"nodeType":"Block","src":"1941:8:24","statements":[]},"functionSelector":"962fc2a3","id":4258,"implemented":true,"kind":"function","modifiers":[],"name":"initiate","nameLocation":"1838:8:24","nodeType":"FunctionDefinition","parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"order","nameLocation":"1872:5:24","nodeType":"VariableDeclaration","scope":4258,"src":"1847:30:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_calldata_ptr","typeString":"struct CrossChainOrder"},"typeName":{"id":4249,"nodeType":"UserDefinedTypeName","pathNode":{"id":4248,"name":"CrossChainOrder","nameLocations":["1847:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":4309,"src":"1847:15:24"},"referencedDeclaration":4309,"src":"1847:15:24","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_storage_ptr","typeString":"struct CrossChainOrder"}},"visibility":"internal"},{"constant":false,"id":4252,"mutability":"mutable","name":"signature","nameLocation":"1894:9:24","nodeType":"VariableDeclaration","scope":4258,"src":"1879:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4251,"name":"bytes","nodeType":"ElementaryTypeName","src":"1879:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4254,"mutability":"mutable","name":"fillerData","nameLocation":"1920:10:24","nodeType":"VariableDeclaration","scope":4258,"src":"1905:25:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4253,"name":"bytes","nodeType":"ElementaryTypeName","src":"1905:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1846:85:24"},"returnParameters":{"id":4256,"nodeType":"ParameterList","parameters":[],"src":"1941:0:24"},"scope":4284,"src":"1829:120:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4269,"nodeType":"Block","src":"2013:38:24","statements":[{"expression":{"baseExpression":{"id":4265,"name":"_nonceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"2030:8:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4267,"indexExpression":{"id":4266,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"2039:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2030:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4264,"id":4268,"nodeType":"Return","src":"2023:21:24"}]},"functionSelector":"ed2a2d64","id":4270,"implemented":true,"kind":"function","modifiers":[],"name":"nonceOf","nameLocation":"1964:7:24","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"user","nameLocation":"1980:4:24","nodeType":"VariableDeclaration","scope":4270,"src":"1972:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4259,"name":"address","nodeType":"ElementaryTypeName","src":"1972:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1971:14:24"},"returnParameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4270,"src":"2004:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2004:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2003:9:24"},"scope":4284,"src":"1955:96:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4388],"body":{"id":4282,"nodeType":"Block","src":"2229:8:24","statements":[]},"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"2057:36:24","text":"\n Order Resolving"},"functionSelector":"bf6d01d3","id":4283,"implemented":true,"kind":"function","modifiers":[],"name":"resolve","nameLocation":"2107:7:24","nodeType":"FunctionDefinition","parameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"order","nameLocation":"2140:5:24","nodeType":"VariableDeclaration","scope":4283,"src":"2115:30:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_calldata_ptr","typeString":"struct CrossChainOrder"},"typeName":{"id":4273,"nodeType":"UserDefinedTypeName","pathNode":{"id":4272,"name":"CrossChainOrder","nameLocations":["2115:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":4309,"src":"2115:15:24"},"referencedDeclaration":4309,"src":"2115:15:24","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_storage_ptr","typeString":"struct CrossChainOrder"}},"visibility":"internal"},{"constant":false,"id":4276,"mutability":"mutable","name":"fillerData","nameLocation":"2162:10:24","nodeType":"VariableDeclaration","scope":4283,"src":"2147:25:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4275,"name":"bytes","nodeType":"ElementaryTypeName","src":"2147:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2114:59:24"},"returnParameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4283,"src":"2197:30:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ResolvedCrossChainOrder_$4344_memory_ptr","typeString":"struct ResolvedCrossChainOrder"},"typeName":{"id":4279,"nodeType":"UserDefinedTypeName","pathNode":{"id":4278,"name":"ResolvedCrossChainOrder","nameLocations":["2197:23:24"],"nodeType":"IdentifierPath","referencedDeclaration":4344,"src":"2197:23:24"},"referencedDeclaration":4344,"src":"2197:23:24","typeDescriptions":{"typeIdentifier":"t_struct$_ResolvedCrossChainOrder_$4344_storage_ptr","typeString":"struct ResolvedCrossChainOrder"}},"visibility":"internal"}],"src":"2196:32:24"},"scope":4284,"src":"2098:139:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4285,"src":"473:1766:24","usedErrors":[1332,1337],"usedEvents":[1343]}],"src":"32:2207:24"},"id":24},"contracts/interfaces/IERC7683.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC7683.sol","exportedSymbols":{"CrossChainOrder":[4309],"ISettlementContract":[4389],"Input":[4352],"Output":[4366],"ResolvedCrossChainOrder":[4344]},"id":4390,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4286,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"32:24:25"},{"canonicalName":"CrossChainOrder","documentation":{"id":4287,"nodeType":"StructuredDocumentation","src":"58:155:25","text":"@title CrossChainOrder type\n @notice Standard order struct to be signed by swappers, disseminated to fillers, and submitted to settlement contracts"},"id":4309,"members":[{"constant":false,"id":4290,"mutability":"mutable","name":"settlementContract","nameLocation":"394:18:25","nodeType":"VariableDeclaration","scope":4309,"src":"386:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4289,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4293,"mutability":"mutable","name":"swapper","nameLocation":"536:7:25","nodeType":"VariableDeclaration","scope":4309,"src":"528:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4292,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4296,"mutability":"mutable","name":"nonce","nameLocation":"616:5:25","nodeType":"VariableDeclaration","scope":4309,"src":"608:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"608:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4299,"mutability":"mutable","name":"originChainId","nameLocation":"673:13:25","nodeType":"VariableDeclaration","scope":4309,"src":"666:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4298,"name":"uint32","nodeType":"ElementaryTypeName","src":"666:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4302,"mutability":"mutable","name":"initiateDeadline","nameLocation":"757:16:25","nodeType":"VariableDeclaration","scope":4309,"src":"750:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4301,"name":"uint32","nodeType":"ElementaryTypeName","src":"750:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4305,"mutability":"mutable","name":"fillDeadline","nameLocation":"866:12:25","nodeType":"VariableDeclaration","scope":4309,"src":"859:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4304,"name":"uint32","nodeType":"ElementaryTypeName","src":"859:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4308,"mutability":"mutable","name":"orderData","nameLocation":"1079:9:25","nodeType":"VariableDeclaration","scope":4309,"src":"1073:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4307,"name":"bytes","nodeType":"ElementaryTypeName","src":"1073:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"CrossChainOrder","nameLocation":"220:15:25","nodeType":"StructDefinition","scope":4390,"src":"213:878:25","visibility":"public"},{"canonicalName":"ResolvedCrossChainOrder","documentation":{"id":4310,"nodeType":"StructuredDocumentation","src":"1093:352:25","text":"@title ResolvedCrossChainOrder type\n @notice An implementation-generic representation of an order\n @dev Defines all requirements for filling an order by unbundling the implementation-specific orderData.\n @dev Intended to improve integration generalization by allowing fillers to compute the exact input and output information of any order"},"id":4344,"members":[{"constant":false,"id":4313,"mutability":"mutable","name":"settlementContract","nameLocation":"1560:18:25","nodeType":"VariableDeclaration","scope":4344,"src":"1552:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4312,"name":"address","nodeType":"ElementaryTypeName","src":"1552:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4316,"mutability":"mutable","name":"swapper","nameLocation":"1650:7:25","nodeType":"VariableDeclaration","scope":4344,"src":"1642:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4315,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4319,"mutability":"mutable","name":"nonce","nameLocation":"1730:5:25","nodeType":"VariableDeclaration","scope":4344,"src":"1722:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1722:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"originChainId","nameLocation":"1787:13:25","nodeType":"VariableDeclaration","scope":4344,"src":"1780:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4321,"name":"uint32","nodeType":"ElementaryTypeName","src":"1780:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4325,"mutability":"mutable","name":"initiateDeadline","nameLocation":"1871:16:25","nodeType":"VariableDeclaration","scope":4344,"src":"1864:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4324,"name":"uint32","nodeType":"ElementaryTypeName","src":"1864:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"fillDeadline","nameLocation":"1983:12:25","nodeType":"VariableDeclaration","scope":4344,"src":"1976:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4327,"name":"uint32","nodeType":"ElementaryTypeName","src":"1976:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"swapperInputs","nameLocation":"2085:13:25","nodeType":"VariableDeclaration","scope":4344,"src":"2077:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Input_$4352_storage_$dyn_storage_ptr","typeString":"struct Input[]"},"typeName":{"baseType":{"id":4331,"nodeType":"UserDefinedTypeName","pathNode":{"id":4330,"name":"Input","nameLocations":["2077:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":4352,"src":"2077:5:25"},"referencedDeclaration":4352,"src":"2077:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Input_$4352_storage_ptr","typeString":"struct Input"}},"id":4332,"nodeType":"ArrayTypeName","src":"2077:7:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Input_$4352_storage_$dyn_storage_ptr","typeString":"struct Input[]"}},"visibility":"internal"},{"constant":false,"id":4338,"mutability":"mutable","name":"swapperOutputs","nameLocation":"2188:14:25","nodeType":"VariableDeclaration","scope":4344,"src":"2179:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Output_$4366_storage_$dyn_storage_ptr","typeString":"struct Output[]"},"typeName":{"baseType":{"id":4336,"nodeType":"UserDefinedTypeName","pathNode":{"id":4335,"name":"Output","nameLocations":["2179:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":4366,"src":"2179:6:25"},"referencedDeclaration":4366,"src":"2179:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Output_$4366_storage_ptr","typeString":"struct Output"}},"id":4337,"nodeType":"ArrayTypeName","src":"2179:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Output_$4366_storage_$dyn_storage_ptr","typeString":"struct Output[]"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"fillerOutputs","nameLocation":"2290:13:25","nodeType":"VariableDeclaration","scope":4344,"src":"2281:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Output_$4366_storage_$dyn_storage_ptr","typeString":"struct Output[]"},"typeName":{"baseType":{"id":4341,"nodeType":"UserDefinedTypeName","pathNode":{"id":4340,"name":"Output","nameLocations":["2281:6:25"],"nodeType":"IdentifierPath","referencedDeclaration":4366,"src":"2281:6:25"},"referencedDeclaration":4366,"src":"2281:6:25","typeDescriptions":{"typeIdentifier":"t_struct$_Output_$4366_storage_ptr","typeString":"struct Output"}},"id":4342,"nodeType":"ArrayTypeName","src":"2281:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Output_$4366_storage_$dyn_storage_ptr","typeString":"struct Output[]"}},"visibility":"internal"}],"name":"ResolvedCrossChainOrder","nameLocation":"1452:23:25","nodeType":"StructDefinition","scope":4390,"src":"1445:861:25","visibility":"public"},{"canonicalName":"Input","documentation":{"id":4345,"nodeType":"StructuredDocumentation","src":"2308:62:25","text":"@notice Tokens sent by the swapper as inputs to the order"},"id":4352,"members":[{"constant":false,"id":4348,"mutability":"mutable","name":"token","nameLocation":"2455:5:25","nodeType":"VariableDeclaration","scope":4352,"src":"2447:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4347,"name":"address","nodeType":"ElementaryTypeName","src":"2447:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4351,"mutability":"mutable","name":"amount","nameLocation":"2516:6:25","nodeType":"VariableDeclaration","scope":4352,"src":"2508:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2508:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Input","nameLocation":"2377:5:25","nodeType":"StructDefinition","scope":4390,"src":"2370:155:25","visibility":"public"},{"canonicalName":"Output","documentation":{"id":4353,"nodeType":"StructuredDocumentation","src":"2527:70:25","text":"@notice Tokens that must be receive for a valid order fulfillment"},"id":4366,"members":[{"constant":false,"id":4356,"mutability":"mutable","name":"token","nameLocation":"2749:5:25","nodeType":"VariableDeclaration","scope":4366,"src":"2741:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4355,"name":"address","nodeType":"ElementaryTypeName","src":"2741:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4359,"mutability":"mutable","name":"amount","nameLocation":"2810:6:25","nodeType":"VariableDeclaration","scope":4366,"src":"2802:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4362,"mutability":"mutable","name":"recipient","nameLocation":"2878:9:25","nodeType":"VariableDeclaration","scope":4366,"src":"2870:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4361,"name":"address","nodeType":"ElementaryTypeName","src":"2870:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4365,"mutability":"mutable","name":"chainId","nameLocation":"2945:7:25","nodeType":"VariableDeclaration","scope":4366,"src":"2938:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4364,"name":"uint32","nodeType":"ElementaryTypeName","src":"2938:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Output","nameLocation":"2604:6:25","nodeType":"StructDefinition","scope":4390,"src":"2597:358:25","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"ISettlementContract","contractDependencies":[],"contractKind":"interface","documentation":{"id":4367,"nodeType":"StructuredDocumentation","src":"2958:87:25","text":"@title ISettlementContract\n @notice Standard interface for settlement contracts"},"fullyImplemented":false,"id":4389,"linearizedBaseContracts":[4389],"name":"ISettlementContract","nameLocation":"3055:19:25","nodeType":"ContractDefinition","nodes":[{"functionSelector":"962fc2a3","id":4377,"implemented":false,"kind":"function","modifiers":[],"name":"initiate","nameLocation":"3090:8:25","nodeType":"FunctionDefinition","parameters":{"id":4375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"order","nameLocation":"3124:5:25","nodeType":"VariableDeclaration","scope":4377,"src":"3099:30:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_calldata_ptr","typeString":"struct CrossChainOrder"},"typeName":{"id":4369,"nodeType":"UserDefinedTypeName","pathNode":{"id":4368,"name":"CrossChainOrder","nameLocations":["3099:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":4309,"src":"3099:15:25"},"referencedDeclaration":4309,"src":"3099:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_storage_ptr","typeString":"struct CrossChainOrder"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"signature","nameLocation":"3146:9:25","nodeType":"VariableDeclaration","scope":4377,"src":"3131:24:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4371,"name":"bytes","nodeType":"ElementaryTypeName","src":"3131:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4374,"mutability":"mutable","name":"fillerData","nameLocation":"3172:10:25","nodeType":"VariableDeclaration","scope":4377,"src":"3157:25:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4373,"name":"bytes","nodeType":"ElementaryTypeName","src":"3157:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3098:85:25"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[],"src":"3192:0:25"},"scope":4389,"src":"3081:112:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bf6d01d3","id":4388,"implemented":false,"kind":"function","modifiers":[],"name":"resolve","nameLocation":"3208:7:25","nodeType":"FunctionDefinition","parameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"order","nameLocation":"3241:5:25","nodeType":"VariableDeclaration","scope":4388,"src":"3216:30:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_calldata_ptr","typeString":"struct CrossChainOrder"},"typeName":{"id":4379,"nodeType":"UserDefinedTypeName","pathNode":{"id":4378,"name":"CrossChainOrder","nameLocations":["3216:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":4309,"src":"3216:15:25"},"referencedDeclaration":4309,"src":"3216:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_CrossChainOrder_$4309_storage_ptr","typeString":"struct CrossChainOrder"}},"visibility":"internal"},{"constant":false,"id":4382,"mutability":"mutable","name":"fillerData","nameLocation":"3263:10:25","nodeType":"VariableDeclaration","scope":4388,"src":"3248:25:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4381,"name":"bytes","nodeType":"ElementaryTypeName","src":"3248:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3215:59:25"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4388,"src":"3298:30:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ResolvedCrossChainOrder_$4344_memory_ptr","typeString":"struct ResolvedCrossChainOrder"},"typeName":{"id":4385,"nodeType":"UserDefinedTypeName","pathNode":{"id":4384,"name":"ResolvedCrossChainOrder","nameLocations":["3298:23:25"],"nodeType":"IdentifierPath","referencedDeclaration":4344,"src":"3298:23:25"},"referencedDeclaration":4344,"src":"3298:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_ResolvedCrossChainOrder_$4344_storage_ptr","typeString":"struct ResolvedCrossChainOrder"}},"visibility":"internal"}],"src":"3297:32:25"},"scope":4389,"src":"3199:131:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4390,"src":"3045:287:25","usedErrors":[],"usedEvents":[]}],"src":"32:3301:25"},"id":25}},"contracts":{"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol":{"OApp":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[],"name":"LzTokenUnavailable","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"NotEnoughNative","type":"error"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"OnlyEndpoint","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"name":"isComposeMsgSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"details":"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.","params":{"origin":"The origin information containing the source endpoint and sender address."},"returns":{"_0":"Whether the path has been initialized."}},"constructor":{"details":"Constructor to initialize the OApp with the provided endpoint and owner.","params":{"_delegate":"The delegate capable of making OApp configurations inside of the endpoint.","_endpoint":"The address of the LOCAL LayerZero endpoint."}},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"details":"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.","params":{"_sender":"The sender address."},"returns":{"_0":"isSender Is a valid sender."}},"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":{"details":"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.","params":{"_executor":"The address of the executor for the received message.","_extraData":"Additional arbitrary data provided by the corresponding executor.","_guid":"The unique identifier for the received LayerZero message.","_message":"The payload of the received message.","_origin":"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message."}},"nextNonce(uint32,bytes32)":{"details":"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.","returns":{"nonce":"The next nonce."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol implementation.","senderVersion":"The version of the OAppSender.sol implementation."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"OApp","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","endpoint()":"5e280f11","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"82413eac","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LzTokenUnavailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"NotEnoughNative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"OnlyEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isComposeMsgSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"details\":\"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.\",\"params\":{\"origin\":\"The origin information containing the source endpoint and sender address.\"},\"returns\":{\"_0\":\"Whether the path has been initialized.\"}},\"constructor\":{\"details\":\"Constructor to initialize the OApp with the provided endpoint and owner.\",\"params\":{\"_delegate\":\"The delegate capable of making OApp configurations inside of the endpoint.\",\"_endpoint\":\"The address of the LOCAL LayerZero endpoint.\"}},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"details\":\"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.\",\"params\":{\"_sender\":\"The sender address.\"},\"returns\":{\"_0\":\"isSender Is a valid sender.\"}},\"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)\":{\"details\":\"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.\",\"params\":{\"_executor\":\"The address of the executor for the received message.\",\"_extraData\":\"Additional arbitrary data provided by the corresponding executor.\",\"_guid\":\"The unique identifier for the received LayerZero message.\",\"_message\":\"The payload of the received message.\",\"_origin\":\"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.\"}},\"nextNonce(uint32,bytes32)\":{\"details\":\"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\",\"returns\":{\"nonce\":\"The next nonce.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol implementation.\",\"senderVersion\":\"The version of the OAppSender.sol implementation.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OApp\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"notice\":\"Checks if the path initialization is allowed based on the provided origin.\"},\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"notice\":\"Indicates whether an address is an approved composeMsg sender to the Endpoint.\"},\"nextNonce(uint32,bytes32)\":{\"notice\":\"Retrieves the next nonce for a given source endpoint and sender address.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol\":\"OApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\n// @dev Import the 'MessagingFee' and 'MessagingReceipt' so it's exposed to OApp implementers\\n// solhint-disable-next-line no-unused-import\\nimport { OAppSender, MessagingFee, MessagingReceipt } from \\\"./OAppSender.sol\\\";\\n// @dev Import the 'Origin' so it's exposed to OApp implementers\\n// solhint-disable-next-line no-unused-import\\nimport { OAppReceiver, Origin } from \\\"./OAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OApp\\n * @dev Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.\\n */\\nabstract contract OApp is OAppSender, OAppReceiver {\\n    /**\\n     * @dev Constructor to initialize the OApp with the provided endpoint and owner.\\n     * @param _endpoint The address of the LOCAL LayerZero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     */\\n    constructor(address _endpoint, address _delegate) OAppCore(_endpoint, _delegate) {}\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol implementation.\\n     * @return receiverVersion The version of the OAppReceiver.sol implementation.\\n     */\\n    function oAppVersion()\\n        public\\n        pure\\n        virtual\\n        override(OAppSender, OAppReceiver)\\n        returns (uint64 senderVersion, uint64 receiverVersion)\\n    {\\n        return (SENDER_VERSION, RECEIVER_VERSION);\\n    }\\n}\\n\",\"keccak256\":\"0xac362c4c291fad2f1511a968424b2e78a5ad502d1c867bd31da04be742aca8c5\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { IOAppReceiver, Origin } from \\\"./interfaces/IOAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppReceiver\\n * @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\\n */\\nabstract contract OAppReceiver is IOAppReceiver, OAppCore {\\n    // Custom error message for when the caller is not the registered endpoint/\\n    error OnlyEndpoint(address addr);\\n\\n    // @dev The version of the OAppReceiver implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant RECEIVER_VERSION = 2;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\\n     * ie. this is a RECEIVE only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (0, RECEIVER_VERSION);\\n    }\\n\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @dev _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @dev _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata /*_origin*/,\\n        bytes calldata /*_message*/,\\n        address _sender\\n    ) public view virtual returns (bool) {\\n        return _sender == address(this);\\n    }\\n\\n    /**\\n     * @notice Checks if the path initialization is allowed based on the provided origin.\\n     * @param origin The origin information containing the source endpoint and sender address.\\n     * @return Whether the path has been initialized.\\n     *\\n     * @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\\n     * @dev This defaults to assuming if a peer has been set, its initialized.\\n     * Can be overridden by the OApp if there is other logic to determine this.\\n     */\\n    function allowInitializePath(Origin calldata origin) public view virtual returns (bool) {\\n        return peers[origin.srcEid] == origin.sender;\\n    }\\n\\n    /**\\n     * @notice Retrieves the next nonce for a given source endpoint and sender address.\\n     * @dev _srcEid The source endpoint ID.\\n     * @dev _sender The sender address.\\n     * @return nonce The next nonce.\\n     *\\n     * @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\\n     * @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\\n     * @dev This is also enforced by the OApp.\\n     * @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\\n     */\\n    function nextNonce(uint32 /*_srcEid*/, bytes32 /*_sender*/) public view virtual returns (uint64 nonce) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Entry point for receiving messages or packets from the endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _guid The unique identifier for the received LayerZero message.\\n     * @param _message The payload of the received message.\\n     * @param _executor The address of the executor for the received message.\\n     * @param _extraData Additional arbitrary data provided by the corresponding executor.\\n     *\\n     * @dev Entry point for receiving msg/packet from the LayerZero endpoint.\\n     */\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) public payable virtual {\\n        // Ensures that only the endpoint can attempt to lzReceive() messages to this OApp.\\n        if (address(endpoint) != msg.sender) revert OnlyEndpoint(msg.sender);\\n\\n        // Ensure that the sender matches the expected peer for the source endpoint.\\n        if (_getPeerOrRevert(_origin.srcEid) != _origin.sender) revert OnlyPeer(_origin.srcEid, _origin.sender);\\n\\n        // Call the internal OApp implementation of lzReceive.\\n        _lzReceive(_origin, _guid, _message, _executor, _extraData);\\n    }\\n\\n    /**\\n     * @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation.\\n     */\\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal virtual;\\n}\\n\",\"keccak256\":\"0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroReceiver, Origin } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\\\";\\n\\ninterface IOAppReceiver is ILayerZeroReceiver {\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata _origin,\\n        bytes calldata _message,\\n        address _sender\\n    ) external view returns (bool isSender);\\n}\\n\",\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1327,"contract":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol:OApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":64,"contract":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol:OApp","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"notice":"Checks if the path initialization is allowed based on the provided origin."},"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"notice":"Indicates whether an address is an approved composeMsg sender to the Endpoint."},"nextNonce(uint32,bytes32)":{"notice":"Retrieves the next nonce for a given source endpoint and sender address."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol":{"OAppCore":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract implementing the IOAppCore interface with basic OApp configurations.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Constructor to initialize the OAppCore with the provided endpoint and delegate.The delegate typically should be set as the owner of the contract.","params":{"_delegate":"The delegate capable of making OApp configurations inside of the endpoint.","_endpoint":"The address of the LOCAL Layer Zero endpoint."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"endpoint":{"return":"The LayerZero endpoint as an interface.","returns":{"_0":"The LayerZero endpoint as an interface."}},"peers":{"params":{"_eid":"The endpoint ID."},"return":"peer The peer address (OApp instance) associated with the corresponding endpoint.","returns":{"peer":"The peer address (OApp instance) associated with the corresponding endpoint."}}},"title":"OAppCore","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"endpoint()":"5e280f11","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract implementing the IOAppCore interface with basic OApp configurations.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to initialize the OAppCore with the provided endpoint and delegate.The delegate typically should be set as the owner of the contract.\",\"params\":{\"_delegate\":\"The delegate capable of making OApp configurations inside of the endpoint.\",\"_endpoint\":\"The address of the LOCAL Layer Zero endpoint.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"endpoint\":{\"return\":\"The LayerZero endpoint as an interface.\",\"returns\":{\"_0\":\"The LayerZero endpoint as an interface.\"}},\"peers\":{\"params\":{\"_eid\":\"The endpoint ID.\"},\"return\":\"peer The peer address (OApp instance) associated with the corresponding endpoint.\",\"returns\":{\"peer\":\"The peer address (OApp instance) associated with the corresponding endpoint.\"}}},\"title\":\"OAppCore\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol\":\"OAppCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1327,"contract":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol:OAppCore","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":64,"contract":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol:OAppCore","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol":{"OAppReceiver":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"OnlyEndpoint","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"name":"isComposeMsgSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"details":"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.","params":{"origin":"The origin information containing the source endpoint and sender address."},"returns":{"_0":"Whether the path has been initialized."}},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"details":"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.","params":{"_sender":"The sender address."},"returns":{"_0":"isSender Is a valid sender."}},"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":{"details":"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.","params":{"_executor":"The address of the executor for the received message.","_extraData":"Additional arbitrary data provided by the corresponding executor.","_guid":"The unique identifier for the received LayerZero message.","_message":"The payload of the received message.","_origin":"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message."}},"nextNonce(uint32,bytes32)":{"details":"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.","returns":{"nonce":"The next nonce."}},"oAppVersion()":{"details":"Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented. ie. this is a RECEIVE only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.","returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"OAppReceiver","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","endpoint()":"5e280f11","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"82413eac","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"OnlyEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isComposeMsgSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"details\":\"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.\",\"params\":{\"origin\":\"The origin information containing the source endpoint and sender address.\"},\"returns\":{\"_0\":\"Whether the path has been initialized.\"}},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"details\":\"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.\",\"params\":{\"_sender\":\"The sender address.\"},\"returns\":{\"_0\":\"isSender Is a valid sender.\"}},\"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)\":{\"details\":\"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.\",\"params\":{\"_executor\":\"The address of the executor for the received message.\",\"_extraData\":\"Additional arbitrary data provided by the corresponding executor.\",\"_guid\":\"The unique identifier for the received LayerZero message.\",\"_message\":\"The payload of the received message.\",\"_origin\":\"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.\"}},\"nextNonce(uint32,bytes32)\":{\"details\":\"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\",\"returns\":{\"nonce\":\"The next nonce.\"}},\"oAppVersion()\":{\"details\":\"Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented. ie. this is a RECEIVE only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\",\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OAppReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"notice\":\"Checks if the path initialization is allowed based on the provided origin.\"},\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"notice\":\"Indicates whether an address is an approved composeMsg sender to the Endpoint.\"},\"nextNonce(uint32,bytes32)\":{\"notice\":\"Retrieves the next nonce for a given source endpoint and sender address.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol\":\"OAppReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { IOAppReceiver, Origin } from \\\"./interfaces/IOAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppReceiver\\n * @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\\n */\\nabstract contract OAppReceiver is IOAppReceiver, OAppCore {\\n    // Custom error message for when the caller is not the registered endpoint/\\n    error OnlyEndpoint(address addr);\\n\\n    // @dev The version of the OAppReceiver implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant RECEIVER_VERSION = 2;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\\n     * ie. this is a RECEIVE only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (0, RECEIVER_VERSION);\\n    }\\n\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @dev _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @dev _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata /*_origin*/,\\n        bytes calldata /*_message*/,\\n        address _sender\\n    ) public view virtual returns (bool) {\\n        return _sender == address(this);\\n    }\\n\\n    /**\\n     * @notice Checks if the path initialization is allowed based on the provided origin.\\n     * @param origin The origin information containing the source endpoint and sender address.\\n     * @return Whether the path has been initialized.\\n     *\\n     * @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\\n     * @dev This defaults to assuming if a peer has been set, its initialized.\\n     * Can be overridden by the OApp if there is other logic to determine this.\\n     */\\n    function allowInitializePath(Origin calldata origin) public view virtual returns (bool) {\\n        return peers[origin.srcEid] == origin.sender;\\n    }\\n\\n    /**\\n     * @notice Retrieves the next nonce for a given source endpoint and sender address.\\n     * @dev _srcEid The source endpoint ID.\\n     * @dev _sender The sender address.\\n     * @return nonce The next nonce.\\n     *\\n     * @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\\n     * @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\\n     * @dev This is also enforced by the OApp.\\n     * @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\\n     */\\n    function nextNonce(uint32 /*_srcEid*/, bytes32 /*_sender*/) public view virtual returns (uint64 nonce) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Entry point for receiving messages or packets from the endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _guid The unique identifier for the received LayerZero message.\\n     * @param _message The payload of the received message.\\n     * @param _executor The address of the executor for the received message.\\n     * @param _extraData Additional arbitrary data provided by the corresponding executor.\\n     *\\n     * @dev Entry point for receiving msg/packet from the LayerZero endpoint.\\n     */\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) public payable virtual {\\n        // Ensures that only the endpoint can attempt to lzReceive() messages to this OApp.\\n        if (address(endpoint) != msg.sender) revert OnlyEndpoint(msg.sender);\\n\\n        // Ensure that the sender matches the expected peer for the source endpoint.\\n        if (_getPeerOrRevert(_origin.srcEid) != _origin.sender) revert OnlyPeer(_origin.srcEid, _origin.sender);\\n\\n        // Call the internal OApp implementation of lzReceive.\\n        _lzReceive(_origin, _guid, _message, _executor, _extraData);\\n    }\\n\\n    /**\\n     * @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation.\\n     */\\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal virtual;\\n}\\n\",\"keccak256\":\"0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroReceiver, Origin } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\\\";\\n\\ninterface IOAppReceiver is ILayerZeroReceiver {\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata _origin,\\n        bytes calldata _message,\\n        address _sender\\n    ) external view returns (bool isSender);\\n}\\n\",\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1327,"contract":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol:OAppReceiver","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":64,"contract":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol:OAppReceiver","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"notice":"Checks if the path initialization is allowed based on the provided origin."},"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"notice":"Indicates whether an address is an approved composeMsg sender to the Endpoint."},"nextNonce(uint32,bytes32)":{"notice":"Retrieves the next nonce for a given source endpoint and sender address."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol":{"OAppSender":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[],"name":"LzTokenUnavailable","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"NotEnoughNative","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"oAppVersion()":{"details":"Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented. ie. this is a SEND only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions","returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"title":"OAppSender","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"endpoint()":"5e280f11","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","renounceOwnership()":"715018a6","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LzTokenUnavailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"NotEnoughNative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"oAppVersion()\":{\"details\":\"Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented. ie. this is a SEND only OApp.If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\",\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OAppSender\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol\":\"OAppSender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1327,"contract":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol:OAppSender","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":64,"contract":"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol:OAppSender","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol":{"IOAppCore":{"abi":[{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"iEndpoint","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"endpoint()":{"returns":{"iEndpoint":"The LayerZero endpoint as an interface."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol contract.","senderVersion":"The version of the OAppSender.sol contract."}},"peers(uint32)":{"params":{"_eid":"The endpoint ID."},"returns":{"peer":"The peer address (OApp instance) associated with the corresponding endpoint."}},"setDelegate(address)":{"params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}}},"title":"IOAppCore","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"endpoint()":"5e280f11","oAppVersion()":"17442b70","peers(uint32)":"bb0b6a53","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"iEndpoint\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"endpoint()\":{\"returns\":{\"iEndpoint\":\"The LayerZero endpoint as an interface.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol contract.\",\"senderVersion\":\"The version of the OAppSender.sol contract.\"}},\"peers(uint32)\":{\"params\":{\"_eid\":\"The endpoint ID.\"},\"returns\":{\"peer\":\"The peer address (OApp instance) associated with the corresponding endpoint.\"}},\"setDelegate(address)\":{\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}}},\"title\":\"IOAppCore\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp Core.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol\":\"IOAppCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp Core."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol":{"IOAppReceiver":{"abi":[{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"name":"isComposeMsgSender","outputs":[{"internalType":"bool","name":"isSender","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"details":"Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.The default sender IS the OAppReceiver implementer.","params":{"_message":"The lzReceive payload.","_origin":"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.","_sender":"The sender address."},"returns":{"isSender":"Is a valid sender."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"82413eac","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isComposeMsgSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSender\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"details\":\"Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.The default sender IS the OAppReceiver implementer.\",\"params\":{\"_message\":\"The lzReceive payload.\",\"_origin\":\"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.\",\"_sender\":\"The sender address.\"},\"returns\":{\"isSender\":\"Is a valid sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"notice\":\"Indicates whether an address is an approved composeMsg sender to the Endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol\":\"IOAppReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroReceiver, Origin } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\\\";\\n\\ninterface IOAppReceiver is ILayerZeroReceiver {\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata _origin,\\n        bytes calldata _message,\\n        address _sender\\n    ) external view returns (bool isSender);\\n}\\n\",\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"notice":"Indicates whether an address is an approved composeMsg sender to the Endpoint."}},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol":{"ILayerZeroEndpointV2":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"}],"name":"ComposeDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"ComposeSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"DefaultReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultSendLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"delegate","type":"address"}],"name":"DelegateSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"}],"name":"InboundNonceSkipped","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"LibraryRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"gas","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"LzComposeAlert","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"indexed":false,"internalType":"struct Origin","name":"origin","type":"tuple"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"gas","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"LzReceiveAlert","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"token","type":"address"}],"name":"LzTokenSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketBurnt","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"indexed":false,"internalType":"struct Origin","name":"origin","type":"tuple"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"}],"name":"PacketDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketNilified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"encodedPayload","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"options","type":"bytes"},{"indexed":false,"internalType":"address","name":"sendLibrary","type":"address"}],"name":"PacketSent","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"indexed":false,"internalType":"struct Origin","name":"origin","type":"tuple"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"ReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"timeout","type":"uint256"}],"name":"ReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"SendLibrarySet","type":"event"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"clear","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"}],"name":"composeQueue","outputs":[{"internalType":"bytes32","name":"messageHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultSendLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eid","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"uint32","name":"_configType","type":"uint32"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"config","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getReceiveLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"bool","name":"isDefault","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRegisteredLibraries","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSendContext","outputs":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getSendLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"inboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"inboundPayloadHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"initializable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isDefaultSendLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"isRegisteredLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isSupportedEid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"}],"name":"isValidReceiveLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"lazyInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"lzToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nativeToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"nextGuid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"nilify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"outboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"bytes32","name":"receiver","type":"bytes32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"options","type":"bytes"},{"internalType":"bool","name":"payInLzToken","type":"bool"}],"internalType":"struct MessagingParams","name":"_params","type":"tuple"},{"internalType":"address","name":"_sender","type":"address"}],"name":"quote","outputs":[{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"receiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"registerLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"bytes32","name":"receiver","type":"bytes32"},{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"options","type":"bytes"},{"internalType":"bool","name":"payInLzToken","type":"bool"}],"internalType":"struct MessagingParams","name":"_params","type":"tuple"},{"internalType":"address","name":"_refundAddress","type":"address"}],"name":"send","outputs":[{"components":[{"internalType":"bytes32","name":"guid","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"fee","type":"tuple"}],"internalType":"struct MessagingReceipt","name":"","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"sendCompose","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"components":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"uint32","name":"configType","type":"uint32"},{"internalType":"bytes","name":"config","type":"bytes"}],"internalType":"struct SetConfigParam[]","name":"_params","type":"tuple[]"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setDefaultReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setDefaultReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setDefaultSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_lzToken","type":"address"}],"name":"setLzToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"skip","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"}],"name":"verifiable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"verify","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(address,uint32,bytes32,uint64,bytes32)":"40f80683","clear(address,(uint32,bytes32,uint64),bytes32,bytes)":"2a56c1b0","composeQueue(address,address,bytes32,uint16)":"35d330b0","defaultReceiveLibrary(uint32)":"6f50a803","defaultReceiveLibraryTimeout(uint32)":"6e83f5bb","defaultSendLibrary(uint32)":"f64be4c7","eid()":"416ecebf","getConfig(address,address,uint32,uint32)":"2b3197b9","getReceiveLibrary(address,uint32)":"402f8468","getRegisteredLibraries()":"9132e5c3","getSendContext()":"14f651a9","getSendLibrary(address,uint32)":"b96a277f","inboundNonce(address,uint32,bytes32)":"a0dd43fc","inboundPayloadHash(address,uint32,bytes32,uint64)":"c9fc7bcd","initializable((uint32,bytes32,uint64),address)":"861e1ca5","isDefaultSendLibrary(address,uint32)":"dc93c8a2","isRegisteredLibrary(address)":"dc706a62","isSendingMessage()":"79624ca9","isSupportedEid(uint32)":"6750cd4c","isValidReceiveLibrary(address,uint32,address)":"9d7f9775","lazyInboundNonce(address,uint32,bytes32)":"5b17bb70","lzCompose(address,address,bytes32,uint16,bytes,bytes)":"91d20fa1","lzReceive((uint32,bytes32,uint64),address,bytes32,bytes,bytes)":"0c0c389e","lzToken()":"e4fe1d94","nativeToken()":"e1758bd8","nextGuid(address,uint32,bytes32)":"aafe5e07","nilify(address,uint32,bytes32,uint64,bytes32)":"2e80fbf3","outboundNonce(address,uint32,bytes32)":"9c6d7340","quote((uint32,bytes32,bytes,bytes,bool),address)":"ddc28c58","receiveLibraryTimeout(address,uint32)":"ef667aa1","registerLibrary(address)":"e8964e81","send((uint32,bytes32,bytes,bytes,bool),address)":"2637a450","sendCompose(address,bytes32,uint16,bytes)":"7cb59012","setConfig(address,address,(uint32,uint32,bytes)[])":"6dbd9f90","setDefaultReceiveLibrary(uint32,address,uint256)":"a718531b","setDefaultReceiveLibraryTimeout(uint32,address,uint256)":"d4b4ec8f","setDefaultSendLibrary(uint32,address)":"aafea312","setDelegate(address)":"ca5eb5e1","setLzToken(address)":"c28e0eed","setReceiveLibrary(address,uint32,address,uint256)":"6a14d715","setReceiveLibraryTimeout(address,uint32,address,uint256)":"183c834f","setSendLibrary(address,uint32,address)":"9535ff30","skip(address,uint32,bytes32,uint64)":"d70b8902","verifiable((uint32,bytes32,uint64),address)":"c9a54a99","verify((uint32,bytes32,uint64),address,bytes32)":"a825d747"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"}],\"name\":\"ComposeDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ComposeSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DefaultReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultSendLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"DelegateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"InboundNonceSkipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"LibraryRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzComposeAlert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzReceiveAlert\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LzTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketBurnt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"PacketDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketNilified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedPayload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sendLibrary\",\"type\":\"address\"}],\"name\":\"PacketSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"ReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"ReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"SendLibrarySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"clear\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"}],\"name\":\"composeQueue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eid\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredLibraries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSendContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"inboundPayloadHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"initializable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isDefaultSendLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isRegisteredLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isSupportedEid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isValidReceiveLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"lazyInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lzToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"nextGuid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"nilify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"payInLzToken\",\"type\":\"bool\"}],\"internalType\":\"struct MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"receiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"registerLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"receiver\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"payInLzToken\",\"type\":\"bool\"}],\"internalType\":\"struct MessagingParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_refundAddress\",\"type\":\"address\"}],\"name\":\"send\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct MessagingReceipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"sendCompose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"configType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"internalType\":\"struct SetConfigParam[]\",\"name\":\"_params\",\"type\":\"tuple[]\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setDefaultSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lzToken\",\"type\":\"address\"}],\"name\":\"setLzToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"verifiable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setSendLibrary(address,uint32,address)\":{\"notice\":\"------------------- OApp interfaces -------------------\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":\"ILayerZeroEndpointV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setSendLibrary(address,uint32,address)":{"notice":"------------------- OApp interfaces -------------------"}},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol":{"ILayerZeroReceiver":{"abi":[{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":\"ILayerZeroReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol":{"IMessageLibManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"DefaultReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"DefaultSendLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"LibraryRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"ReceiveLibrarySet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"oldLib","type":"address"},{"indexed":false,"internalType":"uint256","name":"timeout","type":"uint256"}],"name":"ReceiveLibraryTimeoutSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"address","name":"newLib","type":"address"}],"name":"SendLibrarySet","type":"event"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultReceiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"defaultSendLibrary","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"uint32","name":"_configType","type":"uint32"}],"name":"getConfig","outputs":[{"internalType":"bytes","name":"config","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getReceiveLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"bool","name":"isDefault","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRegisteredLibraries","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"getSendLibrary","outputs":[{"internalType":"address","name":"lib","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isDefaultSendLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"isRegisteredLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"isSupportedEid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"}],"name":"isValidReceiveLibrary","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"}],"name":"receiveLibraryTimeout","outputs":[{"internalType":"address","name":"lib","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lib","type":"address"}],"name":"registerLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"address","name":"_lib","type":"address"},{"components":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"uint32","name":"configType","type":"uint32"},{"internalType":"bytes","name":"config","type":"bytes"}],"internalType":"struct SetConfigParam[]","name":"_params","type":"tuple[]"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setDefaultReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setDefaultReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setDefaultSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"},{"internalType":"uint256","name":"_gracePeriod","type":"uint256"}],"name":"setReceiveLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_lib","type":"address"},{"internalType":"uint256","name":"_expiry","type":"uint256"}],"name":"setReceiveLibraryTimeout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"address","name":"_newLib","type":"address"}],"name":"setSendLibrary","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"defaultReceiveLibrary(uint32)":"6f50a803","defaultReceiveLibraryTimeout(uint32)":"6e83f5bb","defaultSendLibrary(uint32)":"f64be4c7","getConfig(address,address,uint32,uint32)":"2b3197b9","getReceiveLibrary(address,uint32)":"402f8468","getRegisteredLibraries()":"9132e5c3","getSendLibrary(address,uint32)":"b96a277f","isDefaultSendLibrary(address,uint32)":"dc93c8a2","isRegisteredLibrary(address)":"dc706a62","isSupportedEid(uint32)":"6750cd4c","isValidReceiveLibrary(address,uint32,address)":"9d7f9775","receiveLibraryTimeout(address,uint32)":"ef667aa1","registerLibrary(address)":"e8964e81","setConfig(address,address,(uint32,uint32,bytes)[])":"6dbd9f90","setDefaultReceiveLibrary(uint32,address,uint256)":"a718531b","setDefaultReceiveLibraryTimeout(uint32,address,uint256)":"d4b4ec8f","setDefaultSendLibrary(uint32,address)":"aafea312","setReceiveLibrary(address,uint32,address,uint256)":"6a14d715","setReceiveLibraryTimeout(address,uint32,address,uint256)":"183c834f","setSendLibrary(address,uint32,address)":"9535ff30"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DefaultReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"DefaultSendLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"LibraryRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"ReceiveLibrarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLib\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeout\",\"type\":\"uint256\"}],\"name\":\"ReceiveLibraryTimeoutSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLib\",\"type\":\"address\"}],\"name\":\"SendLibrarySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultReceiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"defaultSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_configType\",\"type\":\"uint32\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getReceiveLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDefault\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredLibraries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"getSendLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isDefaultSendLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isRegisteredLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"isSupportedEid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"isValidReceiveLibrary\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"}],\"name\":\"receiveLibraryTimeout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"}],\"name\":\"registerLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"configType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"}],\"internalType\":\"struct SetConfigParam[]\",\"name\":\"_params\",\"type\":\"tuple[]\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setDefaultReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setDefaultSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gracePeriod\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"setReceiveLibraryTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_newLib\",\"type\":\"address\"}],\"name\":\"setSendLibrary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setSendLibrary(address,uint32,address)\":{\"notice\":\"------------------- OApp interfaces -------------------\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":\"IMessageLibManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"setSendLibrary(address,uint32,address)":{"notice":"------------------- OApp interfaces -------------------"}},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol":{"IMessagingChannel":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"}],"name":"InboundNonceSkipped","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketBurnt","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"srcEid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"sender","type":"bytes32"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"uint64","name":"nonce","type":"uint64"},{"indexed":false,"internalType":"bytes32","name":"payloadHash","type":"bytes32"}],"name":"PacketNilified","type":"event"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eid","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"inboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"inboundPayloadHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"}],"name":"lazyInboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"nextGuid","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"},{"internalType":"bytes32","name":"_payloadHash","type":"bytes32"}],"name":"nilify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"bytes32","name":"_receiver","type":"bytes32"}],"name":"outboundNonce","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_oapp","type":"address"},{"internalType":"uint32","name":"_srcEid","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"uint64","name":"_nonce","type":"uint64"}],"name":"skip","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(address,uint32,bytes32,uint64,bytes32)":"40f80683","eid()":"416ecebf","inboundNonce(address,uint32,bytes32)":"a0dd43fc","inboundPayloadHash(address,uint32,bytes32,uint64)":"c9fc7bcd","lazyInboundNonce(address,uint32,bytes32)":"5b17bb70","nextGuid(address,uint32,bytes32)":"aafe5e07","nilify(address,uint32,bytes32,uint64,bytes32)":"2e80fbf3","outboundNonce(address,uint32,bytes32)":"9c6d7340","skip(address,uint32,bytes32,uint64)":"d70b8902"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"name\":\"InboundNonceSkipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketBurnt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"payloadHash\",\"type\":\"bytes32\"}],\"name\":\"PacketNilified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eid\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"inboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"inboundPayloadHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"}],\"name\":\"lazyInboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"nextGuid\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"_payloadHash\",\"type\":\"bytes32\"}],\"name\":\"nilify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_receiver\",\"type\":\"bytes32\"}],\"name\":\"outboundNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oapp\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_nonce\",\"type\":\"uint64\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":\"IMessagingChannel\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol":{"IMessagingComposer":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"}],"name":"ComposeDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"ComposeSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"address","name":"executor","type":"address"},{"indexed":false,"internalType":"bytes32","name":"guid","type":"bytes32"},{"indexed":false,"internalType":"uint16","name":"index","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"gas","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"reason","type":"bytes"}],"name":"LzComposeAlert","type":"event"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"}],"name":"composeQueue","outputs":[{"internalType":"bytes32","name":"messageHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzCompose","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"uint16","name":"_index","type":"uint16"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"sendCompose","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"composeQueue(address,address,bytes32,uint16)":"35d330b0","lzCompose(address,address,bytes32,uint16,bytes,bytes)":"91d20fa1","sendCompose(address,bytes32,uint16,bytes)":"7cb59012"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"}],\"name\":\"ComposeDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"ComposeSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"index\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"LzComposeAlert\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"}],\"name\":\"composeQueue\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzCompose\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"_index\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"sendCompose\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":\"IMessagingComposer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol":{"IMessagingContext":{"abi":[{"inputs":[],"name":"getSendContext","outputs":[{"internalType":"uint32","name":"dstEid","type":"uint32"},{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSendingMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getSendContext()":"14f651a9","isSendingMessage()":"79624ca9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getSendContext\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"dstEid\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSendingMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":\"IMessagingContext\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1327,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","errors":{"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)":[{"details":"Indicates a failed `decreaseAllowance` request."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC20 token failed."}]},"kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ca33cb6246e30444f0da91b82d74bc6869ff3ba6fe725e32c02df8f3bc9e0d0f64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA CALLER 0xCB PUSH3 0x46E304 PREVRANDAO CREATE 0xDA SWAP2 0xB8 0x2D PUSH21 0xBC6869FF3BA6FE725E32C02DF8F3BC9E0D0F64736F PUSH13 0x63430008160033000000000000 ","sourceMap":"751:5018:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ca33cb6246e30444f0da91b82d74bc6869ff3ba6fe725e32c02df8f3bc9e0d0f64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA CALLER 0xCB PUSH3 0x46E304 PREVRANDAO CREATE 0xDA SWAP2 0xB8 0x2D PUSH21 0xBC6869FF3BA6FE725E32C02DF8F3BC9E0D0F64736F PUSH13 0x63430008160033000000000000 ","sourceMap":"751:5018:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220195f9d9223e29b7d07593b032d7ca4d36543ca8cc3b93039772852982b57875c64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH0 SWAP14 SWAP3 0x23 0xE2 SWAP12 PUSH30 0x7593B032D7CA4D36543CA8CC3B93039772852982B57875C64736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"195:6066:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220195f9d9223e29b7d07593b032d7ca4d36543ca8cc3b93039772852982b57875c64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH0 SWAP14 SWAP3 0x23 0xE2 SWAP12 PUSH30 0x7593B032D7CA4D36543CA8CC3B93039772852982B57875C64736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"195:6066:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"devdoc":{"details":"String operations.","errors":{"StringsInsufficientHexLength(uint256,uint256)":[{"details":"The `value` string doesn't fit in the specified `length`."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb4914abe7f6eeba5e4ddbf3206858fb8294ce03aaecc1901f0a45a565423f9f64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0x49 EQ 0xAB 0xE7 0xF6 0xEE 0xBA 0x5E 0x4D 0xDB RETURN KECCAK256 PUSH9 0x58FB8294CE03AAECC1 SWAP1 0x1F EXP GASLIMIT 0xA5 PUSH6 0x423F9F64736F PUSH13 0x63430008160033000000000000 ","sourceMap":"251:2847:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb4914abe7f6eeba5e4ddbf3206858fb8294ce03aaecc1901f0a45a565423f9f64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0x49 EQ 0xAB 0xE7 0xF6 0xEE 0xBA 0x5E 0x4D 0xDB RETURN KECCAK256 PUSH9 0x58FB8294CE03AAECC1 SWAP1 0x1F EXP GASLIMIT 0xA5 PUSH6 0x423F9F64736F PUSH13 0x63430008160033000000000000 ","sourceMap":"251:2847:18:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite","toStringSigned(int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","errors":{"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c93ed5abf2325f94c3504b99d7060b82f85abe7c01b4413d9c4819389ff224964736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP4 0xED GAS 0xBF 0x23 0x25 0xF9 0x4C CALLDATALOAD DIV 0xB9 SWAP14 PUSH17 0x60B82F85ABE7C01B4413D9C4819389FF22 0x49 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"344:7386:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7386:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200c93ed5abf2325f94c3504b99d7060b82f85abe7c01b4413d9c4819389ff224964736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP4 0xED GAS 0xBF 0x23 0x25 0xF9 0x4C CALLDATALOAD DIV 0xB9 SWAP14 PUSH17 0x60B82F85ABE7C01B4413D9C4819389FF22 0x49 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"344:7386:19:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"_throwError(enum ECDSA.RecoverError,bytes32)":"infinite","recover(bytes32,bytes memory)":"infinite","recover(bytes32,bytes32,bytes32)":"infinite","recover(bytes32,uint8,bytes32,bytes32)":"infinite","tryRecover(bytes32,bytes memory)":"infinite","tryRecover(bytes32,bytes32,bytes32)":"infinite","tryRecover(bytes32,uint8,bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     */\\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError, bytes32) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"devdoc":{"details":"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae276c3a7bb8fe4df92f84c1f034b19969b7e8074a9557b7814a33d02e3840d64736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE2 PUSH23 0xC3A7BB8FE4DF92F84C1F034B19969B7E8074A9557B7814 LOG3 RETURNDATASIZE MUL 0xE3 DUP5 0xD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"521:3235:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae276c3a7bb8fe4df92f84c1f034b19969b7e8074a9557b7814a33d02e3840d64736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE2 PUSH23 0xC3A7BB8FE4DF92F84C1F034B19969B7E8074A9557B7814 LOG3 RETURNDATASIZE MUL 0xE3 DUP5 0xD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"521:3235:20:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toDataWithIntendedValidatorHash(address,bytes memory)":"infinite","toEthSignedMessageHash(bytes memory)":"infinite","toEthSignedMessageHash(bytes32)":"infinite","toTypedDataHash(bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Strings} from \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\\n *\\n * The library provides methods for generating a hash of a message that conforms to the\\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\\n * specifications.\\n */\\nlibrary MessageHashUtils {\\n    /**\\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\\n     * `0x45` (`personal_sign` messages).\\n     *\\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\\n     * `\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\"` and hashing the result. It corresponds with the\\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\\n     *\\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\\n     * keccak256, although any bytes32 value can be safely used because the final digest will\\n     * be re-hashed.\\n     *\\n     * See {ECDSA-recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\") // 32 is the bytes-length of messageHash\\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\\n     * `0x45` (`personal_sign` messages).\\n     *\\n     * The digest is calculated by prefixing an arbitrary `message` with\\n     * `\\\"\\\\x19Ethereum Signed Message:\\\\n\\\" + len(message)` and hashing the result. It corresponds with the\\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\\n     *\\n     * See {ECDSA-recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\\n        return\\n            keccak256(bytes.concat(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", bytes(Strings.toString(message.length)), message));\\n    }\\n\\n    /**\\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\\n     * `0x00` (data with intended validator).\\n     *\\n     * The digest is calculated by prefixing an arbitrary `data` with `\\\"\\\\x19\\\\x00\\\"` and the intended\\n     * `validator` address. Then hashing the result.\\n     *\\n     * See {ECDSA-recover}.\\n     */\\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(hex\\\"19_00\\\", validator, data));\\n    }\\n\\n    /**\\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\\n     *\\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\\n     * `\\\\x19\\\\x01` and hashing the result. It corresponds to the hash signed by the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\\n     *\\n     * See {ECDSA-recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, hex\\\"19_01\\\")\\n            mstore(add(ptr, 0x02), domainSeparator)\\n            mstore(add(ptr, 0x22), structHash)\\n            digest := keccak256(ptr, 0x42)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","errors":{"MathOverflowedMulDiv()":[{"details":"Muldiv operation overflow."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324fcae33b24d21ae3a3906644907ae0f151a6f85cb15a1dbcc8623d0deceb0364736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4F 0xCA 0xE3 EXTCODESIZE 0x24 0xD2 BYTE 0xE3 LOG3 SWAP1 PUSH7 0x44907AE0F151A6 0xF8 0x5C 0xB1 GAS SAR 0xBC 0xC8 PUSH3 0x3D0DEC 0xEB SUB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"203:14914:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220324fcae33b24d21ae3a3906644907ae0f151a6f85cb15a1dbcc8623d0deceb0364736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0x4F 0xCA 0xE3 EXTCODESIZE 0x24 0xD2 BYTE 0xE3 LOG3 SWAP1 PUSH7 0x44907AE0F151A6 0xF8 0x5C 0xB1 GAS SAR 0xBC 0xC8 PUSH3 0x3D0DEC 0xEB SUB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"203:14914:21:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite","unsignedRoundsUp(enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202910780e4ad318b06fb6b73574673c7fe5839427085b878ead8eec84c6345e0264736f6c63430008160033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 LT PUSH25 0xE4AD318B06FB6B73574673C7FE5839427085B878EAD8EEC84 0xC6 CALLVALUE 0x5E MUL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"216:1047:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202910780e4ad318b06fb6b73574673c7fe5839427085b878ead8eec84c6345e0264736f6c63430008160033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 LT PUSH25 0xE4AD318B06FB6B73574673C7FE5839427085B878EAD8EEC84 0xC6 CALLVALUE 0x5E MUL PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"216:1047:22:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MyOApp.sol":{"MyOApp":{"abi":[{"inputs":[{"internalType":"address","name":"_endpoint","type":"address"},{"internalType":"address","name":"_delegate","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidDelegate","type":"error"},{"inputs":[],"name":"InvalidEndpointCall","type":"error"},{"inputs":[],"name":"LzTokenUnavailable","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"NoPeer","type":"error"},{"inputs":[{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"NotEnoughNative","type":"error"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"OnlyEndpoint","type":"error"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"}],"name":"OnlyPeer","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"eid","type":"uint32"},{"indexed":false,"internalType":"bytes32","name":"peer","type":"bytes32"}],"name":"PeerSet","type":"event"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"origin","type":"tuple"}],"name":"allowInitializePath","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"data","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endpoint","outputs":[{"internalType":"contract ILayerZeroEndpointV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"","type":"tuple"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"name":"isComposeMsgSender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"srcEid","type":"uint32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"}],"internalType":"struct Origin","name":"_origin","type":"tuple"},{"internalType":"bytes32","name":"_guid","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"address","name":"_executor","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"lzReceive","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"nextNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oAppVersion","outputs":[{"internalType":"uint64","name":"senderVersion","type":"uint64"},{"internalType":"uint64","name":"receiverVersion","type":"uint64"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"eid","type":"uint32"}],"name":"peers","outputs":[{"internalType":"bytes32","name":"peer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"string","name":"_message","type":"string"},{"internalType":"bytes","name":"_options","type":"bytes"},{"internalType":"bool","name":"_payInLzToken","type":"bool"}],"name":"quote","outputs":[{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"fee","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_dstEid","type":"uint32"},{"internalType":"string","name":"_message","type":"string"},{"internalType":"bytes","name":"_options","type":"bytes"}],"name":"send","outputs":[{"components":[{"internalType":"bytes32","name":"guid","type":"bytes32"},{"internalType":"uint64","name":"nonce","type":"uint64"},{"components":[{"internalType":"uint256","name":"nativeFee","type":"uint256"},{"internalType":"uint256","name":"lzTokenFee","type":"uint256"}],"internalType":"struct MessagingFee","name":"fee","type":"tuple"}],"internalType":"struct MessagingReceipt","name":"receipt","type":"tuple"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_delegate","type":"address"}],"name":"setDelegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_eid","type":"uint32"},{"internalType":"bytes32","name":"_peer","type":"bytes32"}],"name":"setPeer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC20 token failed."}]},"kind":"dev","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"details":"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.","params":{"origin":"The origin information containing the source endpoint and sender address."},"returns":{"_0":"Whether the path has been initialized."}},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"details":"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.","params":{"_sender":"The sender address."},"returns":{"_0":"isSender Is a valid sender."}},"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":{"details":"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.","params":{"_executor":"The address of the executor for the received message.","_extraData":"Additional arbitrary data provided by the corresponding executor.","_guid":"The unique identifier for the received LayerZero message.","_message":"The payload of the received message.","_origin":"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message."}},"nextNonce(uint32,bytes32)":{"details":"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.","returns":{"nonce":"The next nonce."}},"oAppVersion()":{"returns":{"receiverVersion":"The version of the OAppReceiver.sol implementation.","senderVersion":"The version of the OAppSender.sol implementation."}},"owner()":{"details":"Returns the address of the current owner."},"quote(uint32,string,bytes,bool)":{"params":{"_dstEid":"Destination chain's endpoint ID.","_message":"The message.","_options":"Message execution options (e.g., for sending gas to destination).","_payInLzToken":"Whether to return fee in ZRO token."},"returns":{"fee":"A `MessagingFee` struct containing the calculated gas fee in either the native token or ZRO token."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"send(uint32,string,bytes)":{"details":"Encodes the message as bytes and sends it using the `_lzSend` internal function.","params":{"_dstEid":"The endpoint ID of the destination chain.","_message":"The message string to be sent.","_options":"Additional options for message execution."},"returns":{"receipt":"A `MessagingReceipt` struct containing details of the message sent."}},"setDelegate(address)":{"details":"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.","params":{"_delegate":"The address of the delegate to be set."}},"setPeer(uint32,bytes32)":{"details":"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.","params":{"_eid":"The endpoint ID.","_peer":"The address of the peer to be associated with the corresponding endpoint."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1369":{"entryPoint":null,"id":1369,"parameterSlots":1,"returnSlots":0},"@_28":{"entryPoint":null,"id":28,"parameterSlots":2,"returnSlots":0},"@_4016":{"entryPoint":null,"id":4016,"parameterSlots":2,"returnSlots":0},"@_95":{"entryPoint":null,"id":95,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_1465":{"entryPoint":330,"id":1465,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":810,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":492,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":577,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":432,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":410,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3411:26","nodeType":"YulBlock","src":"0:3411:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"46:95:26","nodeType":"YulBlock","src":"46:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:26","nodeType":"YulLiteral","src":"63:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:26","nodeType":"YulLiteral","src":"70:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:26","nodeType":"YulLiteral","src":"75:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:26","nodeType":"YulIdentifier","src":"66:3:26"},"nativeSrc":"66:20:26","nodeType":"YulFunctionCall","src":"66:20:26"}],"functionName":{"name":"mstore","nativeSrc":"56:6:26","nodeType":"YulIdentifier","src":"56:6:26"},"nativeSrc":"56:31:26","nodeType":"YulFunctionCall","src":"56:31:26"},"nativeSrc":"56:31:26","nodeType":"YulExpressionStatement","src":"56:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:26","nodeType":"YulLiteral","src":"103:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:26","nodeType":"YulLiteral","src":"106:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:26","nodeType":"YulIdentifier","src":"96:6:26"},"nativeSrc":"96:15:26","nodeType":"YulFunctionCall","src":"96:15:26"},"nativeSrc":"96:15:26","nodeType":"YulExpressionStatement","src":"96:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:26","nodeType":"YulLiteral","src":"127:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:26","nodeType":"YulLiteral","src":"130:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:26","nodeType":"YulIdentifier","src":"120:6:26"},"nativeSrc":"120:15:26","nodeType":"YulFunctionCall","src":"120:15:26"},"nativeSrc":"120:15:26","nodeType":"YulExpressionStatement","src":"120:15:26"}]},"name":"panic_error_0x41","nativeSrc":"14:127:26","nodeType":"YulFunctionDefinition","src":"14:127:26"},{"body":{"nativeSrc":"201:325:26","nodeType":"YulBlock","src":"201:325:26","statements":[{"nativeSrc":"211:22:26","nodeType":"YulAssignment","src":"211:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"225:1:26","nodeType":"YulLiteral","src":"225:1:26","type":"","value":"1"},{"name":"data","nativeSrc":"228:4:26","nodeType":"YulIdentifier","src":"228:4:26"}],"functionName":{"name":"shr","nativeSrc":"221:3:26","nodeType":"YulIdentifier","src":"221:3:26"},"nativeSrc":"221:12:26","nodeType":"YulFunctionCall","src":"221:12:26"},"variableNames":[{"name":"length","nativeSrc":"211:6:26","nodeType":"YulIdentifier","src":"211:6:26"}]},{"nativeSrc":"242:38:26","nodeType":"YulVariableDeclaration","src":"242:38:26","value":{"arguments":[{"name":"data","nativeSrc":"272:4:26","nodeType":"YulIdentifier","src":"272:4:26"},{"kind":"number","nativeSrc":"278:1:26","nodeType":"YulLiteral","src":"278:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"268:3:26","nodeType":"YulIdentifier","src":"268:3:26"},"nativeSrc":"268:12:26","nodeType":"YulFunctionCall","src":"268:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"246:18:26","nodeType":"YulTypedName","src":"246:18:26","type":""}]},{"body":{"nativeSrc":"319:31:26","nodeType":"YulBlock","src":"319:31:26","statements":[{"nativeSrc":"321:27:26","nodeType":"YulAssignment","src":"321:27:26","value":{"arguments":[{"name":"length","nativeSrc":"335:6:26","nodeType":"YulIdentifier","src":"335:6:26"},{"kind":"number","nativeSrc":"343:4:26","nodeType":"YulLiteral","src":"343:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"331:3:26","nodeType":"YulIdentifier","src":"331:3:26"},"nativeSrc":"331:17:26","nodeType":"YulFunctionCall","src":"331:17:26"},"variableNames":[{"name":"length","nativeSrc":"321:6:26","nodeType":"YulIdentifier","src":"321:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"299:18:26","nodeType":"YulIdentifier","src":"299:18:26"}],"functionName":{"name":"iszero","nativeSrc":"292:6:26","nodeType":"YulIdentifier","src":"292:6:26"},"nativeSrc":"292:26:26","nodeType":"YulFunctionCall","src":"292:26:26"},"nativeSrc":"289:61:26","nodeType":"YulIf","src":"289:61:26"},{"body":{"nativeSrc":"409:111:26","nodeType":"YulBlock","src":"409:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"430:1:26","nodeType":"YulLiteral","src":"430:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"437:3:26","nodeType":"YulLiteral","src":"437:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"442:10:26","nodeType":"YulLiteral","src":"442:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"433:3:26","nodeType":"YulIdentifier","src":"433:3:26"},"nativeSrc":"433:20:26","nodeType":"YulFunctionCall","src":"433:20:26"}],"functionName":{"name":"mstore","nativeSrc":"423:6:26","nodeType":"YulIdentifier","src":"423:6:26"},"nativeSrc":"423:31:26","nodeType":"YulFunctionCall","src":"423:31:26"},"nativeSrc":"423:31:26","nodeType":"YulExpressionStatement","src":"423:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"474:1:26","nodeType":"YulLiteral","src":"474:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"477:4:26","nodeType":"YulLiteral","src":"477:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"467:6:26","nodeType":"YulIdentifier","src":"467:6:26"},"nativeSrc":"467:15:26","nodeType":"YulFunctionCall","src":"467:15:26"},"nativeSrc":"467:15:26","nodeType":"YulExpressionStatement","src":"467:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"502:1:26","nodeType":"YulLiteral","src":"502:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"505:4:26","nodeType":"YulLiteral","src":"505:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"495:6:26","nodeType":"YulIdentifier","src":"495:6:26"},"nativeSrc":"495:15:26","nodeType":"YulFunctionCall","src":"495:15:26"},"nativeSrc":"495:15:26","nodeType":"YulExpressionStatement","src":"495:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"365:18:26","nodeType":"YulIdentifier","src":"365:18:26"},{"arguments":[{"name":"length","nativeSrc":"388:6:26","nodeType":"YulIdentifier","src":"388:6:26"},{"kind":"number","nativeSrc":"396:2:26","nodeType":"YulLiteral","src":"396:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"385:2:26","nodeType":"YulIdentifier","src":"385:2:26"},"nativeSrc":"385:14:26","nodeType":"YulFunctionCall","src":"385:14:26"}],"functionName":{"name":"eq","nativeSrc":"362:2:26","nodeType":"YulIdentifier","src":"362:2:26"},"nativeSrc":"362:38:26","nodeType":"YulFunctionCall","src":"362:38:26"},"nativeSrc":"359:161:26","nodeType":"YulIf","src":"359:161:26"}]},"name":"extract_byte_array_length","nativeSrc":"146:380:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"181:4:26","nodeType":"YulTypedName","src":"181:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"190:6:26","nodeType":"YulTypedName","src":"190:6:26","type":""}],"src":"146:380:26"},{"body":{"nativeSrc":"587:65:26","nodeType":"YulBlock","src":"587:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"604:1:26","nodeType":"YulLiteral","src":"604:1:26","type":"","value":"0"},{"name":"ptr","nativeSrc":"607:3:26","nodeType":"YulIdentifier","src":"607:3:26"}],"functionName":{"name":"mstore","nativeSrc":"597:6:26","nodeType":"YulIdentifier","src":"597:6:26"},"nativeSrc":"597:14:26","nodeType":"YulFunctionCall","src":"597:14:26"},"nativeSrc":"597:14:26","nodeType":"YulExpressionStatement","src":"597:14:26"},{"nativeSrc":"620:26:26","nodeType":"YulAssignment","src":"620:26:26","value":{"arguments":[{"kind":"number","nativeSrc":"638:1:26","nodeType":"YulLiteral","src":"638:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"641:4:26","nodeType":"YulLiteral","src":"641:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"628:9:26","nodeType":"YulIdentifier","src":"628:9:26"},"nativeSrc":"628:18:26","nodeType":"YulFunctionCall","src":"628:18:26"},"variableNames":[{"name":"data","nativeSrc":"620:4:26","nodeType":"YulIdentifier","src":"620:4:26"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"531:121:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"570:3:26","nodeType":"YulTypedName","src":"570:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"578:4:26","nodeType":"YulTypedName","src":"578:4:26","type":""}],"src":"531:121:26"},{"body":{"nativeSrc":"738:462:26","nodeType":"YulBlock","src":"738:462:26","statements":[{"body":{"nativeSrc":"771:423:26","nodeType":"YulBlock","src":"771:423:26","statements":[{"nativeSrc":"785:11:26","nodeType":"YulVariableDeclaration","src":"785:11:26","value":{"kind":"number","nativeSrc":"795:1:26","nodeType":"YulLiteral","src":"795:1:26","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"789:2:26","nodeType":"YulTypedName","src":"789:2:26","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"816:1:26","nodeType":"YulLiteral","src":"816:1:26","type":"","value":"0"},{"name":"array","nativeSrc":"819:5:26","nodeType":"YulIdentifier","src":"819:5:26"}],"functionName":{"name":"mstore","nativeSrc":"809:6:26","nodeType":"YulIdentifier","src":"809:6:26"},"nativeSrc":"809:16:26","nodeType":"YulFunctionCall","src":"809:16:26"},"nativeSrc":"809:16:26","nodeType":"YulExpressionStatement","src":"809:16:26"},{"nativeSrc":"838:30:26","nodeType":"YulVariableDeclaration","src":"838:30:26","value":{"arguments":[{"kind":"number","nativeSrc":"860:1:26","nodeType":"YulLiteral","src":"860:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"863:4:26","nodeType":"YulLiteral","src":"863:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"850:9:26","nodeType":"YulIdentifier","src":"850:9:26"},"nativeSrc":"850:18:26","nodeType":"YulFunctionCall","src":"850:18:26"},"variables":[{"name":"data","nativeSrc":"842:4:26","nodeType":"YulTypedName","src":"842:4:26","type":""}]},{"nativeSrc":"881:57:26","nodeType":"YulVariableDeclaration","src":"881:57:26","value":{"arguments":[{"name":"data","nativeSrc":"904:4:26","nodeType":"YulIdentifier","src":"904:4:26"},{"arguments":[{"kind":"number","nativeSrc":"914:1:26","nodeType":"YulLiteral","src":"914:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"921:10:26","nodeType":"YulIdentifier","src":"921:10:26"},{"kind":"number","nativeSrc":"933:2:26","nodeType":"YulLiteral","src":"933:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"917:3:26","nodeType":"YulIdentifier","src":"917:3:26"},"nativeSrc":"917:19:26","nodeType":"YulFunctionCall","src":"917:19:26"}],"functionName":{"name":"shr","nativeSrc":"910:3:26","nodeType":"YulIdentifier","src":"910:3:26"},"nativeSrc":"910:27:26","nodeType":"YulFunctionCall","src":"910:27:26"}],"functionName":{"name":"add","nativeSrc":"900:3:26","nodeType":"YulIdentifier","src":"900:3:26"},"nativeSrc":"900:38:26","nodeType":"YulFunctionCall","src":"900:38:26"},"variables":[{"name":"deleteStart","nativeSrc":"885:11:26","nodeType":"YulTypedName","src":"885:11:26","type":""}]},{"body":{"nativeSrc":"975:23:26","nodeType":"YulBlock","src":"975:23:26","statements":[{"nativeSrc":"977:19:26","nodeType":"YulAssignment","src":"977:19:26","value":{"name":"data","nativeSrc":"992:4:26","nodeType":"YulIdentifier","src":"992:4:26"},"variableNames":[{"name":"deleteStart","nativeSrc":"977:11:26","nodeType":"YulIdentifier","src":"977:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"957:10:26","nodeType":"YulIdentifier","src":"957:10:26"},{"kind":"number","nativeSrc":"969:4:26","nodeType":"YulLiteral","src":"969:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"954:2:26","nodeType":"YulIdentifier","src":"954:2:26"},"nativeSrc":"954:20:26","nodeType":"YulFunctionCall","src":"954:20:26"},"nativeSrc":"951:47:26","nodeType":"YulIf","src":"951:47:26"},{"nativeSrc":"1011:41:26","nodeType":"YulVariableDeclaration","src":"1011:41:26","value":{"arguments":[{"name":"data","nativeSrc":"1025:4:26","nodeType":"YulIdentifier","src":"1025:4:26"},{"arguments":[{"kind":"number","nativeSrc":"1035:1:26","nodeType":"YulLiteral","src":"1035:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1042:3:26","nodeType":"YulIdentifier","src":"1042:3:26"},{"kind":"number","nativeSrc":"1047:2:26","nodeType":"YulLiteral","src":"1047:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1038:3:26","nodeType":"YulIdentifier","src":"1038:3:26"},"nativeSrc":"1038:12:26","nodeType":"YulFunctionCall","src":"1038:12:26"}],"functionName":{"name":"shr","nativeSrc":"1031:3:26","nodeType":"YulIdentifier","src":"1031:3:26"},"nativeSrc":"1031:20:26","nodeType":"YulFunctionCall","src":"1031:20:26"}],"functionName":{"name":"add","nativeSrc":"1021:3:26","nodeType":"YulIdentifier","src":"1021:3:26"},"nativeSrc":"1021:31:26","nodeType":"YulFunctionCall","src":"1021:31:26"},"variables":[{"name":"_2","nativeSrc":"1015:2:26","nodeType":"YulTypedName","src":"1015:2:26","type":""}]},{"nativeSrc":"1065:24:26","nodeType":"YulVariableDeclaration","src":"1065:24:26","value":{"name":"deleteStart","nativeSrc":"1078:11:26","nodeType":"YulIdentifier","src":"1078:11:26"},"variables":[{"name":"start","nativeSrc":"1069:5:26","nodeType":"YulTypedName","src":"1069:5:26","type":""}]},{"body":{"nativeSrc":"1163:21:26","nodeType":"YulBlock","src":"1163:21:26","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1172:5:26","nodeType":"YulIdentifier","src":"1172:5:26"},{"name":"_1","nativeSrc":"1179:2:26","nodeType":"YulIdentifier","src":"1179:2:26"}],"functionName":{"name":"sstore","nativeSrc":"1165:6:26","nodeType":"YulIdentifier","src":"1165:6:26"},"nativeSrc":"1165:17:26","nodeType":"YulFunctionCall","src":"1165:17:26"},"nativeSrc":"1165:17:26","nodeType":"YulExpressionStatement","src":"1165:17:26"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1113:5:26","nodeType":"YulIdentifier","src":"1113:5:26"},{"name":"_2","nativeSrc":"1120:2:26","nodeType":"YulIdentifier","src":"1120:2:26"}],"functionName":{"name":"lt","nativeSrc":"1110:2:26","nodeType":"YulIdentifier","src":"1110:2:26"},"nativeSrc":"1110:13:26","nodeType":"YulFunctionCall","src":"1110:13:26"},"nativeSrc":"1102:82:26","nodeType":"YulForLoop","post":{"nativeSrc":"1124:26:26","nodeType":"YulBlock","src":"1124:26:26","statements":[{"nativeSrc":"1126:22:26","nodeType":"YulAssignment","src":"1126:22:26","value":{"arguments":[{"name":"start","nativeSrc":"1139:5:26","nodeType":"YulIdentifier","src":"1139:5:26"},{"kind":"number","nativeSrc":"1146:1:26","nodeType":"YulLiteral","src":"1146:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1135:3:26","nodeType":"YulIdentifier","src":"1135:3:26"},"nativeSrc":"1135:13:26","nodeType":"YulFunctionCall","src":"1135:13:26"},"variableNames":[{"name":"start","nativeSrc":"1126:5:26","nodeType":"YulIdentifier","src":"1126:5:26"}]}]},"pre":{"nativeSrc":"1106:3:26","nodeType":"YulBlock","src":"1106:3:26","statements":[]},"src":"1102:82:26"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"754:3:26","nodeType":"YulIdentifier","src":"754:3:26"},{"kind":"number","nativeSrc":"759:2:26","nodeType":"YulLiteral","src":"759:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"751:2:26","nodeType":"YulIdentifier","src":"751:2:26"},"nativeSrc":"751:11:26","nodeType":"YulFunctionCall","src":"751:11:26"},"nativeSrc":"748:446:26","nodeType":"YulIf","src":"748:446:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"657:543:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"710:5:26","nodeType":"YulTypedName","src":"710:5:26","type":""},{"name":"len","nativeSrc":"717:3:26","nodeType":"YulTypedName","src":"717:3:26","type":""},{"name":"startIndex","nativeSrc":"722:10:26","nodeType":"YulTypedName","src":"722:10:26","type":""}],"src":"657:543:26"},{"body":{"nativeSrc":"1290:81:26","nodeType":"YulBlock","src":"1290:81:26","statements":[{"nativeSrc":"1300:65:26","nodeType":"YulAssignment","src":"1300:65:26","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1315:4:26","nodeType":"YulIdentifier","src":"1315:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1333:1:26","nodeType":"YulLiteral","src":"1333:1:26","type":"","value":"3"},{"name":"len","nativeSrc":"1336:3:26","nodeType":"YulIdentifier","src":"1336:3:26"}],"functionName":{"name":"shl","nativeSrc":"1329:3:26","nodeType":"YulIdentifier","src":"1329:3:26"},"nativeSrc":"1329:11:26","nodeType":"YulFunctionCall","src":"1329:11:26"},{"arguments":[{"kind":"number","nativeSrc":"1346:1:26","nodeType":"YulLiteral","src":"1346:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1342:3:26","nodeType":"YulIdentifier","src":"1342:3:26"},"nativeSrc":"1342:6:26","nodeType":"YulFunctionCall","src":"1342:6:26"}],"functionName":{"name":"shr","nativeSrc":"1325:3:26","nodeType":"YulIdentifier","src":"1325:3:26"},"nativeSrc":"1325:24:26","nodeType":"YulFunctionCall","src":"1325:24:26"}],"functionName":{"name":"not","nativeSrc":"1321:3:26","nodeType":"YulIdentifier","src":"1321:3:26"},"nativeSrc":"1321:29:26","nodeType":"YulFunctionCall","src":"1321:29:26"}],"functionName":{"name":"and","nativeSrc":"1311:3:26","nodeType":"YulIdentifier","src":"1311:3:26"},"nativeSrc":"1311:40:26","nodeType":"YulFunctionCall","src":"1311:40:26"},{"arguments":[{"kind":"number","nativeSrc":"1357:1:26","nodeType":"YulLiteral","src":"1357:1:26","type":"","value":"1"},{"name":"len","nativeSrc":"1360:3:26","nodeType":"YulIdentifier","src":"1360:3:26"}],"functionName":{"name":"shl","nativeSrc":"1353:3:26","nodeType":"YulIdentifier","src":"1353:3:26"},"nativeSrc":"1353:11:26","nodeType":"YulFunctionCall","src":"1353:11:26"}],"functionName":{"name":"or","nativeSrc":"1308:2:26","nodeType":"YulIdentifier","src":"1308:2:26"},"nativeSrc":"1308:57:26","nodeType":"YulFunctionCall","src":"1308:57:26"},"variableNames":[{"name":"used","nativeSrc":"1300:4:26","nodeType":"YulIdentifier","src":"1300:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1205:166:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1267:4:26","nodeType":"YulTypedName","src":"1267:4:26","type":""},{"name":"len","nativeSrc":"1273:3:26","nodeType":"YulTypedName","src":"1273:3:26","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1281:4:26","nodeType":"YulTypedName","src":"1281:4:26","type":""}],"src":"1205:166:26"},{"body":{"nativeSrc":"1472:1249:26","nodeType":"YulBlock","src":"1472:1249:26","statements":[{"nativeSrc":"1482:24:26","nodeType":"YulVariableDeclaration","src":"1482:24:26","value":{"arguments":[{"name":"src","nativeSrc":"1502:3:26","nodeType":"YulIdentifier","src":"1502:3:26"}],"functionName":{"name":"mload","nativeSrc":"1496:5:26","nodeType":"YulIdentifier","src":"1496:5:26"},"nativeSrc":"1496:10:26","nodeType":"YulFunctionCall","src":"1496:10:26"},"variables":[{"name":"newLen","nativeSrc":"1486:6:26","nodeType":"YulTypedName","src":"1486:6:26","type":""}]},{"body":{"nativeSrc":"1549:22:26","nodeType":"YulBlock","src":"1549:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1551:16:26","nodeType":"YulIdentifier","src":"1551:16:26"},"nativeSrc":"1551:18:26","nodeType":"YulFunctionCall","src":"1551:18:26"},"nativeSrc":"1551:18:26","nodeType":"YulExpressionStatement","src":"1551:18:26"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1521:6:26","nodeType":"YulIdentifier","src":"1521:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1537:2:26","nodeType":"YulLiteral","src":"1537:2:26","type":"","value":"64"},{"kind":"number","nativeSrc":"1541:1:26","nodeType":"YulLiteral","src":"1541:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1533:3:26","nodeType":"YulIdentifier","src":"1533:3:26"},"nativeSrc":"1533:10:26","nodeType":"YulFunctionCall","src":"1533:10:26"},{"kind":"number","nativeSrc":"1545:1:26","nodeType":"YulLiteral","src":"1545:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1529:3:26","nodeType":"YulIdentifier","src":"1529:3:26"},"nativeSrc":"1529:18:26","nodeType":"YulFunctionCall","src":"1529:18:26"}],"functionName":{"name":"gt","nativeSrc":"1518:2:26","nodeType":"YulIdentifier","src":"1518:2:26"},"nativeSrc":"1518:30:26","nodeType":"YulFunctionCall","src":"1518:30:26"},"nativeSrc":"1515:56:26","nodeType":"YulIf","src":"1515:56:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1624:4:26","nodeType":"YulIdentifier","src":"1624:4:26"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1662:4:26","nodeType":"YulIdentifier","src":"1662:4:26"}],"functionName":{"name":"sload","nativeSrc":"1656:5:26","nodeType":"YulIdentifier","src":"1656:5:26"},"nativeSrc":"1656:11:26","nodeType":"YulFunctionCall","src":"1656:11:26"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1630:25:26","nodeType":"YulIdentifier","src":"1630:25:26"},"nativeSrc":"1630:38:26","nodeType":"YulFunctionCall","src":"1630:38:26"},{"name":"newLen","nativeSrc":"1670:6:26","nodeType":"YulIdentifier","src":"1670:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1580:43:26","nodeType":"YulIdentifier","src":"1580:43:26"},"nativeSrc":"1580:97:26","nodeType":"YulFunctionCall","src":"1580:97:26"},"nativeSrc":"1580:97:26","nodeType":"YulExpressionStatement","src":"1580:97:26"},{"nativeSrc":"1686:18:26","nodeType":"YulVariableDeclaration","src":"1686:18:26","value":{"kind":"number","nativeSrc":"1703:1:26","nodeType":"YulLiteral","src":"1703:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1690:9:26","nodeType":"YulTypedName","src":"1690:9:26","type":""}]},{"nativeSrc":"1713:23:26","nodeType":"YulVariableDeclaration","src":"1713:23:26","value":{"kind":"number","nativeSrc":"1732:4:26","nodeType":"YulLiteral","src":"1732:4:26","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"1717:11:26","nodeType":"YulTypedName","src":"1717:11:26","type":""}]},{"nativeSrc":"1745:17:26","nodeType":"YulAssignment","src":"1745:17:26","value":{"kind":"number","nativeSrc":"1758:4:26","nodeType":"YulLiteral","src":"1758:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1745:9:26","nodeType":"YulIdentifier","src":"1745:9:26"}]},{"cases":[{"body":{"nativeSrc":"1808:656:26","nodeType":"YulBlock","src":"1808:656:26","statements":[{"nativeSrc":"1822:35:26","nodeType":"YulVariableDeclaration","src":"1822:35:26","value":{"arguments":[{"name":"newLen","nativeSrc":"1841:6:26","nodeType":"YulIdentifier","src":"1841:6:26"},{"arguments":[{"kind":"number","nativeSrc":"1853:2:26","nodeType":"YulLiteral","src":"1853:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1849:3:26","nodeType":"YulIdentifier","src":"1849:3:26"},"nativeSrc":"1849:7:26","nodeType":"YulFunctionCall","src":"1849:7:26"}],"functionName":{"name":"and","nativeSrc":"1837:3:26","nodeType":"YulIdentifier","src":"1837:3:26"},"nativeSrc":"1837:20:26","nodeType":"YulFunctionCall","src":"1837:20:26"},"variables":[{"name":"loopEnd","nativeSrc":"1826:7:26","nodeType":"YulTypedName","src":"1826:7:26","type":""}]},{"nativeSrc":"1870:49:26","nodeType":"YulVariableDeclaration","src":"1870:49:26","value":{"arguments":[{"name":"slot","nativeSrc":"1914:4:26","nodeType":"YulIdentifier","src":"1914:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"1884:29:26","nodeType":"YulIdentifier","src":"1884:29:26"},"nativeSrc":"1884:35:26","nodeType":"YulFunctionCall","src":"1884:35:26"},"variables":[{"name":"dstPtr","nativeSrc":"1874:6:26","nodeType":"YulTypedName","src":"1874:6:26","type":""}]},{"nativeSrc":"1932:10:26","nodeType":"YulVariableDeclaration","src":"1932:10:26","value":{"kind":"number","nativeSrc":"1941:1:26","nodeType":"YulLiteral","src":"1941:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1936:1:26","nodeType":"YulTypedName","src":"1936:1:26","type":""}]},{"body":{"nativeSrc":"2019:172:26","nodeType":"YulBlock","src":"2019:172:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2044:6:26","nodeType":"YulIdentifier","src":"2044:6:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2062:3:26","nodeType":"YulIdentifier","src":"2062:3:26"},{"name":"srcOffset","nativeSrc":"2067:9:26","nodeType":"YulIdentifier","src":"2067:9:26"}],"functionName":{"name":"add","nativeSrc":"2058:3:26","nodeType":"YulIdentifier","src":"2058:3:26"},"nativeSrc":"2058:19:26","nodeType":"YulFunctionCall","src":"2058:19:26"}],"functionName":{"name":"mload","nativeSrc":"2052:5:26","nodeType":"YulIdentifier","src":"2052:5:26"},"nativeSrc":"2052:26:26","nodeType":"YulFunctionCall","src":"2052:26:26"}],"functionName":{"name":"sstore","nativeSrc":"2037:6:26","nodeType":"YulIdentifier","src":"2037:6:26"},"nativeSrc":"2037:42:26","nodeType":"YulFunctionCall","src":"2037:42:26"},"nativeSrc":"2037:42:26","nodeType":"YulExpressionStatement","src":"2037:42:26"},{"nativeSrc":"2096:24:26","nodeType":"YulAssignment","src":"2096:24:26","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2110:6:26","nodeType":"YulIdentifier","src":"2110:6:26"},{"kind":"number","nativeSrc":"2118:1:26","nodeType":"YulLiteral","src":"2118:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2106:3:26","nodeType":"YulIdentifier","src":"2106:3:26"},"nativeSrc":"2106:14:26","nodeType":"YulFunctionCall","src":"2106:14:26"},"variableNames":[{"name":"dstPtr","nativeSrc":"2096:6:26","nodeType":"YulIdentifier","src":"2096:6:26"}]},{"nativeSrc":"2137:40:26","nodeType":"YulAssignment","src":"2137:40:26","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2154:9:26","nodeType":"YulIdentifier","src":"2154:9:26"},{"name":"srcOffset_1","nativeSrc":"2165:11:26","nodeType":"YulIdentifier","src":"2165:11:26"}],"functionName":{"name":"add","nativeSrc":"2150:3:26","nodeType":"YulIdentifier","src":"2150:3:26"},"nativeSrc":"2150:27:26","nodeType":"YulFunctionCall","src":"2150:27:26"},"variableNames":[{"name":"srcOffset","nativeSrc":"2137:9:26","nodeType":"YulIdentifier","src":"2137:9:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1966:1:26","nodeType":"YulIdentifier","src":"1966:1:26"},{"name":"loopEnd","nativeSrc":"1969:7:26","nodeType":"YulIdentifier","src":"1969:7:26"}],"functionName":{"name":"lt","nativeSrc":"1963:2:26","nodeType":"YulIdentifier","src":"1963:2:26"},"nativeSrc":"1963:14:26","nodeType":"YulFunctionCall","src":"1963:14:26"},"nativeSrc":"1955:236:26","nodeType":"YulForLoop","post":{"nativeSrc":"1978:28:26","nodeType":"YulBlock","src":"1978:28:26","statements":[{"nativeSrc":"1980:24:26","nodeType":"YulAssignment","src":"1980:24:26","value":{"arguments":[{"name":"i","nativeSrc":"1989:1:26","nodeType":"YulIdentifier","src":"1989:1:26"},{"name":"srcOffset_1","nativeSrc":"1992:11:26","nodeType":"YulIdentifier","src":"1992:11:26"}],"functionName":{"name":"add","nativeSrc":"1985:3:26","nodeType":"YulIdentifier","src":"1985:3:26"},"nativeSrc":"1985:19:26","nodeType":"YulFunctionCall","src":"1985:19:26"},"variableNames":[{"name":"i","nativeSrc":"1980:1:26","nodeType":"YulIdentifier","src":"1980:1:26"}]}]},"pre":{"nativeSrc":"1959:3:26","nodeType":"YulBlock","src":"1959:3:26","statements":[]},"src":"1955:236:26"},{"body":{"nativeSrc":"2239:166:26","nodeType":"YulBlock","src":"2239:166:26","statements":[{"nativeSrc":"2257:43:26","nodeType":"YulVariableDeclaration","src":"2257:43:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2284:3:26","nodeType":"YulIdentifier","src":"2284:3:26"},{"name":"srcOffset","nativeSrc":"2289:9:26","nodeType":"YulIdentifier","src":"2289:9:26"}],"functionName":{"name":"add","nativeSrc":"2280:3:26","nodeType":"YulIdentifier","src":"2280:3:26"},"nativeSrc":"2280:19:26","nodeType":"YulFunctionCall","src":"2280:19:26"}],"functionName":{"name":"mload","nativeSrc":"2274:5:26","nodeType":"YulIdentifier","src":"2274:5:26"},"nativeSrc":"2274:26:26","nodeType":"YulFunctionCall","src":"2274:26:26"},"variables":[{"name":"lastValue","nativeSrc":"2261:9:26","nodeType":"YulTypedName","src":"2261:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2324:6:26","nodeType":"YulIdentifier","src":"2324:6:26"},{"arguments":[{"name":"lastValue","nativeSrc":"2336:9:26","nodeType":"YulIdentifier","src":"2336:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2363:1:26","nodeType":"YulLiteral","src":"2363:1:26","type":"","value":"3"},{"name":"newLen","nativeSrc":"2366:6:26","nodeType":"YulIdentifier","src":"2366:6:26"}],"functionName":{"name":"shl","nativeSrc":"2359:3:26","nodeType":"YulIdentifier","src":"2359:3:26"},"nativeSrc":"2359:14:26","nodeType":"YulFunctionCall","src":"2359:14:26"},{"kind":"number","nativeSrc":"2375:3:26","nodeType":"YulLiteral","src":"2375:3:26","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2355:3:26","nodeType":"YulIdentifier","src":"2355:3:26"},"nativeSrc":"2355:24:26","nodeType":"YulFunctionCall","src":"2355:24:26"},{"arguments":[{"kind":"number","nativeSrc":"2385:1:26","nodeType":"YulLiteral","src":"2385:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2381:3:26","nodeType":"YulIdentifier","src":"2381:3:26"},"nativeSrc":"2381:6:26","nodeType":"YulFunctionCall","src":"2381:6:26"}],"functionName":{"name":"shr","nativeSrc":"2351:3:26","nodeType":"YulIdentifier","src":"2351:3:26"},"nativeSrc":"2351:37:26","nodeType":"YulFunctionCall","src":"2351:37:26"}],"functionName":{"name":"not","nativeSrc":"2347:3:26","nodeType":"YulIdentifier","src":"2347:3:26"},"nativeSrc":"2347:42:26","nodeType":"YulFunctionCall","src":"2347:42:26"}],"functionName":{"name":"and","nativeSrc":"2332:3:26","nodeType":"YulIdentifier","src":"2332:3:26"},"nativeSrc":"2332:58:26","nodeType":"YulFunctionCall","src":"2332:58:26"}],"functionName":{"name":"sstore","nativeSrc":"2317:6:26","nodeType":"YulIdentifier","src":"2317:6:26"},"nativeSrc":"2317:74:26","nodeType":"YulFunctionCall","src":"2317:74:26"},"nativeSrc":"2317:74:26","nodeType":"YulExpressionStatement","src":"2317:74:26"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2210:7:26","nodeType":"YulIdentifier","src":"2210:7:26"},{"name":"newLen","nativeSrc":"2219:6:26","nodeType":"YulIdentifier","src":"2219:6:26"}],"functionName":{"name":"lt","nativeSrc":"2207:2:26","nodeType":"YulIdentifier","src":"2207:2:26"},"nativeSrc":"2207:19:26","nodeType":"YulFunctionCall","src":"2207:19:26"},"nativeSrc":"2204:201:26","nodeType":"YulIf","src":"2204:201:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2425:4:26","nodeType":"YulIdentifier","src":"2425:4:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2439:1:26","nodeType":"YulLiteral","src":"2439:1:26","type":"","value":"1"},{"name":"newLen","nativeSrc":"2442:6:26","nodeType":"YulIdentifier","src":"2442:6:26"}],"functionName":{"name":"shl","nativeSrc":"2435:3:26","nodeType":"YulIdentifier","src":"2435:3:26"},"nativeSrc":"2435:14:26","nodeType":"YulFunctionCall","src":"2435:14:26"},{"kind":"number","nativeSrc":"2451:1:26","nodeType":"YulLiteral","src":"2451:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2431:3:26","nodeType":"YulIdentifier","src":"2431:3:26"},"nativeSrc":"2431:22:26","nodeType":"YulFunctionCall","src":"2431:22:26"}],"functionName":{"name":"sstore","nativeSrc":"2418:6:26","nodeType":"YulIdentifier","src":"2418:6:26"},"nativeSrc":"2418:36:26","nodeType":"YulFunctionCall","src":"2418:36:26"},"nativeSrc":"2418:36:26","nodeType":"YulExpressionStatement","src":"2418:36:26"}]},"nativeSrc":"1801:663:26","nodeType":"YulCase","src":"1801:663:26","value":{"kind":"number","nativeSrc":"1806:1:26","nodeType":"YulLiteral","src":"1806:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"2481:234:26","nodeType":"YulBlock","src":"2481:234:26","statements":[{"nativeSrc":"2495:14:26","nodeType":"YulVariableDeclaration","src":"2495:14:26","value":{"kind":"number","nativeSrc":"2508:1:26","nodeType":"YulLiteral","src":"2508:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2499:5:26","nodeType":"YulTypedName","src":"2499:5:26","type":""}]},{"body":{"nativeSrc":"2544:67:26","nodeType":"YulBlock","src":"2544:67:26","statements":[{"nativeSrc":"2562:35:26","nodeType":"YulAssignment","src":"2562:35:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2581:3:26","nodeType":"YulIdentifier","src":"2581:3:26"},{"name":"srcOffset","nativeSrc":"2586:9:26","nodeType":"YulIdentifier","src":"2586:9:26"}],"functionName":{"name":"add","nativeSrc":"2577:3:26","nodeType":"YulIdentifier","src":"2577:3:26"},"nativeSrc":"2577:19:26","nodeType":"YulFunctionCall","src":"2577:19:26"}],"functionName":{"name":"mload","nativeSrc":"2571:5:26","nodeType":"YulIdentifier","src":"2571:5:26"},"nativeSrc":"2571:26:26","nodeType":"YulFunctionCall","src":"2571:26:26"},"variableNames":[{"name":"value","nativeSrc":"2562:5:26","nodeType":"YulIdentifier","src":"2562:5:26"}]}]},"condition":{"name":"newLen","nativeSrc":"2525:6:26","nodeType":"YulIdentifier","src":"2525:6:26"},"nativeSrc":"2522:89:26","nodeType":"YulIf","src":"2522:89:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2631:4:26","nodeType":"YulIdentifier","src":"2631:4:26"},{"arguments":[{"name":"value","nativeSrc":"2690:5:26","nodeType":"YulIdentifier","src":"2690:5:26"},{"name":"newLen","nativeSrc":"2697:6:26","nodeType":"YulIdentifier","src":"2697:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2637:52:26","nodeType":"YulIdentifier","src":"2637:52:26"},"nativeSrc":"2637:67:26","nodeType":"YulFunctionCall","src":"2637:67:26"}],"functionName":{"name":"sstore","nativeSrc":"2624:6:26","nodeType":"YulIdentifier","src":"2624:6:26"},"nativeSrc":"2624:81:26","nodeType":"YulFunctionCall","src":"2624:81:26"},"nativeSrc":"2624:81:26","nodeType":"YulExpressionStatement","src":"2624:81:26"}]},"nativeSrc":"2473:242:26","nodeType":"YulCase","src":"2473:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"1781:6:26","nodeType":"YulIdentifier","src":"1781:6:26"},{"kind":"number","nativeSrc":"1789:2:26","nodeType":"YulLiteral","src":"1789:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1778:2:26","nodeType":"YulIdentifier","src":"1778:2:26"},"nativeSrc":"1778:14:26","nodeType":"YulFunctionCall","src":"1778:14:26"},"nativeSrc":"1771:944:26","nodeType":"YulSwitch","src":"1771:944:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1376:1345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1457:4:26","nodeType":"YulTypedName","src":"1457:4:26","type":""},{"name":"src","nativeSrc":"1463:3:26","nodeType":"YulTypedName","src":"1463:3:26","type":""}],"src":"1376:1345:26"},{"body":{"nativeSrc":"2786:117:26","nodeType":"YulBlock","src":"2786:117:26","statements":[{"nativeSrc":"2796:22:26","nodeType":"YulAssignment","src":"2796:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"2811:6:26","nodeType":"YulIdentifier","src":"2811:6:26"}],"functionName":{"name":"mload","nativeSrc":"2805:5:26","nodeType":"YulIdentifier","src":"2805:5:26"},"nativeSrc":"2805:13:26","nodeType":"YulFunctionCall","src":"2805:13:26"},"variableNames":[{"name":"value","nativeSrc":"2796:5:26","nodeType":"YulIdentifier","src":"2796:5:26"}]},{"body":{"nativeSrc":"2881:16:26","nodeType":"YulBlock","src":"2881:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2890:1:26","nodeType":"YulLiteral","src":"2890:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2893:1:26","nodeType":"YulLiteral","src":"2893:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2883:6:26","nodeType":"YulIdentifier","src":"2883:6:26"},"nativeSrc":"2883:12:26","nodeType":"YulFunctionCall","src":"2883:12:26"},"nativeSrc":"2883:12:26","nodeType":"YulExpressionStatement","src":"2883:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2840:5:26","nodeType":"YulIdentifier","src":"2840:5:26"},{"arguments":[{"name":"value","nativeSrc":"2851:5:26","nodeType":"YulIdentifier","src":"2851:5:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2866:3:26","nodeType":"YulLiteral","src":"2866:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"2871:1:26","nodeType":"YulLiteral","src":"2871:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2862:3:26","nodeType":"YulIdentifier","src":"2862:3:26"},"nativeSrc":"2862:11:26","nodeType":"YulFunctionCall","src":"2862:11:26"},{"kind":"number","nativeSrc":"2875:1:26","nodeType":"YulLiteral","src":"2875:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2858:3:26","nodeType":"YulIdentifier","src":"2858:3:26"},"nativeSrc":"2858:19:26","nodeType":"YulFunctionCall","src":"2858:19:26"}],"functionName":{"name":"and","nativeSrc":"2847:3:26","nodeType":"YulIdentifier","src":"2847:3:26"},"nativeSrc":"2847:31:26","nodeType":"YulFunctionCall","src":"2847:31:26"}],"functionName":{"name":"eq","nativeSrc":"2837:2:26","nodeType":"YulIdentifier","src":"2837:2:26"},"nativeSrc":"2837:42:26","nodeType":"YulFunctionCall","src":"2837:42:26"}],"functionName":{"name":"iszero","nativeSrc":"2830:6:26","nodeType":"YulIdentifier","src":"2830:6:26"},"nativeSrc":"2830:50:26","nodeType":"YulFunctionCall","src":"2830:50:26"},"nativeSrc":"2827:70:26","nodeType":"YulIf","src":"2827:70:26"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"2726:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2765:6:26","nodeType":"YulTypedName","src":"2765:6:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2776:5:26","nodeType":"YulTypedName","src":"2776:5:26","type":""}],"src":"2726:177:26"},{"body":{"nativeSrc":"3006:195:26","nodeType":"YulBlock","src":"3006:195:26","statements":[{"body":{"nativeSrc":"3052:16:26","nodeType":"YulBlock","src":"3052:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3061:1:26","nodeType":"YulLiteral","src":"3061:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3064:1:26","nodeType":"YulLiteral","src":"3064:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3054:6:26","nodeType":"YulIdentifier","src":"3054:6:26"},"nativeSrc":"3054:12:26","nodeType":"YulFunctionCall","src":"3054:12:26"},"nativeSrc":"3054:12:26","nodeType":"YulExpressionStatement","src":"3054:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3027:7:26","nodeType":"YulIdentifier","src":"3027:7:26"},{"name":"headStart","nativeSrc":"3036:9:26","nodeType":"YulIdentifier","src":"3036:9:26"}],"functionName":{"name":"sub","nativeSrc":"3023:3:26","nodeType":"YulIdentifier","src":"3023:3:26"},"nativeSrc":"3023:23:26","nodeType":"YulFunctionCall","src":"3023:23:26"},{"kind":"number","nativeSrc":"3048:2:26","nodeType":"YulLiteral","src":"3048:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3019:3:26","nodeType":"YulIdentifier","src":"3019:3:26"},"nativeSrc":"3019:32:26","nodeType":"YulFunctionCall","src":"3019:32:26"},"nativeSrc":"3016:52:26","nodeType":"YulIf","src":"3016:52:26"},{"nativeSrc":"3077:50:26","nodeType":"YulAssignment","src":"3077:50:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3117:9:26","nodeType":"YulIdentifier","src":"3117:9:26"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"3087:29:26","nodeType":"YulIdentifier","src":"3087:29:26"},"nativeSrc":"3087:40:26","nodeType":"YulFunctionCall","src":"3087:40:26"},"variableNames":[{"name":"value0","nativeSrc":"3077:6:26","nodeType":"YulIdentifier","src":"3077:6:26"}]},{"nativeSrc":"3136:59:26","nodeType":"YulAssignment","src":"3136:59:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3180:9:26","nodeType":"YulIdentifier","src":"3180:9:26"},{"kind":"number","nativeSrc":"3191:2:26","nodeType":"YulLiteral","src":"3191:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3176:3:26","nodeType":"YulIdentifier","src":"3176:3:26"},"nativeSrc":"3176:18:26","nodeType":"YulFunctionCall","src":"3176:18:26"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"3146:29:26","nodeType":"YulIdentifier","src":"3146:29:26"},"nativeSrc":"3146:49:26","nodeType":"YulFunctionCall","src":"3146:49:26"},"variableNames":[{"name":"value1","nativeSrc":"3136:6:26","nodeType":"YulIdentifier","src":"3136:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"2908:293:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2964:9:26","nodeType":"YulTypedName","src":"2964:9:26","type":""},{"name":"dataEnd","nativeSrc":"2975:7:26","nodeType":"YulTypedName","src":"2975:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2987:6:26","nodeType":"YulTypedName","src":"2987:6:26","type":""},{"name":"value1","nativeSrc":"2995:6:26","nodeType":"YulTypedName","src":"2995:6:26","type":""}],"src":"2908:293:26"},{"body":{"nativeSrc":"3307:102:26","nodeType":"YulBlock","src":"3307:102:26","statements":[{"nativeSrc":"3317:26:26","nodeType":"YulAssignment","src":"3317:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3329:9:26","nodeType":"YulIdentifier","src":"3329:9:26"},{"kind":"number","nativeSrc":"3340:2:26","nodeType":"YulLiteral","src":"3340:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3325:3:26","nodeType":"YulIdentifier","src":"3325:3:26"},"nativeSrc":"3325:18:26","nodeType":"YulFunctionCall","src":"3325:18:26"},"variableNames":[{"name":"tail","nativeSrc":"3317:4:26","nodeType":"YulIdentifier","src":"3317:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3359:9:26","nodeType":"YulIdentifier","src":"3359:9:26"},{"arguments":[{"name":"value0","nativeSrc":"3374:6:26","nodeType":"YulIdentifier","src":"3374:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3390:3:26","nodeType":"YulLiteral","src":"3390:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"3395:1:26","nodeType":"YulLiteral","src":"3395:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3386:3:26","nodeType":"YulIdentifier","src":"3386:3:26"},"nativeSrc":"3386:11:26","nodeType":"YulFunctionCall","src":"3386:11:26"},{"kind":"number","nativeSrc":"3399:1:26","nodeType":"YulLiteral","src":"3399:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3382:3:26","nodeType":"YulIdentifier","src":"3382:3:26"},"nativeSrc":"3382:19:26","nodeType":"YulFunctionCall","src":"3382:19:26"}],"functionName":{"name":"and","nativeSrc":"3370:3:26","nodeType":"YulIdentifier","src":"3370:3:26"},"nativeSrc":"3370:32:26","nodeType":"YulFunctionCall","src":"3370:32:26"}],"functionName":{"name":"mstore","nativeSrc":"3352:6:26","nodeType":"YulIdentifier","src":"3352:6:26"},"nativeSrc":"3352:51:26","nodeType":"YulFunctionCall","src":"3352:51:26"},"nativeSrc":"3352:51:26","nodeType":"YulExpressionStatement","src":"3352:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3206:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3276:9:26","nodeType":"YulTypedName","src":"3276:9:26","type":""},{"name":"value0","nativeSrc":"3287:6:26","nodeType":"YulTypedName","src":"3287:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3298:4:26","nodeType":"YulTypedName","src":"3298:4:26","type":""}],"src":"3206:203:26"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e0604052601560a09081527f4e6f7468696e67207265636569766564207965742e000000000000000000000060c0526002906200003e908262000241565b503480156200004c57600080fd5b5060405162001877380380620018778339810160408190526200006f916200032a565b81818181806001600160a01b038116620000a357604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000ae816200014a565b506001600160a01b038083166080528116620000dd57604051632d618d8160e21b815260040160405180910390fd5b60805160405163ca5eb5e160e01b81526001600160a01b0383811660048301529091169063ca5eb5e190602401600060405180830381600087803b1580156200012557600080fd5b505af11580156200013a573d6000803e3d6000fd5b5050505050505050505062000362565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001c557607f821691505b602082108103620001e657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023c576000816000526020600020601f850160051c81016020861015620002175750805b601f850160051c820191505b81811015620002385782815560010162000223565b5050505b505050565b81516001600160401b038111156200025d576200025d6200019a565b62000275816200026e8454620001b0565b84620001ec565b602080601f831160018114620002ad5760008415620002945750858301515b600019600386901b1c1916600185901b17855562000238565b600085815260208120601f198616915b82811015620002de57888601518255948401946001909101908401620002bd565b5085821015620002fd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146200032557600080fd5b919050565b600080604083850312156200033e57600080fd5b62000349836200030d565b915062000359602084016200030d565b90509250929050565b6080516114cf620003a86000396000818161015b0152818161034b015281816104f1015281816107f5015281816108e3015281816109da0152610a9101526114cf6000f3fe6080604052600436106100e85760003560e01c806382413eac1161008a578063e0539e5811610059578063e0539e58146102bc578063f2fde38b146102dc578063f77e5dd3146102fc578063ff7bd03d1461032957600080fd5b806382413eac146102045780638da5cb5b14610243578063bb0b6a5314610261578063ca5eb5e11461029c57600080fd5b80635e280f11116100c65780635e280f1114610149578063715018a61461019557806373d4a13a146101aa5780637d25a05e146101cc57600080fd5b806313137d65146100ed57806317442b70146101025780633400288b14610129575b600080fd5b6101006100fb366004610d5a565b610349565b005b34801561010e57600080fd5b50604080516001815260026020820152015b60405180910390f35b34801561013557600080fd5b50610100610144366004610e12565b610409565b34801561015557600080fd5b5061017d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610120565b3480156101a157600080fd5b5061010061041f565b3480156101b657600080fd5b506101bf610433565b6040516101209190610e8c565b3480156101d857600080fd5b506101ec6101e7366004610e12565b6104c1565b6040516001600160401b039091168152602001610120565b34801561021057600080fd5b5061023361021f366004610e9f565b6001600160a01b0381163014949350505050565b6040519015158152602001610120565b34801561024f57600080fd5b506000546001600160a01b031661017d565b34801561026d57600080fd5b5061028e61027c366004610f05565b60016020526000908152604090205481565b604051908152602001610120565b3480156102a857600080fd5b506101006102b7366004610f20565b6104ca565b6102cf6102ca366004610fe8565b610550565b604051610120919061105e565b3480156102e857600080fd5b506101006102f7366004610f20565b6105d9565b34801561030857600080fd5b5061031c6103173660046110ae565b610617565b604051610120919061113d565b34801561033557600080fd5b50610233610344366004611154565b61065b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314610399576040516391ac5e4f60e01b81523360048201526024015b60405180910390fd5b602087018035906103b3906103ae908a610f05565b610691565b146103f1576103c56020880188610f05565b60405163309afaf360e21b815263ffffffff909116600482015260208801356024820152604401610390565b610400878787878787876106cd565b50505050505050565b6104116106f0565b61041b828261071d565b5050565b6104276106f0565b6104316000610772565b565b6002805461044090611170565b80601f016020809104026020016040519081016040528092919081815260200182805461046c90611170565b80156104b95780601f1061048e576101008083540402835291602001916104b9565b820191906000526020600020905b81548152906001019060200180831161049c57829003601f168201915b505050505081565b60005b92915050565b6104d26106f0565b60405163ca5eb5e160e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063ca5eb5e190602401600060405180830381600087803b15801561053557600080fd5b505af1158015610549573d6000803e3d6000fd5b5050505050565b610558610c9e565b60008460405160200161056b9190610e8c565b60408051601f198184030181526020601f870181900481028401810190925285835292506105cf9188918491908890889081908401838280828437600092018290525060408051808201909152348152602081019190915292503391506107c29050565b9695505050505050565b6105e16106f0565b6001600160a01b03811661060b57604051631e4fbdf760e01b815260006004820152602401610390565b61061481610772565b50565b604080518082019091526000808252602082015260008460405160200161063e9190610e8c565b60405160208183030381529060405290506105cf868286866108cd565b60006020820180359060019083906106739086610f05565b63ffffffff1681526020810191909152604001600020541492915050565b63ffffffff8116600090815260016020526040812054806104c45760405163f6ff4fb760e01b815263ffffffff84166004820152602401610390565b6106d9848601866111a4565b6002906106e69082611230565b5050505050505050565b6000546001600160a01b031633146104315760405163118cdaa760e01b8152336004820152602401610390565b63ffffffff8216600081815260016020908152604091829020849055815192835282018390527f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b910160405180910390a15050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107ca610c9e565b60006107d984600001516109ae565b6020850151909150156107f3576107f384602001516109d6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632637a450826040518060a001604052808b63ffffffff1681526020016108438c610691565b81526020018a815260200189815260200160008960200151111515815250866040518463ffffffff1660e01b815260040161087f9291906112ef565b60806040518083038185885af115801561089d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108c291906113b6565b979650505050505050565b60408051808201909152600080825260208201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ddc28c586040518060a001604052808863ffffffff16815260200161093089610691565b8152602001878152602001868152602001851515815250306040518363ffffffff1660e01b81526004016109659291906112ef565b6040805180830381865afa158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190611427565b95945050505050565b60008134146109d2576040516304fb820960e51b8152346004820152602401610390565b5090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e4fe1d946040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190611443565b90506001600160a01b038116610a83576040516329b99a9560e11b815260040160405180910390fd5b6040805133602482018190527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03818116604485015260648085018890528551808603909101815260849094019094526020830180516001600160e01b03166323b872dd60e01b17905261041b938516928690610b08908590610b0e565b50505050565b6000610b236001600160a01b03841683610b76565b90508051600014158015610b48575080806020019051810190610b469190611460565b155b15610b7157604051635274afe760e01b81526001600160a01b0384166004820152602401610390565b505050565b6060610b8483836000610b8b565b9392505050565b606081471015610bb05760405163cd78605960e01b8152306004820152602401610390565b600080856001600160a01b03168486604051610bcc919061147d565b60006040518083038185875af1925050503d8060008114610c09576040519150601f19603f3d011682016040523d82523d6000602084013e610c0e565b606091505b50915091506105cf868383606082610c2e57610c2982610c75565b610b84565b8151158015610c4557506001600160a01b0384163b155b15610c6e57604051639996b31560e01b81526001600160a01b0385166004820152602401610390565b5080610b84565b805115610c855780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60405180606001604052806000801916815260200160006001600160401b03168152602001610ce0604051806040016040528060008152602001600081525090565b905290565b600060608284031215610cf757600080fd5b50919050565b60008083601f840112610d0f57600080fd5b5081356001600160401b03811115610d2657600080fd5b602083019150836020828501011115610d3e57600080fd5b9250929050565b6001600160a01b038116811461061457600080fd5b600080600080600080600060e0888a031215610d7557600080fd5b610d7f8989610ce5565b96506060880135955060808801356001600160401b0380821115610da257600080fd5b610dae8b838c01610cfd565b909750955060a08a01359150610dc382610d45565b90935060c08901359080821115610dd957600080fd5b50610de68a828b01610cfd565b989b979a50959850939692959293505050565b803563ffffffff81168114610e0d57600080fd5b919050565b60008060408385031215610e2557600080fd5b610e2e83610df9565b946020939093013593505050565b60005b83811015610e57578181015183820152602001610e3f565b50506000910152565b60008151808452610e78816020860160208601610e3c565b601f01601f19169290920160200192915050565b602081526000610b846020830184610e60565b60008060008060a08587031215610eb557600080fd5b610ebf8686610ce5565b935060608501356001600160401b03811115610eda57600080fd5b610ee687828801610cfd565b9094509250506080850135610efa81610d45565b939692955090935050565b600060208284031215610f1757600080fd5b610b8482610df9565b600060208284031215610f3257600080fd5b8135610b8481610d45565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b0380841115610f6d57610f6d610f3d565b604051601f8501601f19908116603f01168101908282118183101715610f9557610f95610f3d565b81604052809350858152868686011115610fae57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112610fd957600080fd5b610b8483833560208501610f53565b60008060008060608587031215610ffe57600080fd5b61100785610df9565b935060208501356001600160401b038082111561102357600080fd5b61102f88838901610fc8565b9450604087013591508082111561104557600080fd5b5061105287828801610cfd565b95989497509550505050565b6000608082019050825182526001600160401b0360208401511660208301526040830151611099604084018280518252602090810151910152565b5092915050565b801515811461061457600080fd5b600080600080608085870312156110c457600080fd5b6110cd85610df9565b935060208501356001600160401b03808211156110e957600080fd5b6110f588838901610fc8565b9450604087013591508082111561110b57600080fd5b508501601f8101871361111d57600080fd5b61112c87823560208401610f53565b9250506060850135610efa816110a0565b8151815260208083015190820152604081016104c4565b60006060828403121561116657600080fd5b610b848383610ce5565b600181811c9082168061118457607f821691505b602082108103610cf757634e487b7160e01b600052602260045260246000fd5b6000602082840312156111b657600080fd5b81356001600160401b038111156111cc57600080fd5b6111d884828501610fc8565b949350505050565b601f821115610b71576000816000526020600020601f850160051c810160208610156112095750805b601f850160051c820191505b8181101561122857828155600101611215565b505050505050565b81516001600160401b0381111561124957611249610f3d565b61125d816112578454611170565b846111e0565b602080601f831160018114611292576000841561127a5750858301515b600019600386901b1c1916600185901b178555611228565b600085815260208120601f198616915b828110156112c1578886015182559484019460019091019084016112a2565b50858210156112df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815263ffffffff8351166040820152602083015160608201526000604084015160a0608084015261132560e0840182610e60565b90506060850151603f198483030160a08501526113428282610e60565b60809690960151151560c08501525050506001600160a01b039190911660209091015290565b60006040828403121561137a57600080fd5b604051604081018181106001600160401b038211171561139c5761139c610f3d565b604052825181526020928301519281019290925250919050565b6000608082840312156113c857600080fd5b604051606081016001600160401b0382821081831117156113eb576113eb610f3d565b816040528451835260208501519150808216821461140857600080fd5b50602082015261141b8460408501611368565b60408201529392505050565b60006040828403121561143957600080fd5b610b848383611368565b60006020828403121561145557600080fd5b8151610b8481610d45565b60006020828403121561147257600080fd5b8151610b84816110a0565b6000825161148f818460208701610e3c565b919091019291505056fea264697066735822122085f2d5152ac200de0f9c6ac1cf3e36f380e49325f197d25e00d4e1421834b20564736f6c63430008160033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x15 PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH32 0x4E6F7468696E67207265636569766564207965742E0000000000000000000000 PUSH1 0xC0 MSTORE PUSH1 0x2 SWAP1 PUSH3 0x3E SWAP1 DUP3 PUSH3 0x241 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1877 CODESIZE SUB DUP1 PUSH3 0x1877 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x6F SWAP2 PUSH3 0x32A JUMP JUMPDEST DUP2 DUP2 DUP2 DUP2 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xAE DUP2 PUSH3 0x14A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x80 MSTORE DUP2 AND PUSH3 0xDD JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D618D81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x40 MLOAD PUSH4 0xCA5EB5E1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xCA5EB5E1 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x13A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH3 0x362 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1C5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1E6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x23C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x217 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x238 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x223 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x25D JUMPI PUSH3 0x25D PUSH3 0x19A JUMP JUMPDEST PUSH3 0x275 DUP2 PUSH3 0x26E DUP5 SLOAD PUSH3 0x1B0 JUMP JUMPDEST DUP5 PUSH3 0x1EC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2AD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x294 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x238 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2DE JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2BD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2FD JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x349 DUP4 PUSH3 0x30D JUMP JUMPDEST SWAP2 POP PUSH3 0x359 PUSH1 0x20 DUP5 ADD PUSH3 0x30D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x14CF PUSH3 0x3A8 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x15B ADD MSTORE DUP2 DUP2 PUSH2 0x34B ADD MSTORE DUP2 DUP2 PUSH2 0x4F1 ADD MSTORE DUP2 DUP2 PUSH2 0x7F5 ADD MSTORE DUP2 DUP2 PUSH2 0x8E3 ADD MSTORE DUP2 DUP2 PUSH2 0x9DA ADD MSTORE PUSH2 0xA91 ADD MSTORE PUSH2 0x14CF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82413EAC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE0539E58 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xE0539E58 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xF77E5DD3 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xFF7BD03D EQ PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x82413EAC EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xBB0B6A53 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xCA5EB5E1 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5E280F11 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x7D25A05E EQ PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13137D65 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x17442B70 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x3400288B EQ PUSH2 0x129 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP3 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x120 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x41F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x120 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ADDRESS EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x120 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x120 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH4 0x91AC5E4F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP8 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x3B3 SWAP1 PUSH2 0x3AE SWAP1 DUP11 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST EQ PUSH2 0x3F1 JUMPI PUSH2 0x3C5 PUSH1 0x20 DUP9 ADD DUP9 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x309AFAF3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x390 JUMP JUMPDEST PUSH2 0x400 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x6CD JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x411 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x41B DUP3 DUP3 PUSH2 0x71D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x427 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x431 PUSH1 0x0 PUSH2 0x772 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x440 SWAP1 PUSH2 0x1170 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46C SWAP1 PUSH2 0x1170 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D2 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA5EB5E1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xCA5EB5E1 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x558 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x20 PUSH1 0x1F DUP8 ADD DUP2 SWAP1 DIV DUP2 MUL DUP5 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP6 DUP4 MSTORE SWAP3 POP PUSH2 0x5CF SWAP2 DUP9 SWAP2 DUP5 SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 POP CALLER SWAP2 POP PUSH2 0x7C2 SWAP1 POP JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x772 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x63E SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x5CF DUP7 DUP3 DUP7 DUP7 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 SWAP1 DUP4 SWAP1 PUSH2 0x673 SWAP1 DUP7 PUSH2 0xF05 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6FF4FB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST PUSH2 0x6D9 DUP5 DUP7 ADD DUP7 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH2 0x6E6 SWAP1 DUP3 PUSH2 0x1230 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x238399D427B947898EDB290F5FF0F9109849B1C3BA196A42E35F00C50A54B98B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7CA PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x7F3 JUMPI PUSH2 0x7F3 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x9D6 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2637A450 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x843 DUP13 PUSH2 0x691 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP10 PUSH1 0x20 ADD MLOAD GT ISZERO ISZERO DUP2 MSTORE POP DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP3 SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C2 SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDDC28C58 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x930 DUP10 PUSH2 0x691 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x965 SWAP3 SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLVALUE EQ PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4FB8209 PUSH1 0xE5 SHL DUP2 MSTORE CALLVALUE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4FE1D94 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH4 0x29B99A95 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP1 DUP6 ADD DUP9 SWAP1 MSTORE DUP6 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP5 ADD SWAP1 SWAP5 MSTORE PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x41B SWAP4 DUP6 AND SWAP3 DUP7 SWAP1 PUSH2 0xB08 SWAP1 DUP6 SWAP1 PUSH2 0xB0E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB23 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0xB76 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xB48 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB84 DUP4 DUP4 PUSH1 0x0 PUSH2 0xB8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5CF DUP7 DUP4 DUP4 PUSH1 0x60 DUP3 PUSH2 0xC2E JUMPI PUSH2 0xC29 DUP3 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xC45 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xC6E JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST POP DUP1 PUSH2 0xB84 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xC85 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xD3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7F DUP10 DUP10 PUSH2 0xCE5 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDAE DUP12 DUP4 DUP13 ADD PUSH2 0xCFD JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0xDC3 DUP3 PUSH2 0xD45 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE6 DUP11 DUP3 DUP12 ADD PUSH2 0xCFD JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2E DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE57 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE78 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB84 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBF DUP7 DUP7 PUSH2 0xCE5 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE6 DUP8 DUP3 DUP9 ADD PUSH2 0xCFD JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH2 0xEFA DUP2 PUSH2 0xD45 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB84 DUP3 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB84 DUP2 PUSH2 0xD45 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 GT ISZERO PUSH2 0xF6D JUMPI PUSH2 0xF6D PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF95 JUMPI PUSH2 0xF95 PUSH2 0xF3D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xFAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB84 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1007 DUP6 PUSH2 0xDF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102F DUP9 DUP4 DUP10 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1052 DUP8 DUP3 DUP9 ADD PUSH2 0xCFD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1099 PUSH1 0x40 DUP5 ADD DUP3 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10CD DUP6 PUSH2 0xDF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F5 DUP9 DUP4 DUP10 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x111D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112C DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xF53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0xEFA DUP2 PUSH2 0x10A0 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB84 DUP4 DUP4 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1184 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCF7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x11CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D8 DUP5 DUP3 DUP6 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1209 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1228 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1215 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1249 JUMPI PUSH2 0x1249 PUSH2 0xF3D JUMP JUMPDEST PUSH2 0x125D DUP2 PUSH2 0x1257 DUP5 SLOAD PUSH2 0x1170 JUMP JUMPDEST DUP5 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1292 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x127A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12C1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x12A2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x12DF JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP4 MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xA0 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1325 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0xE60 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3F NOT DUP5 DUP4 SUB ADD PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x1342 DUP3 DUP3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x80 SWAP7 SWAP1 SWAP7 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x139C JUMPI PUSH2 0x139C PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP3 LT DUP2 DUP4 GT OR ISZERO PUSH2 0x13EB JUMPI PUSH2 0x13EB PUSH2 0xF3D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP5 MLOAD DUP4 MSTORE PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 AND DUP3 EQ PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x141B DUP5 PUSH1 0x40 DUP6 ADD PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB84 DUP4 DUP4 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB84 DUP2 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB84 DUP2 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x148F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 CALLCODE 0xD5 ISZERO 0x2A 0xC2 STOP 0xDE 0xF SWAP13 PUSH11 0xC1CF3E36F380E49325F197 0xD2 0x5E STOP 0xD4 0xE1 TIMESTAMP XOR CALLVALUE 0xB2 SDIV PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"460:44:23:-:0;326:2738;460:44;;326:2738;460:44;;;;;;;;;;;;:::i;:::-;;356:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;411:9;422;411;422;;-1:-1:-1;;;;;1273:26:12;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:12;;1350:1;1322:31;;;3352:51:26;3325:18;;1322:31:12;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1047:42:1;;;;;1104:23;;1100:53;;1136:17;;-1:-1:-1;;;1136:17:1;;;;;;;;;;;1100:53;1163:8;;:31;;-1:-1:-1;;;1163:31:1;;-1:-1:-1;;;;;3370:32:26;;;1163:31:1;;;3352:51:26;1163:20:1;;;;;;3325:18:26;;1163:31:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;987:214;;965:83:0;;356:98:23;;326:2738;;2912:187:12;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:12;;;-1:-1:-1;;;;;;3020:17:12;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:26:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:26;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:26;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:26;;;2571:26;2522:89;-1:-1:-1;;1333:1:26;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:26;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:26;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:26;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:26:o;2726:177::-;2805:13;;-1:-1:-1;;;;;2847:31:26;;2837:42;;2827:70;;2893:1;2890;2883:12;2827:70;2726:177;;;:::o;2908:293::-;2987:6;2995;3048:2;3036:9;3027:7;3023:23;3019:32;3016:52;;;3064:1;3061;3054:12;3016:52;3087:40;3117:9;3087:40;:::i;:::-;3077:50;;3146:49;3191:2;3180:9;3176:18;3146:49;:::i;:::-;3136:59;;2908:293;;;;;:::o;3206:203::-;326:2738:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_callOptionalReturn_1820":{"entryPoint":2830,"id":1820,"parameterSlots":2,"returnSlots":0},"@_checkOwner_1403":{"entryPoint":1776,"id":1403,"parameterSlots":0,"returnSlots":0},"@_getPeerOrRevert_159":{"entryPoint":1681,"id":159,"parameterSlots":1,"returnSlots":1},"@_lzReceive_4117":{"entryPoint":1741,"id":4117,"parameterSlots":7,"returnSlots":0},"@_lzSend_455":{"entryPoint":1986,"id":455,"parameterSlots":5,"returnSlots":1},"@_msgSender_2135":{"entryPoint":null,"id":2135,"parameterSlots":0,"returnSlots":1},"@_payLzToken_512":{"entryPoint":2518,"id":512,"parameterSlots":1,"returnSlots":0},"@_payNative_476":{"entryPoint":2478,"id":476,"parameterSlots":1,"returnSlots":1},"@_quote_400":{"entryPoint":2253,"id":400,"parameterSlots":4,"returnSlots":1},"@_revert_2122":{"entryPoint":3189,"id":2122,"parameterSlots":1,"returnSlots":0},"@_setPeer_131":{"entryPoint":1821,"id":131,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_1465":{"entryPoint":1906,"id":1465,"parameterSlots":1,"returnSlots":0},"@allowInitializePath_246":{"entryPoint":1627,"id":246,"parameterSlots":1,"returnSlots":1},"@data_4019":{"entryPoint":1075,"id":4019,"parameterSlots":0,"returnSlots":0},"@endpoint_60":{"entryPoint":null,"id":60,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_1990":{"entryPoint":2955,"id":1990,"parameterSlots":3,"returnSlots":1},"@functionCall_1944":{"entryPoint":2934,"id":1944,"parameterSlots":2,"returnSlots":1},"@isComposeMsgSender_228":{"entryPoint":null,"id":228,"parameterSlots":4,"returnSlots":1},"@lzReceive_311":{"entryPoint":841,"id":311,"parameterSlots":7,"returnSlots":0},"@nextNonce_259":{"entryPoint":1217,"id":259,"parameterSlots":2,"returnSlots":1},"@oAppVersion_44":{"entryPoint":null,"id":44,"parameterSlots":0,"returnSlots":2},"@owner_1386":{"entryPoint":null,"id":1386,"parameterSlots":0,"returnSlots":1},"@peers_64":{"entryPoint":null,"id":64,"parameterSlots":0,"returnSlots":0},"@quote_4090":{"entryPoint":1559,"id":4090,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_1417":{"entryPoint":1055,"id":1417,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1657":{"entryPoint":null,"id":1657,"parameterSlots":4,"returnSlots":0},"@send_4058":{"entryPoint":1360,"id":4058,"parameterSlots":4,"returnSlots":1},"@setDelegate_174":{"entryPoint":1226,"id":174,"parameterSlots":1,"returnSlots":0},"@setPeer_111":{"entryPoint":1033,"id":111,"parameterSlots":2,"returnSlots":0},"@transferOwnership_1445":{"entryPoint":1497,"id":1445,"parameterSlots":1,"returnSlots":0},"@verifyCallResultFromTarget_2082":{"entryPoint":null,"id":2082,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":3923,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":3325,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string":{"entryPoint":4040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_MessagingFee_fromMemory":{"entryPoint":4968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Origin_calldata":{"entryPoint":3301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3872,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5187,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5216,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":4516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_MessagingFee_$631_memory_ptr_fromMemory":{"entryPoint":5159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_MessagingReceipt_$626_memory_ptr_fromMemory":{"entryPoint":5046,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Origin_$638_calldata_ptr":{"entryPoint":4436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Origin_$638_calldata_ptrt_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":3418,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_struct$_Origin_$638_calldata_ptrt_bytes_calldata_ptrt_address":{"entryPoint":3743,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint32":{"entryPoint":3845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_bytes32":{"entryPoint":3602,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint32t_string_memory_ptrt_bytes_calldata_ptr":{"entryPoint":4072,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint32t_string_memory_ptrt_bytes_memory_ptrt_bool":{"entryPoint":4270,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_uint32":{"entryPoint":3577,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":3680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_MessagingFee":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_ILayerZeroEndpointV2_$800__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_MessagingFee_$631_memory_ptr__to_t_struct$_MessagingFee_$631_memory_ptr__fromStack_reversed":{"entryPoint":4413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_MessagingParams_$618_memory_ptr_t_address__to_t_struct$_MessagingParams_$618_memory_ptr_t_address__fromStack_reversed":{"entryPoint":4847,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_struct$_MessagingReceipt_$626_memory_ptr__to_t_struct$_MessagingReceipt_$626_memory_ptr__fromStack_reversed":{"entryPoint":4190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":4576,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4656,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3644,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4464,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":3901,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":3397,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bool":{"entryPoint":4256,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:16274:26","nodeType":"YulBlock","src":"0:16274:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"83:85:26","nodeType":"YulBlock","src":"83:85:26","statements":[{"body":{"nativeSrc":"122:16:26","nodeType":"YulBlock","src":"122:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"131:1:26","nodeType":"YulLiteral","src":"131:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"134:1:26","nodeType":"YulLiteral","src":"134:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"124:6:26","nodeType":"YulIdentifier","src":"124:6:26"},"nativeSrc":"124:12:26","nodeType":"YulFunctionCall","src":"124:12:26"},"nativeSrc":"124:12:26","nodeType":"YulExpressionStatement","src":"124:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"104:3:26","nodeType":"YulIdentifier","src":"104:3:26"},{"name":"offset","nativeSrc":"109:6:26","nodeType":"YulIdentifier","src":"109:6:26"}],"functionName":{"name":"sub","nativeSrc":"100:3:26","nodeType":"YulIdentifier","src":"100:3:26"},"nativeSrc":"100:16:26","nodeType":"YulFunctionCall","src":"100:16:26"},{"kind":"number","nativeSrc":"118:2:26","nodeType":"YulLiteral","src":"118:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"96:3:26","nodeType":"YulIdentifier","src":"96:3:26"},"nativeSrc":"96:25:26","nodeType":"YulFunctionCall","src":"96:25:26"},"nativeSrc":"93:45:26","nodeType":"YulIf","src":"93:45:26"},{"nativeSrc":"147:15:26","nodeType":"YulAssignment","src":"147:15:26","value":{"name":"offset","nativeSrc":"156:6:26","nodeType":"YulIdentifier","src":"156:6:26"},"variableNames":[{"name":"value","nativeSrc":"147:5:26","nodeType":"YulIdentifier","src":"147:5:26"}]}]},"name":"abi_decode_struct_Origin_calldata","nativeSrc":"14:154:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"57:6:26","nodeType":"YulTypedName","src":"57:6:26","type":""},{"name":"end","nativeSrc":"65:3:26","nodeType":"YulTypedName","src":"65:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"73:5:26","nodeType":"YulTypedName","src":"73:5:26","type":""}],"src":"14:154:26"},{"body":{"nativeSrc":"245:275:26","nodeType":"YulBlock","src":"245:275:26","statements":[{"body":{"nativeSrc":"294:16:26","nodeType":"YulBlock","src":"294:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"303:1:26","nodeType":"YulLiteral","src":"303:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"306:1:26","nodeType":"YulLiteral","src":"306:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"296:6:26","nodeType":"YulIdentifier","src":"296:6:26"},"nativeSrc":"296:12:26","nodeType":"YulFunctionCall","src":"296:12:26"},"nativeSrc":"296:12:26","nodeType":"YulExpressionStatement","src":"296:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"273:6:26","nodeType":"YulIdentifier","src":"273:6:26"},{"kind":"number","nativeSrc":"281:4:26","nodeType":"YulLiteral","src":"281:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"269:3:26","nodeType":"YulIdentifier","src":"269:3:26"},"nativeSrc":"269:17:26","nodeType":"YulFunctionCall","src":"269:17:26"},{"name":"end","nativeSrc":"288:3:26","nodeType":"YulIdentifier","src":"288:3:26"}],"functionName":{"name":"slt","nativeSrc":"265:3:26","nodeType":"YulIdentifier","src":"265:3:26"},"nativeSrc":"265:27:26","nodeType":"YulFunctionCall","src":"265:27:26"}],"functionName":{"name":"iszero","nativeSrc":"258:6:26","nodeType":"YulIdentifier","src":"258:6:26"},"nativeSrc":"258:35:26","nodeType":"YulFunctionCall","src":"258:35:26"},"nativeSrc":"255:55:26","nodeType":"YulIf","src":"255:55:26"},{"nativeSrc":"319:30:26","nodeType":"YulAssignment","src":"319:30:26","value":{"arguments":[{"name":"offset","nativeSrc":"342:6:26","nodeType":"YulIdentifier","src":"342:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"329:12:26","nodeType":"YulIdentifier","src":"329:12:26"},"nativeSrc":"329:20:26","nodeType":"YulFunctionCall","src":"329:20:26"},"variableNames":[{"name":"length","nativeSrc":"319:6:26","nodeType":"YulIdentifier","src":"319:6:26"}]},{"body":{"nativeSrc":"392:16:26","nodeType":"YulBlock","src":"392:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"401:1:26","nodeType":"YulLiteral","src":"401:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"404:1:26","nodeType":"YulLiteral","src":"404:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"394:6:26","nodeType":"YulIdentifier","src":"394:6:26"},"nativeSrc":"394:12:26","nodeType":"YulFunctionCall","src":"394:12:26"},"nativeSrc":"394:12:26","nodeType":"YulExpressionStatement","src":"394:12:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"364:6:26","nodeType":"YulIdentifier","src":"364:6:26"},{"kind":"number","nativeSrc":"372:18:26","nodeType":"YulLiteral","src":"372:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"361:2:26","nodeType":"YulIdentifier","src":"361:2:26"},"nativeSrc":"361:30:26","nodeType":"YulFunctionCall","src":"361:30:26"},"nativeSrc":"358:50:26","nodeType":"YulIf","src":"358:50:26"},{"nativeSrc":"417:29:26","nodeType":"YulAssignment","src":"417:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"433:6:26","nodeType":"YulIdentifier","src":"433:6:26"},{"kind":"number","nativeSrc":"441:4:26","nodeType":"YulLiteral","src":"441:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"429:3:26","nodeType":"YulIdentifier","src":"429:3:26"},"nativeSrc":"429:17:26","nodeType":"YulFunctionCall","src":"429:17:26"},"variableNames":[{"name":"arrayPos","nativeSrc":"417:8:26","nodeType":"YulIdentifier","src":"417:8:26"}]},{"body":{"nativeSrc":"498:16:26","nodeType":"YulBlock","src":"498:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"507:1:26","nodeType":"YulLiteral","src":"507:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"510:1:26","nodeType":"YulLiteral","src":"510:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"500:6:26","nodeType":"YulIdentifier","src":"500:6:26"},"nativeSrc":"500:12:26","nodeType":"YulFunctionCall","src":"500:12:26"},"nativeSrc":"500:12:26","nodeType":"YulExpressionStatement","src":"500:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"469:6:26","nodeType":"YulIdentifier","src":"469:6:26"},{"name":"length","nativeSrc":"477:6:26","nodeType":"YulIdentifier","src":"477:6:26"}],"functionName":{"name":"add","nativeSrc":"465:3:26","nodeType":"YulIdentifier","src":"465:3:26"},"nativeSrc":"465:19:26","nodeType":"YulFunctionCall","src":"465:19:26"},{"kind":"number","nativeSrc":"486:4:26","nodeType":"YulLiteral","src":"486:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"461:3:26","nodeType":"YulIdentifier","src":"461:3:26"},"nativeSrc":"461:30:26","nodeType":"YulFunctionCall","src":"461:30:26"},{"name":"end","nativeSrc":"493:3:26","nodeType":"YulIdentifier","src":"493:3:26"}],"functionName":{"name":"gt","nativeSrc":"458:2:26","nodeType":"YulIdentifier","src":"458:2:26"},"nativeSrc":"458:39:26","nodeType":"YulFunctionCall","src":"458:39:26"},"nativeSrc":"455:59:26","nodeType":"YulIf","src":"455:59:26"}]},"name":"abi_decode_bytes_calldata","nativeSrc":"173:347:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"208:6:26","nodeType":"YulTypedName","src":"208:6:26","type":""},{"name":"end","nativeSrc":"216:3:26","nodeType":"YulTypedName","src":"216:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"224:8:26","nodeType":"YulTypedName","src":"224:8:26","type":""},{"name":"length","nativeSrc":"234:6:26","nodeType":"YulTypedName","src":"234:6:26","type":""}],"src":"173:347:26"},{"body":{"nativeSrc":"570:86:26","nodeType":"YulBlock","src":"570:86:26","statements":[{"body":{"nativeSrc":"634:16:26","nodeType":"YulBlock","src":"634:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"643:1:26","nodeType":"YulLiteral","src":"643:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"646:1:26","nodeType":"YulLiteral","src":"646:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"636:6:26","nodeType":"YulIdentifier","src":"636:6:26"},"nativeSrc":"636:12:26","nodeType":"YulFunctionCall","src":"636:12:26"},"nativeSrc":"636:12:26","nodeType":"YulExpressionStatement","src":"636:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"593:5:26","nodeType":"YulIdentifier","src":"593:5:26"},{"arguments":[{"name":"value","nativeSrc":"604:5:26","nodeType":"YulIdentifier","src":"604:5:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"619:3:26","nodeType":"YulLiteral","src":"619:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"624:1:26","nodeType":"YulLiteral","src":"624:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"615:3:26","nodeType":"YulIdentifier","src":"615:3:26"},"nativeSrc":"615:11:26","nodeType":"YulFunctionCall","src":"615:11:26"},{"kind":"number","nativeSrc":"628:1:26","nodeType":"YulLiteral","src":"628:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"611:3:26","nodeType":"YulIdentifier","src":"611:3:26"},"nativeSrc":"611:19:26","nodeType":"YulFunctionCall","src":"611:19:26"}],"functionName":{"name":"and","nativeSrc":"600:3:26","nodeType":"YulIdentifier","src":"600:3:26"},"nativeSrc":"600:31:26","nodeType":"YulFunctionCall","src":"600:31:26"}],"functionName":{"name":"eq","nativeSrc":"590:2:26","nodeType":"YulIdentifier","src":"590:2:26"},"nativeSrc":"590:42:26","nodeType":"YulFunctionCall","src":"590:42:26"}],"functionName":{"name":"iszero","nativeSrc":"583:6:26","nodeType":"YulIdentifier","src":"583:6:26"},"nativeSrc":"583:50:26","nodeType":"YulFunctionCall","src":"583:50:26"},"nativeSrc":"580:70:26","nodeType":"YulIf","src":"580:70:26"}]},"name":"validator_revert_address","nativeSrc":"525:131:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"559:5:26","nodeType":"YulTypedName","src":"559:5:26","type":""}],"src":"525:131:26"},{"body":{"nativeSrc":"862:846:26","nodeType":"YulBlock","src":"862:846:26","statements":[{"body":{"nativeSrc":"909:16:26","nodeType":"YulBlock","src":"909:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"918:1:26","nodeType":"YulLiteral","src":"918:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"921:1:26","nodeType":"YulLiteral","src":"921:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"911:6:26","nodeType":"YulIdentifier","src":"911:6:26"},"nativeSrc":"911:12:26","nodeType":"YulFunctionCall","src":"911:12:26"},"nativeSrc":"911:12:26","nodeType":"YulExpressionStatement","src":"911:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"883:7:26","nodeType":"YulIdentifier","src":"883:7:26"},{"name":"headStart","nativeSrc":"892:9:26","nodeType":"YulIdentifier","src":"892:9:26"}],"functionName":{"name":"sub","nativeSrc":"879:3:26","nodeType":"YulIdentifier","src":"879:3:26"},"nativeSrc":"879:23:26","nodeType":"YulFunctionCall","src":"879:23:26"},{"kind":"number","nativeSrc":"904:3:26","nodeType":"YulLiteral","src":"904:3:26","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"875:3:26","nodeType":"YulIdentifier","src":"875:3:26"},"nativeSrc":"875:33:26","nodeType":"YulFunctionCall","src":"875:33:26"},"nativeSrc":"872:53:26","nodeType":"YulIf","src":"872:53:26"},{"nativeSrc":"934:63:26","nodeType":"YulAssignment","src":"934:63:26","value":{"arguments":[{"name":"headStart","nativeSrc":"978:9:26","nodeType":"YulIdentifier","src":"978:9:26"},{"name":"dataEnd","nativeSrc":"989:7:26","nodeType":"YulIdentifier","src":"989:7:26"}],"functionName":{"name":"abi_decode_struct_Origin_calldata","nativeSrc":"944:33:26","nodeType":"YulIdentifier","src":"944:33:26"},"nativeSrc":"944:53:26","nodeType":"YulFunctionCall","src":"944:53:26"},"variableNames":[{"name":"value0","nativeSrc":"934:6:26","nodeType":"YulIdentifier","src":"934:6:26"}]},{"nativeSrc":"1006:42:26","nodeType":"YulAssignment","src":"1006:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1033:9:26","nodeType":"YulIdentifier","src":"1033:9:26"},{"kind":"number","nativeSrc":"1044:2:26","nodeType":"YulLiteral","src":"1044:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1029:3:26","nodeType":"YulIdentifier","src":"1029:3:26"},"nativeSrc":"1029:18:26","nodeType":"YulFunctionCall","src":"1029:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"1016:12:26","nodeType":"YulIdentifier","src":"1016:12:26"},"nativeSrc":"1016:32:26","nodeType":"YulFunctionCall","src":"1016:32:26"},"variableNames":[{"name":"value1","nativeSrc":"1006:6:26","nodeType":"YulIdentifier","src":"1006:6:26"}]},{"nativeSrc":"1057:47:26","nodeType":"YulVariableDeclaration","src":"1057:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1088:9:26","nodeType":"YulIdentifier","src":"1088:9:26"},{"kind":"number","nativeSrc":"1099:3:26","nodeType":"YulLiteral","src":"1099:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"1084:3:26","nodeType":"YulIdentifier","src":"1084:3:26"},"nativeSrc":"1084:19:26","nodeType":"YulFunctionCall","src":"1084:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"1071:12:26","nodeType":"YulIdentifier","src":"1071:12:26"},"nativeSrc":"1071:33:26","nodeType":"YulFunctionCall","src":"1071:33:26"},"variables":[{"name":"offset","nativeSrc":"1061:6:26","nodeType":"YulTypedName","src":"1061:6:26","type":""}]},{"nativeSrc":"1113:28:26","nodeType":"YulVariableDeclaration","src":"1113:28:26","value":{"kind":"number","nativeSrc":"1123:18:26","nodeType":"YulLiteral","src":"1123:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1117:2:26","nodeType":"YulTypedName","src":"1117:2:26","type":""}]},{"body":{"nativeSrc":"1168:16:26","nodeType":"YulBlock","src":"1168:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1177:1:26","nodeType":"YulLiteral","src":"1177:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1180:1:26","nodeType":"YulLiteral","src":"1180:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1170:6:26","nodeType":"YulIdentifier","src":"1170:6:26"},"nativeSrc":"1170:12:26","nodeType":"YulFunctionCall","src":"1170:12:26"},"nativeSrc":"1170:12:26","nodeType":"YulExpressionStatement","src":"1170:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1156:6:26","nodeType":"YulIdentifier","src":"1156:6:26"},{"name":"_1","nativeSrc":"1164:2:26","nodeType":"YulIdentifier","src":"1164:2:26"}],"functionName":{"name":"gt","nativeSrc":"1153:2:26","nodeType":"YulIdentifier","src":"1153:2:26"},"nativeSrc":"1153:14:26","nodeType":"YulFunctionCall","src":"1153:14:26"},"nativeSrc":"1150:34:26","nodeType":"YulIf","src":"1150:34:26"},{"nativeSrc":"1193:84:26","nodeType":"YulVariableDeclaration","src":"1193:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1249:9:26","nodeType":"YulIdentifier","src":"1249:9:26"},{"name":"offset","nativeSrc":"1260:6:26","nodeType":"YulIdentifier","src":"1260:6:26"}],"functionName":{"name":"add","nativeSrc":"1245:3:26","nodeType":"YulIdentifier","src":"1245:3:26"},"nativeSrc":"1245:22:26","nodeType":"YulFunctionCall","src":"1245:22:26"},{"name":"dataEnd","nativeSrc":"1269:7:26","nodeType":"YulIdentifier","src":"1269:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"1219:25:26","nodeType":"YulIdentifier","src":"1219:25:26"},"nativeSrc":"1219:58:26","nodeType":"YulFunctionCall","src":"1219:58:26"},"variables":[{"name":"value2_1","nativeSrc":"1197:8:26","nodeType":"YulTypedName","src":"1197:8:26","type":""},{"name":"value3_1","nativeSrc":"1207:8:26","nodeType":"YulTypedName","src":"1207:8:26","type":""}]},{"nativeSrc":"1286:18:26","nodeType":"YulAssignment","src":"1286:18:26","value":{"name":"value2_1","nativeSrc":"1296:8:26","nodeType":"YulIdentifier","src":"1296:8:26"},"variableNames":[{"name":"value2","nativeSrc":"1286:6:26","nodeType":"YulIdentifier","src":"1286:6:26"}]},{"nativeSrc":"1313:18:26","nodeType":"YulAssignment","src":"1313:18:26","value":{"name":"value3_1","nativeSrc":"1323:8:26","nodeType":"YulIdentifier","src":"1323:8:26"},"variableNames":[{"name":"value3","nativeSrc":"1313:6:26","nodeType":"YulIdentifier","src":"1313:6:26"}]},{"nativeSrc":"1340:46:26","nodeType":"YulVariableDeclaration","src":"1340:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1370:9:26","nodeType":"YulIdentifier","src":"1370:9:26"},{"kind":"number","nativeSrc":"1381:3:26","nodeType":"YulLiteral","src":"1381:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"1366:3:26","nodeType":"YulIdentifier","src":"1366:3:26"},"nativeSrc":"1366:19:26","nodeType":"YulFunctionCall","src":"1366:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"1353:12:26","nodeType":"YulIdentifier","src":"1353:12:26"},"nativeSrc":"1353:33:26","nodeType":"YulFunctionCall","src":"1353:33:26"},"variables":[{"name":"value","nativeSrc":"1344:5:26","nodeType":"YulTypedName","src":"1344:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1420:5:26","nodeType":"YulIdentifier","src":"1420:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1395:24:26","nodeType":"YulIdentifier","src":"1395:24:26"},"nativeSrc":"1395:31:26","nodeType":"YulFunctionCall","src":"1395:31:26"},"nativeSrc":"1395:31:26","nodeType":"YulExpressionStatement","src":"1395:31:26"},{"nativeSrc":"1435:15:26","nodeType":"YulAssignment","src":"1435:15:26","value":{"name":"value","nativeSrc":"1445:5:26","nodeType":"YulIdentifier","src":"1445:5:26"},"variableNames":[{"name":"value4","nativeSrc":"1435:6:26","nodeType":"YulIdentifier","src":"1435:6:26"}]},{"nativeSrc":"1459:49:26","nodeType":"YulVariableDeclaration","src":"1459:49:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1492:9:26","nodeType":"YulIdentifier","src":"1492:9:26"},{"kind":"number","nativeSrc":"1503:3:26","nodeType":"YulLiteral","src":"1503:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"1488:3:26","nodeType":"YulIdentifier","src":"1488:3:26"},"nativeSrc":"1488:19:26","nodeType":"YulFunctionCall","src":"1488:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"1475:12:26","nodeType":"YulIdentifier","src":"1475:12:26"},"nativeSrc":"1475:33:26","nodeType":"YulFunctionCall","src":"1475:33:26"},"variables":[{"name":"offset_1","nativeSrc":"1463:8:26","nodeType":"YulTypedName","src":"1463:8:26","type":""}]},{"body":{"nativeSrc":"1537:16:26","nodeType":"YulBlock","src":"1537:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1546:1:26","nodeType":"YulLiteral","src":"1546:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1549:1:26","nodeType":"YulLiteral","src":"1549:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1539:6:26","nodeType":"YulIdentifier","src":"1539:6:26"},"nativeSrc":"1539:12:26","nodeType":"YulFunctionCall","src":"1539:12:26"},"nativeSrc":"1539:12:26","nodeType":"YulExpressionStatement","src":"1539:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"1523:8:26","nodeType":"YulIdentifier","src":"1523:8:26"},{"name":"_1","nativeSrc":"1533:2:26","nodeType":"YulIdentifier","src":"1533:2:26"}],"functionName":{"name":"gt","nativeSrc":"1520:2:26","nodeType":"YulIdentifier","src":"1520:2:26"},"nativeSrc":"1520:16:26","nodeType":"YulFunctionCall","src":"1520:16:26"},"nativeSrc":"1517:36:26","nodeType":"YulIf","src":"1517:36:26"},{"nativeSrc":"1562:86:26","nodeType":"YulVariableDeclaration","src":"1562:86:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1618:9:26","nodeType":"YulIdentifier","src":"1618:9:26"},{"name":"offset_1","nativeSrc":"1629:8:26","nodeType":"YulIdentifier","src":"1629:8:26"}],"functionName":{"name":"add","nativeSrc":"1614:3:26","nodeType":"YulIdentifier","src":"1614:3:26"},"nativeSrc":"1614:24:26","nodeType":"YulFunctionCall","src":"1614:24:26"},{"name":"dataEnd","nativeSrc":"1640:7:26","nodeType":"YulIdentifier","src":"1640:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"1588:25:26","nodeType":"YulIdentifier","src":"1588:25:26"},"nativeSrc":"1588:60:26","nodeType":"YulFunctionCall","src":"1588:60:26"},"variables":[{"name":"value5_1","nativeSrc":"1566:8:26","nodeType":"YulTypedName","src":"1566:8:26","type":""},{"name":"value6_1","nativeSrc":"1576:8:26","nodeType":"YulTypedName","src":"1576:8:26","type":""}]},{"nativeSrc":"1657:18:26","nodeType":"YulAssignment","src":"1657:18:26","value":{"name":"value5_1","nativeSrc":"1667:8:26","nodeType":"YulIdentifier","src":"1667:8:26"},"variableNames":[{"name":"value5","nativeSrc":"1657:6:26","nodeType":"YulIdentifier","src":"1657:6:26"}]},{"nativeSrc":"1684:18:26","nodeType":"YulAssignment","src":"1684:18:26","value":{"name":"value6_1","nativeSrc":"1694:8:26","nodeType":"YulIdentifier","src":"1694:8:26"},"variableNames":[{"name":"value6","nativeSrc":"1684:6:26","nodeType":"YulIdentifier","src":"1684:6:26"}]}]},"name":"abi_decode_tuple_t_struct$_Origin_$638_calldata_ptrt_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr","nativeSrc":"661:1047:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"780:9:26","nodeType":"YulTypedName","src":"780:9:26","type":""},{"name":"dataEnd","nativeSrc":"791:7:26","nodeType":"YulTypedName","src":"791:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"803:6:26","nodeType":"YulTypedName","src":"803:6:26","type":""},{"name":"value1","nativeSrc":"811:6:26","nodeType":"YulTypedName","src":"811:6:26","type":""},{"name":"value2","nativeSrc":"819:6:26","nodeType":"YulTypedName","src":"819:6:26","type":""},{"name":"value3","nativeSrc":"827:6:26","nodeType":"YulTypedName","src":"827:6:26","type":""},{"name":"value4","nativeSrc":"835:6:26","nodeType":"YulTypedName","src":"835:6:26","type":""},{"name":"value5","nativeSrc":"843:6:26","nodeType":"YulTypedName","src":"843:6:26","type":""},{"name":"value6","nativeSrc":"851:6:26","nodeType":"YulTypedName","src":"851:6:26","type":""}],"src":"661:1047:26"},{"body":{"nativeSrc":"1838:174:26","nodeType":"YulBlock","src":"1838:174:26","statements":[{"nativeSrc":"1848:26:26","nodeType":"YulAssignment","src":"1848:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1860:9:26","nodeType":"YulIdentifier","src":"1860:9:26"},{"kind":"number","nativeSrc":"1871:2:26","nodeType":"YulLiteral","src":"1871:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1856:3:26","nodeType":"YulIdentifier","src":"1856:3:26"},"nativeSrc":"1856:18:26","nodeType":"YulFunctionCall","src":"1856:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1848:4:26","nodeType":"YulIdentifier","src":"1848:4:26"}]},{"nativeSrc":"1883:28:26","nodeType":"YulVariableDeclaration","src":"1883:28:26","value":{"kind":"number","nativeSrc":"1893:18:26","nodeType":"YulLiteral","src":"1893:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1887:2:26","nodeType":"YulTypedName","src":"1887:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1927:9:26","nodeType":"YulIdentifier","src":"1927:9:26"},{"arguments":[{"name":"value0","nativeSrc":"1942:6:26","nodeType":"YulIdentifier","src":"1942:6:26"},{"name":"_1","nativeSrc":"1950:2:26","nodeType":"YulIdentifier","src":"1950:2:26"}],"functionName":{"name":"and","nativeSrc":"1938:3:26","nodeType":"YulIdentifier","src":"1938:3:26"},"nativeSrc":"1938:15:26","nodeType":"YulFunctionCall","src":"1938:15:26"}],"functionName":{"name":"mstore","nativeSrc":"1920:6:26","nodeType":"YulIdentifier","src":"1920:6:26"},"nativeSrc":"1920:34:26","nodeType":"YulFunctionCall","src":"1920:34:26"},"nativeSrc":"1920:34:26","nodeType":"YulExpressionStatement","src":"1920:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1974:9:26","nodeType":"YulIdentifier","src":"1974:9:26"},{"kind":"number","nativeSrc":"1985:2:26","nodeType":"YulLiteral","src":"1985:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1970:3:26","nodeType":"YulIdentifier","src":"1970:3:26"},"nativeSrc":"1970:18:26","nodeType":"YulFunctionCall","src":"1970:18:26"},{"arguments":[{"name":"value1","nativeSrc":"1994:6:26","nodeType":"YulIdentifier","src":"1994:6:26"},{"name":"_1","nativeSrc":"2002:2:26","nodeType":"YulIdentifier","src":"2002:2:26"}],"functionName":{"name":"and","nativeSrc":"1990:3:26","nodeType":"YulIdentifier","src":"1990:3:26"},"nativeSrc":"1990:15:26","nodeType":"YulFunctionCall","src":"1990:15:26"}],"functionName":{"name":"mstore","nativeSrc":"1963:6:26","nodeType":"YulIdentifier","src":"1963:6:26"},"nativeSrc":"1963:43:26","nodeType":"YulFunctionCall","src":"1963:43:26"},"nativeSrc":"1963:43:26","nodeType":"YulExpressionStatement","src":"1963:43:26"}]},"name":"abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed","nativeSrc":"1713:299:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1799:9:26","nodeType":"YulTypedName","src":"1799:9:26","type":""},{"name":"value1","nativeSrc":"1810:6:26","nodeType":"YulTypedName","src":"1810:6:26","type":""},{"name":"value0","nativeSrc":"1818:6:26","nodeType":"YulTypedName","src":"1818:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1829:4:26","nodeType":"YulTypedName","src":"1829:4:26","type":""}],"src":"1713:299:26"},{"body":{"nativeSrc":"2065:115:26","nodeType":"YulBlock","src":"2065:115:26","statements":[{"nativeSrc":"2075:29:26","nodeType":"YulAssignment","src":"2075:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"2097:6:26","nodeType":"YulIdentifier","src":"2097:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"2084:12:26","nodeType":"YulIdentifier","src":"2084:12:26"},"nativeSrc":"2084:20:26","nodeType":"YulFunctionCall","src":"2084:20:26"},"variableNames":[{"name":"value","nativeSrc":"2075:5:26","nodeType":"YulIdentifier","src":"2075:5:26"}]},{"body":{"nativeSrc":"2158:16:26","nodeType":"YulBlock","src":"2158:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2167:1:26","nodeType":"YulLiteral","src":"2167:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2170:1:26","nodeType":"YulLiteral","src":"2170:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2160:6:26","nodeType":"YulIdentifier","src":"2160:6:26"},"nativeSrc":"2160:12:26","nodeType":"YulFunctionCall","src":"2160:12:26"},"nativeSrc":"2160:12:26","nodeType":"YulExpressionStatement","src":"2160:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2126:5:26","nodeType":"YulIdentifier","src":"2126:5:26"},{"arguments":[{"name":"value","nativeSrc":"2137:5:26","nodeType":"YulIdentifier","src":"2137:5:26"},{"kind":"number","nativeSrc":"2144:10:26","nodeType":"YulLiteral","src":"2144:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"2133:3:26","nodeType":"YulIdentifier","src":"2133:3:26"},"nativeSrc":"2133:22:26","nodeType":"YulFunctionCall","src":"2133:22:26"}],"functionName":{"name":"eq","nativeSrc":"2123:2:26","nodeType":"YulIdentifier","src":"2123:2:26"},"nativeSrc":"2123:33:26","nodeType":"YulFunctionCall","src":"2123:33:26"}],"functionName":{"name":"iszero","nativeSrc":"2116:6:26","nodeType":"YulIdentifier","src":"2116:6:26"},"nativeSrc":"2116:41:26","nodeType":"YulFunctionCall","src":"2116:41:26"},"nativeSrc":"2113:61:26","nodeType":"YulIf","src":"2113:61:26"}]},"name":"abi_decode_uint32","nativeSrc":"2017:163:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2044:6:26","nodeType":"YulTypedName","src":"2044:6:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2055:5:26","nodeType":"YulTypedName","src":"2055:5:26","type":""}],"src":"2017:163:26"},{"body":{"nativeSrc":"2271:166:26","nodeType":"YulBlock","src":"2271:166:26","statements":[{"body":{"nativeSrc":"2317:16:26","nodeType":"YulBlock","src":"2317:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2326:1:26","nodeType":"YulLiteral","src":"2326:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2329:1:26","nodeType":"YulLiteral","src":"2329:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2319:6:26","nodeType":"YulIdentifier","src":"2319:6:26"},"nativeSrc":"2319:12:26","nodeType":"YulFunctionCall","src":"2319:12:26"},"nativeSrc":"2319:12:26","nodeType":"YulExpressionStatement","src":"2319:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2292:7:26","nodeType":"YulIdentifier","src":"2292:7:26"},{"name":"headStart","nativeSrc":"2301:9:26","nodeType":"YulIdentifier","src":"2301:9:26"}],"functionName":{"name":"sub","nativeSrc":"2288:3:26","nodeType":"YulIdentifier","src":"2288:3:26"},"nativeSrc":"2288:23:26","nodeType":"YulFunctionCall","src":"2288:23:26"},{"kind":"number","nativeSrc":"2313:2:26","nodeType":"YulLiteral","src":"2313:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2284:3:26","nodeType":"YulIdentifier","src":"2284:3:26"},"nativeSrc":"2284:32:26","nodeType":"YulFunctionCall","src":"2284:32:26"},"nativeSrc":"2281:52:26","nodeType":"YulIf","src":"2281:52:26"},{"nativeSrc":"2342:38:26","nodeType":"YulAssignment","src":"2342:38:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2370:9:26","nodeType":"YulIdentifier","src":"2370:9:26"}],"functionName":{"name":"abi_decode_uint32","nativeSrc":"2352:17:26","nodeType":"YulIdentifier","src":"2352:17:26"},"nativeSrc":"2352:28:26","nodeType":"YulFunctionCall","src":"2352:28:26"},"variableNames":[{"name":"value0","nativeSrc":"2342:6:26","nodeType":"YulIdentifier","src":"2342:6:26"}]},{"nativeSrc":"2389:42:26","nodeType":"YulAssignment","src":"2389:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2416:9:26","nodeType":"YulIdentifier","src":"2416:9:26"},{"kind":"number","nativeSrc":"2427:2:26","nodeType":"YulLiteral","src":"2427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2412:3:26","nodeType":"YulIdentifier","src":"2412:3:26"},"nativeSrc":"2412:18:26","nodeType":"YulFunctionCall","src":"2412:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"2399:12:26","nodeType":"YulIdentifier","src":"2399:12:26"},"nativeSrc":"2399:32:26","nodeType":"YulFunctionCall","src":"2399:32:26"},"variableNames":[{"name":"value1","nativeSrc":"2389:6:26","nodeType":"YulIdentifier","src":"2389:6:26"}]}]},"name":"abi_decode_tuple_t_uint32t_bytes32","nativeSrc":"2185:252:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2229:9:26","nodeType":"YulTypedName","src":"2229:9:26","type":""},{"name":"dataEnd","nativeSrc":"2240:7:26","nodeType":"YulTypedName","src":"2240:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2252:6:26","nodeType":"YulTypedName","src":"2252:6:26","type":""},{"name":"value1","nativeSrc":"2260:6:26","nodeType":"YulTypedName","src":"2260:6:26","type":""}],"src":"2185:252:26"},{"body":{"nativeSrc":"2571:102:26","nodeType":"YulBlock","src":"2571:102:26","statements":[{"nativeSrc":"2581:26:26","nodeType":"YulAssignment","src":"2581:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2593:9:26","nodeType":"YulIdentifier","src":"2593:9:26"},{"kind":"number","nativeSrc":"2604:2:26","nodeType":"YulLiteral","src":"2604:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2589:3:26","nodeType":"YulIdentifier","src":"2589:3:26"},"nativeSrc":"2589:18:26","nodeType":"YulFunctionCall","src":"2589:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2581:4:26","nodeType":"YulIdentifier","src":"2581:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2623:9:26","nodeType":"YulIdentifier","src":"2623:9:26"},{"arguments":[{"name":"value0","nativeSrc":"2638:6:26","nodeType":"YulIdentifier","src":"2638:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2654:3:26","nodeType":"YulLiteral","src":"2654:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"2659:1:26","nodeType":"YulLiteral","src":"2659:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2650:3:26","nodeType":"YulIdentifier","src":"2650:3:26"},"nativeSrc":"2650:11:26","nodeType":"YulFunctionCall","src":"2650:11:26"},{"kind":"number","nativeSrc":"2663:1:26","nodeType":"YulLiteral","src":"2663:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2646:3:26","nodeType":"YulIdentifier","src":"2646:3:26"},"nativeSrc":"2646:19:26","nodeType":"YulFunctionCall","src":"2646:19:26"}],"functionName":{"name":"and","nativeSrc":"2634:3:26","nodeType":"YulIdentifier","src":"2634:3:26"},"nativeSrc":"2634:32:26","nodeType":"YulFunctionCall","src":"2634:32:26"}],"functionName":{"name":"mstore","nativeSrc":"2616:6:26","nodeType":"YulIdentifier","src":"2616:6:26"},"nativeSrc":"2616:51:26","nodeType":"YulFunctionCall","src":"2616:51:26"},"nativeSrc":"2616:51:26","nodeType":"YulExpressionStatement","src":"2616:51:26"}]},"name":"abi_encode_tuple_t_contract$_ILayerZeroEndpointV2_$800__to_t_address__fromStack_reversed","nativeSrc":"2442:231:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2540:9:26","nodeType":"YulTypedName","src":"2540:9:26","type":""},{"name":"value0","nativeSrc":"2551:6:26","nodeType":"YulTypedName","src":"2551:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2562:4:26","nodeType":"YulTypedName","src":"2562:4:26","type":""}],"src":"2442:231:26"},{"body":{"nativeSrc":"2744:184:26","nodeType":"YulBlock","src":"2744:184:26","statements":[{"nativeSrc":"2754:10:26","nodeType":"YulVariableDeclaration","src":"2754:10:26","value":{"kind":"number","nativeSrc":"2763:1:26","nodeType":"YulLiteral","src":"2763:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2758:1:26","nodeType":"YulTypedName","src":"2758:1:26","type":""}]},{"body":{"nativeSrc":"2823:63:26","nodeType":"YulBlock","src":"2823:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2848:3:26","nodeType":"YulIdentifier","src":"2848:3:26"},{"name":"i","nativeSrc":"2853:1:26","nodeType":"YulIdentifier","src":"2853:1:26"}],"functionName":{"name":"add","nativeSrc":"2844:3:26","nodeType":"YulIdentifier","src":"2844:3:26"},"nativeSrc":"2844:11:26","nodeType":"YulFunctionCall","src":"2844:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2867:3:26","nodeType":"YulIdentifier","src":"2867:3:26"},{"name":"i","nativeSrc":"2872:1:26","nodeType":"YulIdentifier","src":"2872:1:26"}],"functionName":{"name":"add","nativeSrc":"2863:3:26","nodeType":"YulIdentifier","src":"2863:3:26"},"nativeSrc":"2863:11:26","nodeType":"YulFunctionCall","src":"2863:11:26"}],"functionName":{"name":"mload","nativeSrc":"2857:5:26","nodeType":"YulIdentifier","src":"2857:5:26"},"nativeSrc":"2857:18:26","nodeType":"YulFunctionCall","src":"2857:18:26"}],"functionName":{"name":"mstore","nativeSrc":"2837:6:26","nodeType":"YulIdentifier","src":"2837:6:26"},"nativeSrc":"2837:39:26","nodeType":"YulFunctionCall","src":"2837:39:26"},"nativeSrc":"2837:39:26","nodeType":"YulExpressionStatement","src":"2837:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2784:1:26","nodeType":"YulIdentifier","src":"2784:1:26"},{"name":"length","nativeSrc":"2787:6:26","nodeType":"YulIdentifier","src":"2787:6:26"}],"functionName":{"name":"lt","nativeSrc":"2781:2:26","nodeType":"YulIdentifier","src":"2781:2:26"},"nativeSrc":"2781:13:26","nodeType":"YulFunctionCall","src":"2781:13:26"},"nativeSrc":"2773:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"2795:19:26","nodeType":"YulBlock","src":"2795:19:26","statements":[{"nativeSrc":"2797:15:26","nodeType":"YulAssignment","src":"2797:15:26","value":{"arguments":[{"name":"i","nativeSrc":"2806:1:26","nodeType":"YulIdentifier","src":"2806:1:26"},{"kind":"number","nativeSrc":"2809:2:26","nodeType":"YulLiteral","src":"2809:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2802:3:26","nodeType":"YulIdentifier","src":"2802:3:26"},"nativeSrc":"2802:10:26","nodeType":"YulFunctionCall","src":"2802:10:26"},"variableNames":[{"name":"i","nativeSrc":"2797:1:26","nodeType":"YulIdentifier","src":"2797:1:26"}]}]},"pre":{"nativeSrc":"2777:3:26","nodeType":"YulBlock","src":"2777:3:26","statements":[]},"src":"2773:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2906:3:26","nodeType":"YulIdentifier","src":"2906:3:26"},{"name":"length","nativeSrc":"2911:6:26","nodeType":"YulIdentifier","src":"2911:6:26"}],"functionName":{"name":"add","nativeSrc":"2902:3:26","nodeType":"YulIdentifier","src":"2902:3:26"},"nativeSrc":"2902:16:26","nodeType":"YulFunctionCall","src":"2902:16:26"},{"kind":"number","nativeSrc":"2920:1:26","nodeType":"YulLiteral","src":"2920:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2895:6:26","nodeType":"YulIdentifier","src":"2895:6:26"},"nativeSrc":"2895:27:26","nodeType":"YulFunctionCall","src":"2895:27:26"},"nativeSrc":"2895:27:26","nodeType":"YulExpressionStatement","src":"2895:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2678:250:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2722:3:26","nodeType":"YulTypedName","src":"2722:3:26","type":""},{"name":"dst","nativeSrc":"2727:3:26","nodeType":"YulTypedName","src":"2727:3:26","type":""},{"name":"length","nativeSrc":"2732:6:26","nodeType":"YulTypedName","src":"2732:6:26","type":""}],"src":"2678:250:26"},{"body":{"nativeSrc":"2983:221:26","nodeType":"YulBlock","src":"2983:221:26","statements":[{"nativeSrc":"2993:26:26","nodeType":"YulVariableDeclaration","src":"2993:26:26","value":{"arguments":[{"name":"value","nativeSrc":"3013:5:26","nodeType":"YulIdentifier","src":"3013:5:26"}],"functionName":{"name":"mload","nativeSrc":"3007:5:26","nodeType":"YulIdentifier","src":"3007:5:26"},"nativeSrc":"3007:12:26","nodeType":"YulFunctionCall","src":"3007:12:26"},"variables":[{"name":"length","nativeSrc":"2997:6:26","nodeType":"YulTypedName","src":"2997:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3035:3:26","nodeType":"YulIdentifier","src":"3035:3:26"},{"name":"length","nativeSrc":"3040:6:26","nodeType":"YulIdentifier","src":"3040:6:26"}],"functionName":{"name":"mstore","nativeSrc":"3028:6:26","nodeType":"YulIdentifier","src":"3028:6:26"},"nativeSrc":"3028:19:26","nodeType":"YulFunctionCall","src":"3028:19:26"},"nativeSrc":"3028:19:26","nodeType":"YulExpressionStatement","src":"3028:19:26"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3095:5:26","nodeType":"YulIdentifier","src":"3095:5:26"},{"kind":"number","nativeSrc":"3102:4:26","nodeType":"YulLiteral","src":"3102:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3091:3:26","nodeType":"YulIdentifier","src":"3091:3:26"},"nativeSrc":"3091:16:26","nodeType":"YulFunctionCall","src":"3091:16:26"},{"arguments":[{"name":"pos","nativeSrc":"3113:3:26","nodeType":"YulIdentifier","src":"3113:3:26"},{"kind":"number","nativeSrc":"3118:4:26","nodeType":"YulLiteral","src":"3118:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3109:3:26","nodeType":"YulIdentifier","src":"3109:3:26"},"nativeSrc":"3109:14:26","nodeType":"YulFunctionCall","src":"3109:14:26"},{"name":"length","nativeSrc":"3125:6:26","nodeType":"YulIdentifier","src":"3125:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3056:34:26","nodeType":"YulIdentifier","src":"3056:34:26"},"nativeSrc":"3056:76:26","nodeType":"YulFunctionCall","src":"3056:76:26"},"nativeSrc":"3056:76:26","nodeType":"YulExpressionStatement","src":"3056:76:26"},{"nativeSrc":"3141:57:26","nodeType":"YulAssignment","src":"3141:57:26","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"3156:3:26","nodeType":"YulIdentifier","src":"3156:3:26"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3169:6:26","nodeType":"YulIdentifier","src":"3169:6:26"},{"kind":"number","nativeSrc":"3177:2:26","nodeType":"YulLiteral","src":"3177:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3165:3:26","nodeType":"YulIdentifier","src":"3165:3:26"},"nativeSrc":"3165:15:26","nodeType":"YulFunctionCall","src":"3165:15:26"},{"arguments":[{"kind":"number","nativeSrc":"3186:2:26","nodeType":"YulLiteral","src":"3186:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3182:3:26","nodeType":"YulIdentifier","src":"3182:3:26"},"nativeSrc":"3182:7:26","nodeType":"YulFunctionCall","src":"3182:7:26"}],"functionName":{"name":"and","nativeSrc":"3161:3:26","nodeType":"YulIdentifier","src":"3161:3:26"},"nativeSrc":"3161:29:26","nodeType":"YulFunctionCall","src":"3161:29:26"}],"functionName":{"name":"add","nativeSrc":"3152:3:26","nodeType":"YulIdentifier","src":"3152:3:26"},"nativeSrc":"3152:39:26","nodeType":"YulFunctionCall","src":"3152:39:26"},{"kind":"number","nativeSrc":"3193:4:26","nodeType":"YulLiteral","src":"3193:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3148:3:26","nodeType":"YulIdentifier","src":"3148:3:26"},"nativeSrc":"3148:50:26","nodeType":"YulFunctionCall","src":"3148:50:26"},"variableNames":[{"name":"end","nativeSrc":"3141:3:26","nodeType":"YulIdentifier","src":"3141:3:26"}]}]},"name":"abi_encode_string","nativeSrc":"2933:271:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2960:5:26","nodeType":"YulTypedName","src":"2960:5:26","type":""},{"name":"pos","nativeSrc":"2967:3:26","nodeType":"YulTypedName","src":"2967:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2975:3:26","nodeType":"YulTypedName","src":"2975:3:26","type":""}],"src":"2933:271:26"},{"body":{"nativeSrc":"3330:99:26","nodeType":"YulBlock","src":"3330:99:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3347:9:26","nodeType":"YulIdentifier","src":"3347:9:26"},{"kind":"number","nativeSrc":"3358:2:26","nodeType":"YulLiteral","src":"3358:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3340:6:26","nodeType":"YulIdentifier","src":"3340:6:26"},"nativeSrc":"3340:21:26","nodeType":"YulFunctionCall","src":"3340:21:26"},"nativeSrc":"3340:21:26","nodeType":"YulExpressionStatement","src":"3340:21:26"},{"nativeSrc":"3370:53:26","nodeType":"YulAssignment","src":"3370:53:26","value":{"arguments":[{"name":"value0","nativeSrc":"3396:6:26","nodeType":"YulIdentifier","src":"3396:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"3408:9:26","nodeType":"YulIdentifier","src":"3408:9:26"},{"kind":"number","nativeSrc":"3419:2:26","nodeType":"YulLiteral","src":"3419:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3404:3:26","nodeType":"YulIdentifier","src":"3404:3:26"},"nativeSrc":"3404:18:26","nodeType":"YulFunctionCall","src":"3404:18:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"3378:17:26","nodeType":"YulIdentifier","src":"3378:17:26"},"nativeSrc":"3378:45:26","nodeType":"YulFunctionCall","src":"3378:45:26"},"variableNames":[{"name":"tail","nativeSrc":"3370:4:26","nodeType":"YulIdentifier","src":"3370:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3209:220:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3299:9:26","nodeType":"YulTypedName","src":"3299:9:26","type":""},{"name":"value0","nativeSrc":"3310:6:26","nodeType":"YulTypedName","src":"3310:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3321:4:26","nodeType":"YulTypedName","src":"3321:4:26","type":""}],"src":"3209:220:26"},{"body":{"nativeSrc":"3533:101:26","nodeType":"YulBlock","src":"3533:101:26","statements":[{"nativeSrc":"3543:26:26","nodeType":"YulAssignment","src":"3543:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3555:9:26","nodeType":"YulIdentifier","src":"3555:9:26"},{"kind":"number","nativeSrc":"3566:2:26","nodeType":"YulLiteral","src":"3566:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3551:3:26","nodeType":"YulIdentifier","src":"3551:3:26"},"nativeSrc":"3551:18:26","nodeType":"YulFunctionCall","src":"3551:18:26"},"variableNames":[{"name":"tail","nativeSrc":"3543:4:26","nodeType":"YulIdentifier","src":"3543:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3585:9:26","nodeType":"YulIdentifier","src":"3585:9:26"},{"arguments":[{"name":"value0","nativeSrc":"3600:6:26","nodeType":"YulIdentifier","src":"3600:6:26"},{"kind":"number","nativeSrc":"3608:18:26","nodeType":"YulLiteral","src":"3608:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3596:3:26","nodeType":"YulIdentifier","src":"3596:3:26"},"nativeSrc":"3596:31:26","nodeType":"YulFunctionCall","src":"3596:31:26"}],"functionName":{"name":"mstore","nativeSrc":"3578:6:26","nodeType":"YulIdentifier","src":"3578:6:26"},"nativeSrc":"3578:50:26","nodeType":"YulFunctionCall","src":"3578:50:26"},"nativeSrc":"3578:50:26","nodeType":"YulExpressionStatement","src":"3578:50:26"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"3434:200:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3502:9:26","nodeType":"YulTypedName","src":"3502:9:26","type":""},{"name":"value0","nativeSrc":"3513:6:26","nodeType":"YulTypedName","src":"3513:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3524:4:26","nodeType":"YulTypedName","src":"3524:4:26","type":""}],"src":"3434:200:26"},{"body":{"nativeSrc":"3787:521:26","nodeType":"YulBlock","src":"3787:521:26","statements":[{"body":{"nativeSrc":"3834:16:26","nodeType":"YulBlock","src":"3834:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3843:1:26","nodeType":"YulLiteral","src":"3843:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3846:1:26","nodeType":"YulLiteral","src":"3846:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3836:6:26","nodeType":"YulIdentifier","src":"3836:6:26"},"nativeSrc":"3836:12:26","nodeType":"YulFunctionCall","src":"3836:12:26"},"nativeSrc":"3836:12:26","nodeType":"YulExpressionStatement","src":"3836:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3808:7:26","nodeType":"YulIdentifier","src":"3808:7:26"},{"name":"headStart","nativeSrc":"3817:9:26","nodeType":"YulIdentifier","src":"3817:9:26"}],"functionName":{"name":"sub","nativeSrc":"3804:3:26","nodeType":"YulIdentifier","src":"3804:3:26"},"nativeSrc":"3804:23:26","nodeType":"YulFunctionCall","src":"3804:23:26"},{"kind":"number","nativeSrc":"3829:3:26","nodeType":"YulLiteral","src":"3829:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"3800:3:26","nodeType":"YulIdentifier","src":"3800:3:26"},"nativeSrc":"3800:33:26","nodeType":"YulFunctionCall","src":"3800:33:26"},"nativeSrc":"3797:53:26","nodeType":"YulIf","src":"3797:53:26"},{"nativeSrc":"3859:63:26","nodeType":"YulAssignment","src":"3859:63:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3903:9:26","nodeType":"YulIdentifier","src":"3903:9:26"},{"name":"dataEnd","nativeSrc":"3914:7:26","nodeType":"YulIdentifier","src":"3914:7:26"}],"functionName":{"name":"abi_decode_struct_Origin_calldata","nativeSrc":"3869:33:26","nodeType":"YulIdentifier","src":"3869:33:26"},"nativeSrc":"3869:53:26","nodeType":"YulFunctionCall","src":"3869:53:26"},"variableNames":[{"name":"value0","nativeSrc":"3859:6:26","nodeType":"YulIdentifier","src":"3859:6:26"}]},{"nativeSrc":"3931:46:26","nodeType":"YulVariableDeclaration","src":"3931:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3962:9:26","nodeType":"YulIdentifier","src":"3962:9:26"},{"kind":"number","nativeSrc":"3973:2:26","nodeType":"YulLiteral","src":"3973:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3958:3:26","nodeType":"YulIdentifier","src":"3958:3:26"},"nativeSrc":"3958:18:26","nodeType":"YulFunctionCall","src":"3958:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"3945:12:26","nodeType":"YulIdentifier","src":"3945:12:26"},"nativeSrc":"3945:32:26","nodeType":"YulFunctionCall","src":"3945:32:26"},"variables":[{"name":"offset","nativeSrc":"3935:6:26","nodeType":"YulTypedName","src":"3935:6:26","type":""}]},{"body":{"nativeSrc":"4020:16:26","nodeType":"YulBlock","src":"4020:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4029:1:26","nodeType":"YulLiteral","src":"4029:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4032:1:26","nodeType":"YulLiteral","src":"4032:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4022:6:26","nodeType":"YulIdentifier","src":"4022:6:26"},"nativeSrc":"4022:12:26","nodeType":"YulFunctionCall","src":"4022:12:26"},"nativeSrc":"4022:12:26","nodeType":"YulExpressionStatement","src":"4022:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3992:6:26","nodeType":"YulIdentifier","src":"3992:6:26"},{"kind":"number","nativeSrc":"4000:18:26","nodeType":"YulLiteral","src":"4000:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3989:2:26","nodeType":"YulIdentifier","src":"3989:2:26"},"nativeSrc":"3989:30:26","nodeType":"YulFunctionCall","src":"3989:30:26"},"nativeSrc":"3986:50:26","nodeType":"YulIf","src":"3986:50:26"},{"nativeSrc":"4045:84:26","nodeType":"YulVariableDeclaration","src":"4045:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4101:9:26","nodeType":"YulIdentifier","src":"4101:9:26"},{"name":"offset","nativeSrc":"4112:6:26","nodeType":"YulIdentifier","src":"4112:6:26"}],"functionName":{"name":"add","nativeSrc":"4097:3:26","nodeType":"YulIdentifier","src":"4097:3:26"},"nativeSrc":"4097:22:26","nodeType":"YulFunctionCall","src":"4097:22:26"},{"name":"dataEnd","nativeSrc":"4121:7:26","nodeType":"YulIdentifier","src":"4121:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"4071:25:26","nodeType":"YulIdentifier","src":"4071:25:26"},"nativeSrc":"4071:58:26","nodeType":"YulFunctionCall","src":"4071:58:26"},"variables":[{"name":"value1_1","nativeSrc":"4049:8:26","nodeType":"YulTypedName","src":"4049:8:26","type":""},{"name":"value2_1","nativeSrc":"4059:8:26","nodeType":"YulTypedName","src":"4059:8:26","type":""}]},{"nativeSrc":"4138:18:26","nodeType":"YulAssignment","src":"4138:18:26","value":{"name":"value1_1","nativeSrc":"4148:8:26","nodeType":"YulIdentifier","src":"4148:8:26"},"variableNames":[{"name":"value1","nativeSrc":"4138:6:26","nodeType":"YulIdentifier","src":"4138:6:26"}]},{"nativeSrc":"4165:18:26","nodeType":"YulAssignment","src":"4165:18:26","value":{"name":"value2_1","nativeSrc":"4175:8:26","nodeType":"YulIdentifier","src":"4175:8:26"},"variableNames":[{"name":"value2","nativeSrc":"4165:6:26","nodeType":"YulIdentifier","src":"4165:6:26"}]},{"nativeSrc":"4192:46:26","nodeType":"YulVariableDeclaration","src":"4192:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4222:9:26","nodeType":"YulIdentifier","src":"4222:9:26"},{"kind":"number","nativeSrc":"4233:3:26","nodeType":"YulLiteral","src":"4233:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4218:3:26","nodeType":"YulIdentifier","src":"4218:3:26"},"nativeSrc":"4218:19:26","nodeType":"YulFunctionCall","src":"4218:19:26"}],"functionName":{"name":"calldataload","nativeSrc":"4205:12:26","nodeType":"YulIdentifier","src":"4205:12:26"},"nativeSrc":"4205:33:26","nodeType":"YulFunctionCall","src":"4205:33:26"},"variables":[{"name":"value","nativeSrc":"4196:5:26","nodeType":"YulTypedName","src":"4196:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4272:5:26","nodeType":"YulIdentifier","src":"4272:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4247:24:26","nodeType":"YulIdentifier","src":"4247:24:26"},"nativeSrc":"4247:31:26","nodeType":"YulFunctionCall","src":"4247:31:26"},"nativeSrc":"4247:31:26","nodeType":"YulExpressionStatement","src":"4247:31:26"},{"nativeSrc":"4287:15:26","nodeType":"YulAssignment","src":"4287:15:26","value":{"name":"value","nativeSrc":"4297:5:26","nodeType":"YulIdentifier","src":"4297:5:26"},"variableNames":[{"name":"value3","nativeSrc":"4287:6:26","nodeType":"YulIdentifier","src":"4287:6:26"}]}]},"name":"abi_decode_tuple_t_struct$_Origin_$638_calldata_ptrt_bytes_calldata_ptrt_address","nativeSrc":"3639:669:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3729:9:26","nodeType":"YulTypedName","src":"3729:9:26","type":""},{"name":"dataEnd","nativeSrc":"3740:7:26","nodeType":"YulTypedName","src":"3740:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3752:6:26","nodeType":"YulTypedName","src":"3752:6:26","type":""},{"name":"value1","nativeSrc":"3760:6:26","nodeType":"YulTypedName","src":"3760:6:26","type":""},{"name":"value2","nativeSrc":"3768:6:26","nodeType":"YulTypedName","src":"3768:6:26","type":""},{"name":"value3","nativeSrc":"3776:6:26","nodeType":"YulTypedName","src":"3776:6:26","type":""}],"src":"3639:669:26"},{"body":{"nativeSrc":"4408:92:26","nodeType":"YulBlock","src":"4408:92:26","statements":[{"nativeSrc":"4418:26:26","nodeType":"YulAssignment","src":"4418:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4430:9:26","nodeType":"YulIdentifier","src":"4430:9:26"},{"kind":"number","nativeSrc":"4441:2:26","nodeType":"YulLiteral","src":"4441:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4426:3:26","nodeType":"YulIdentifier","src":"4426:3:26"},"nativeSrc":"4426:18:26","nodeType":"YulFunctionCall","src":"4426:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4418:4:26","nodeType":"YulIdentifier","src":"4418:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4460:9:26","nodeType":"YulIdentifier","src":"4460:9:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4485:6:26","nodeType":"YulIdentifier","src":"4485:6:26"}],"functionName":{"name":"iszero","nativeSrc":"4478:6:26","nodeType":"YulIdentifier","src":"4478:6:26"},"nativeSrc":"4478:14:26","nodeType":"YulFunctionCall","src":"4478:14:26"}],"functionName":{"name":"iszero","nativeSrc":"4471:6:26","nodeType":"YulIdentifier","src":"4471:6:26"},"nativeSrc":"4471:22:26","nodeType":"YulFunctionCall","src":"4471:22:26"}],"functionName":{"name":"mstore","nativeSrc":"4453:6:26","nodeType":"YulIdentifier","src":"4453:6:26"},"nativeSrc":"4453:41:26","nodeType":"YulFunctionCall","src":"4453:41:26"},"nativeSrc":"4453:41:26","nodeType":"YulExpressionStatement","src":"4453:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"4313:187:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4377:9:26","nodeType":"YulTypedName","src":"4377:9:26","type":""},{"name":"value0","nativeSrc":"4388:6:26","nodeType":"YulTypedName","src":"4388:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4399:4:26","nodeType":"YulTypedName","src":"4399:4:26","type":""}],"src":"4313:187:26"},{"body":{"nativeSrc":"4606:102:26","nodeType":"YulBlock","src":"4606:102:26","statements":[{"nativeSrc":"4616:26:26","nodeType":"YulAssignment","src":"4616:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4628:9:26","nodeType":"YulIdentifier","src":"4628:9:26"},{"kind":"number","nativeSrc":"4639:2:26","nodeType":"YulLiteral","src":"4639:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4624:3:26","nodeType":"YulIdentifier","src":"4624:3:26"},"nativeSrc":"4624:18:26","nodeType":"YulFunctionCall","src":"4624:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4616:4:26","nodeType":"YulIdentifier","src":"4616:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4658:9:26","nodeType":"YulIdentifier","src":"4658:9:26"},{"arguments":[{"name":"value0","nativeSrc":"4673:6:26","nodeType":"YulIdentifier","src":"4673:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4689:3:26","nodeType":"YulLiteral","src":"4689:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"4694:1:26","nodeType":"YulLiteral","src":"4694:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4685:3:26","nodeType":"YulIdentifier","src":"4685:3:26"},"nativeSrc":"4685:11:26","nodeType":"YulFunctionCall","src":"4685:11:26"},{"kind":"number","nativeSrc":"4698:1:26","nodeType":"YulLiteral","src":"4698:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4681:3:26","nodeType":"YulIdentifier","src":"4681:3:26"},"nativeSrc":"4681:19:26","nodeType":"YulFunctionCall","src":"4681:19:26"}],"functionName":{"name":"and","nativeSrc":"4669:3:26","nodeType":"YulIdentifier","src":"4669:3:26"},"nativeSrc":"4669:32:26","nodeType":"YulFunctionCall","src":"4669:32:26"}],"functionName":{"name":"mstore","nativeSrc":"4651:6:26","nodeType":"YulIdentifier","src":"4651:6:26"},"nativeSrc":"4651:51:26","nodeType":"YulFunctionCall","src":"4651:51:26"},"nativeSrc":"4651:51:26","nodeType":"YulExpressionStatement","src":"4651:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4505:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4575:9:26","nodeType":"YulTypedName","src":"4575:9:26","type":""},{"name":"value0","nativeSrc":"4586:6:26","nodeType":"YulTypedName","src":"4586:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4597:4:26","nodeType":"YulTypedName","src":"4597:4:26","type":""}],"src":"4505:203:26"},{"body":{"nativeSrc":"4782:115:26","nodeType":"YulBlock","src":"4782:115:26","statements":[{"body":{"nativeSrc":"4828:16:26","nodeType":"YulBlock","src":"4828:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4837:1:26","nodeType":"YulLiteral","src":"4837:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"4840:1:26","nodeType":"YulLiteral","src":"4840:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4830:6:26","nodeType":"YulIdentifier","src":"4830:6:26"},"nativeSrc":"4830:12:26","nodeType":"YulFunctionCall","src":"4830:12:26"},"nativeSrc":"4830:12:26","nodeType":"YulExpressionStatement","src":"4830:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4803:7:26","nodeType":"YulIdentifier","src":"4803:7:26"},{"name":"headStart","nativeSrc":"4812:9:26","nodeType":"YulIdentifier","src":"4812:9:26"}],"functionName":{"name":"sub","nativeSrc":"4799:3:26","nodeType":"YulIdentifier","src":"4799:3:26"},"nativeSrc":"4799:23:26","nodeType":"YulFunctionCall","src":"4799:23:26"},{"kind":"number","nativeSrc":"4824:2:26","nodeType":"YulLiteral","src":"4824:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4795:3:26","nodeType":"YulIdentifier","src":"4795:3:26"},"nativeSrc":"4795:32:26","nodeType":"YulFunctionCall","src":"4795:32:26"},"nativeSrc":"4792:52:26","nodeType":"YulIf","src":"4792:52:26"},{"nativeSrc":"4853:38:26","nodeType":"YulAssignment","src":"4853:38:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4881:9:26","nodeType":"YulIdentifier","src":"4881:9:26"}],"functionName":{"name":"abi_decode_uint32","nativeSrc":"4863:17:26","nodeType":"YulIdentifier","src":"4863:17:26"},"nativeSrc":"4863:28:26","nodeType":"YulFunctionCall","src":"4863:28:26"},"variableNames":[{"name":"value0","nativeSrc":"4853:6:26","nodeType":"YulIdentifier","src":"4853:6:26"}]}]},"name":"abi_decode_tuple_t_uint32","nativeSrc":"4713:184:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4748:9:26","nodeType":"YulTypedName","src":"4748:9:26","type":""},{"name":"dataEnd","nativeSrc":"4759:7:26","nodeType":"YulTypedName","src":"4759:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4771:6:26","nodeType":"YulTypedName","src":"4771:6:26","type":""}],"src":"4713:184:26"},{"body":{"nativeSrc":"5003:76:26","nodeType":"YulBlock","src":"5003:76:26","statements":[{"nativeSrc":"5013:26:26","nodeType":"YulAssignment","src":"5013:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5025:9:26","nodeType":"YulIdentifier","src":"5025:9:26"},{"kind":"number","nativeSrc":"5036:2:26","nodeType":"YulLiteral","src":"5036:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5021:3:26","nodeType":"YulIdentifier","src":"5021:3:26"},"nativeSrc":"5021:18:26","nodeType":"YulFunctionCall","src":"5021:18:26"},"variableNames":[{"name":"tail","nativeSrc":"5013:4:26","nodeType":"YulIdentifier","src":"5013:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5055:9:26","nodeType":"YulIdentifier","src":"5055:9:26"},{"name":"value0","nativeSrc":"5066:6:26","nodeType":"YulIdentifier","src":"5066:6:26"}],"functionName":{"name":"mstore","nativeSrc":"5048:6:26","nodeType":"YulIdentifier","src":"5048:6:26"},"nativeSrc":"5048:25:26","nodeType":"YulFunctionCall","src":"5048:25:26"},"nativeSrc":"5048:25:26","nodeType":"YulExpressionStatement","src":"5048:25:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"4902:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4972:9:26","nodeType":"YulTypedName","src":"4972:9:26","type":""},{"name":"value0","nativeSrc":"4983:6:26","nodeType":"YulTypedName","src":"4983:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4994:4:26","nodeType":"YulTypedName","src":"4994:4:26","type":""}],"src":"4902:177:26"},{"body":{"nativeSrc":"5154:177:26","nodeType":"YulBlock","src":"5154:177:26","statements":[{"body":{"nativeSrc":"5200:16:26","nodeType":"YulBlock","src":"5200:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5209:1:26","nodeType":"YulLiteral","src":"5209:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5212:1:26","nodeType":"YulLiteral","src":"5212:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5202:6:26","nodeType":"YulIdentifier","src":"5202:6:26"},"nativeSrc":"5202:12:26","nodeType":"YulFunctionCall","src":"5202:12:26"},"nativeSrc":"5202:12:26","nodeType":"YulExpressionStatement","src":"5202:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5175:7:26","nodeType":"YulIdentifier","src":"5175:7:26"},{"name":"headStart","nativeSrc":"5184:9:26","nodeType":"YulIdentifier","src":"5184:9:26"}],"functionName":{"name":"sub","nativeSrc":"5171:3:26","nodeType":"YulIdentifier","src":"5171:3:26"},"nativeSrc":"5171:23:26","nodeType":"YulFunctionCall","src":"5171:23:26"},{"kind":"number","nativeSrc":"5196:2:26","nodeType":"YulLiteral","src":"5196:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5167:3:26","nodeType":"YulIdentifier","src":"5167:3:26"},"nativeSrc":"5167:32:26","nodeType":"YulFunctionCall","src":"5167:32:26"},"nativeSrc":"5164:52:26","nodeType":"YulIf","src":"5164:52:26"},{"nativeSrc":"5225:36:26","nodeType":"YulVariableDeclaration","src":"5225:36:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5251:9:26","nodeType":"YulIdentifier","src":"5251:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"5238:12:26","nodeType":"YulIdentifier","src":"5238:12:26"},"nativeSrc":"5238:23:26","nodeType":"YulFunctionCall","src":"5238:23:26"},"variables":[{"name":"value","nativeSrc":"5229:5:26","nodeType":"YulTypedName","src":"5229:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5295:5:26","nodeType":"YulIdentifier","src":"5295:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5270:24:26","nodeType":"YulIdentifier","src":"5270:24:26"},"nativeSrc":"5270:31:26","nodeType":"YulFunctionCall","src":"5270:31:26"},"nativeSrc":"5270:31:26","nodeType":"YulExpressionStatement","src":"5270:31:26"},{"nativeSrc":"5310:15:26","nodeType":"YulAssignment","src":"5310:15:26","value":{"name":"value","nativeSrc":"5320:5:26","nodeType":"YulIdentifier","src":"5320:5:26"},"variableNames":[{"name":"value0","nativeSrc":"5310:6:26","nodeType":"YulIdentifier","src":"5310:6:26"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5084:247:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5120:9:26","nodeType":"YulTypedName","src":"5120:9:26","type":""},{"name":"dataEnd","nativeSrc":"5131:7:26","nodeType":"YulTypedName","src":"5131:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5143:6:26","nodeType":"YulTypedName","src":"5143:6:26","type":""}],"src":"5084:247:26"},{"body":{"nativeSrc":"5368:95:26","nodeType":"YulBlock","src":"5368:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5385:1:26","nodeType":"YulLiteral","src":"5385:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5392:3:26","nodeType":"YulLiteral","src":"5392:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"5397:10:26","nodeType":"YulLiteral","src":"5397:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5388:3:26","nodeType":"YulIdentifier","src":"5388:3:26"},"nativeSrc":"5388:20:26","nodeType":"YulFunctionCall","src":"5388:20:26"}],"functionName":{"name":"mstore","nativeSrc":"5378:6:26","nodeType":"YulIdentifier","src":"5378:6:26"},"nativeSrc":"5378:31:26","nodeType":"YulFunctionCall","src":"5378:31:26"},"nativeSrc":"5378:31:26","nodeType":"YulExpressionStatement","src":"5378:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5425:1:26","nodeType":"YulLiteral","src":"5425:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"5428:4:26","nodeType":"YulLiteral","src":"5428:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5418:6:26","nodeType":"YulIdentifier","src":"5418:6:26"},"nativeSrc":"5418:15:26","nodeType":"YulFunctionCall","src":"5418:15:26"},"nativeSrc":"5418:15:26","nodeType":"YulExpressionStatement","src":"5418:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5449:1:26","nodeType":"YulLiteral","src":"5449:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5452:4:26","nodeType":"YulLiteral","src":"5452:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5442:6:26","nodeType":"YulIdentifier","src":"5442:6:26"},"nativeSrc":"5442:15:26","nodeType":"YulFunctionCall","src":"5442:15:26"},"nativeSrc":"5442:15:26","nodeType":"YulExpressionStatement","src":"5442:15:26"}]},"name":"panic_error_0x41","nativeSrc":"5336:127:26","nodeType":"YulFunctionDefinition","src":"5336:127:26"},{"body":{"nativeSrc":"5543:557:26","nodeType":"YulBlock","src":"5543:557:26","statements":[{"nativeSrc":"5553:28:26","nodeType":"YulVariableDeclaration","src":"5553:28:26","value":{"kind":"number","nativeSrc":"5563:18:26","nodeType":"YulLiteral","src":"5563:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"5557:2:26","nodeType":"YulTypedName","src":"5557:2:26","type":""}]},{"body":{"nativeSrc":"5608:22:26","nodeType":"YulBlock","src":"5608:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5610:16:26","nodeType":"YulIdentifier","src":"5610:16:26"},"nativeSrc":"5610:18:26","nodeType":"YulFunctionCall","src":"5610:18:26"},"nativeSrc":"5610:18:26","nodeType":"YulExpressionStatement","src":"5610:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5596:6:26","nodeType":"YulIdentifier","src":"5596:6:26"},{"name":"_1","nativeSrc":"5604:2:26","nodeType":"YulIdentifier","src":"5604:2:26"}],"functionName":{"name":"gt","nativeSrc":"5593:2:26","nodeType":"YulIdentifier","src":"5593:2:26"},"nativeSrc":"5593:14:26","nodeType":"YulFunctionCall","src":"5593:14:26"},"nativeSrc":"5590:40:26","nodeType":"YulIf","src":"5590:40:26"},{"nativeSrc":"5639:17:26","nodeType":"YulVariableDeclaration","src":"5639:17:26","value":{"arguments":[{"kind":"number","nativeSrc":"5653:2:26","nodeType":"YulLiteral","src":"5653:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5649:3:26","nodeType":"YulIdentifier","src":"5649:3:26"},"nativeSrc":"5649:7:26","nodeType":"YulFunctionCall","src":"5649:7:26"},"variables":[{"name":"_2","nativeSrc":"5643:2:26","nodeType":"YulTypedName","src":"5643:2:26","type":""}]},{"nativeSrc":"5665:23:26","nodeType":"YulVariableDeclaration","src":"5665:23:26","value":{"arguments":[{"kind":"number","nativeSrc":"5685:2:26","nodeType":"YulLiteral","src":"5685:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"5679:5:26","nodeType":"YulIdentifier","src":"5679:5:26"},"nativeSrc":"5679:9:26","nodeType":"YulFunctionCall","src":"5679:9:26"},"variables":[{"name":"memPtr","nativeSrc":"5669:6:26","nodeType":"YulTypedName","src":"5669:6:26","type":""}]},{"nativeSrc":"5697:73:26","nodeType":"YulVariableDeclaration","src":"5697:73:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"5719:6:26","nodeType":"YulIdentifier","src":"5719:6:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"5743:6:26","nodeType":"YulIdentifier","src":"5743:6:26"},{"kind":"number","nativeSrc":"5751:2:26","nodeType":"YulLiteral","src":"5751:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5739:3:26","nodeType":"YulIdentifier","src":"5739:3:26"},"nativeSrc":"5739:15:26","nodeType":"YulFunctionCall","src":"5739:15:26"},{"name":"_2","nativeSrc":"5756:2:26","nodeType":"YulIdentifier","src":"5756:2:26"}],"functionName":{"name":"and","nativeSrc":"5735:3:26","nodeType":"YulIdentifier","src":"5735:3:26"},"nativeSrc":"5735:24:26","nodeType":"YulFunctionCall","src":"5735:24:26"},{"kind":"number","nativeSrc":"5761:2:26","nodeType":"YulLiteral","src":"5761:2:26","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"5731:3:26","nodeType":"YulIdentifier","src":"5731:3:26"},"nativeSrc":"5731:33:26","nodeType":"YulFunctionCall","src":"5731:33:26"},{"name":"_2","nativeSrc":"5766:2:26","nodeType":"YulIdentifier","src":"5766:2:26"}],"functionName":{"name":"and","nativeSrc":"5727:3:26","nodeType":"YulIdentifier","src":"5727:3:26"},"nativeSrc":"5727:42:26","nodeType":"YulFunctionCall","src":"5727:42:26"}],"functionName":{"name":"add","nativeSrc":"5715:3:26","nodeType":"YulIdentifier","src":"5715:3:26"},"nativeSrc":"5715:55:26","nodeType":"YulFunctionCall","src":"5715:55:26"},"variables":[{"name":"newFreePtr","nativeSrc":"5701:10:26","nodeType":"YulTypedName","src":"5701:10:26","type":""}]},{"body":{"nativeSrc":"5829:22:26","nodeType":"YulBlock","src":"5829:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5831:16:26","nodeType":"YulIdentifier","src":"5831:16:26"},"nativeSrc":"5831:18:26","nodeType":"YulFunctionCall","src":"5831:18:26"},"nativeSrc":"5831:18:26","nodeType":"YulExpressionStatement","src":"5831:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"5788:10:26","nodeType":"YulIdentifier","src":"5788:10:26"},{"name":"_1","nativeSrc":"5800:2:26","nodeType":"YulIdentifier","src":"5800:2:26"}],"functionName":{"name":"gt","nativeSrc":"5785:2:26","nodeType":"YulIdentifier","src":"5785:2:26"},"nativeSrc":"5785:18:26","nodeType":"YulFunctionCall","src":"5785:18:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"5808:10:26","nodeType":"YulIdentifier","src":"5808:10:26"},{"name":"memPtr","nativeSrc":"5820:6:26","nodeType":"YulIdentifier","src":"5820:6:26"}],"functionName":{"name":"lt","nativeSrc":"5805:2:26","nodeType":"YulIdentifier","src":"5805:2:26"},"nativeSrc":"5805:22:26","nodeType":"YulFunctionCall","src":"5805:22:26"}],"functionName":{"name":"or","nativeSrc":"5782:2:26","nodeType":"YulIdentifier","src":"5782:2:26"},"nativeSrc":"5782:46:26","nodeType":"YulFunctionCall","src":"5782:46:26"},"nativeSrc":"5779:72:26","nodeType":"YulIf","src":"5779:72:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5867:2:26","nodeType":"YulLiteral","src":"5867:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"5871:10:26","nodeType":"YulIdentifier","src":"5871:10:26"}],"functionName":{"name":"mstore","nativeSrc":"5860:6:26","nodeType":"YulIdentifier","src":"5860:6:26"},"nativeSrc":"5860:22:26","nodeType":"YulFunctionCall","src":"5860:22:26"},"nativeSrc":"5860:22:26","nodeType":"YulExpressionStatement","src":"5860:22:26"},{"nativeSrc":"5891:15:26","nodeType":"YulAssignment","src":"5891:15:26","value":{"name":"memPtr","nativeSrc":"5900:6:26","nodeType":"YulIdentifier","src":"5900:6:26"},"variableNames":[{"name":"array","nativeSrc":"5891:5:26","nodeType":"YulIdentifier","src":"5891:5:26"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"5922:6:26","nodeType":"YulIdentifier","src":"5922:6:26"},{"name":"length","nativeSrc":"5930:6:26","nodeType":"YulIdentifier","src":"5930:6:26"}],"functionName":{"name":"mstore","nativeSrc":"5915:6:26","nodeType":"YulIdentifier","src":"5915:6:26"},"nativeSrc":"5915:22:26","nodeType":"YulFunctionCall","src":"5915:22:26"},"nativeSrc":"5915:22:26","nodeType":"YulExpressionStatement","src":"5915:22:26"},{"body":{"nativeSrc":"5975:16:26","nodeType":"YulBlock","src":"5975:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5984:1:26","nodeType":"YulLiteral","src":"5984:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5987:1:26","nodeType":"YulLiteral","src":"5987:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5977:6:26","nodeType":"YulIdentifier","src":"5977:6:26"},"nativeSrc":"5977:12:26","nodeType":"YulFunctionCall","src":"5977:12:26"},"nativeSrc":"5977:12:26","nodeType":"YulExpressionStatement","src":"5977:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5956:3:26","nodeType":"YulIdentifier","src":"5956:3:26"},{"name":"length","nativeSrc":"5961:6:26","nodeType":"YulIdentifier","src":"5961:6:26"}],"functionName":{"name":"add","nativeSrc":"5952:3:26","nodeType":"YulIdentifier","src":"5952:3:26"},"nativeSrc":"5952:16:26","nodeType":"YulFunctionCall","src":"5952:16:26"},{"name":"end","nativeSrc":"5970:3:26","nodeType":"YulIdentifier","src":"5970:3:26"}],"functionName":{"name":"gt","nativeSrc":"5949:2:26","nodeType":"YulIdentifier","src":"5949:2:26"},"nativeSrc":"5949:25:26","nodeType":"YulFunctionCall","src":"5949:25:26"},"nativeSrc":"5946:45:26","nodeType":"YulIf","src":"5946:45:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6017:6:26","nodeType":"YulIdentifier","src":"6017:6:26"},{"kind":"number","nativeSrc":"6025:4:26","nodeType":"YulLiteral","src":"6025:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6013:3:26","nodeType":"YulIdentifier","src":"6013:3:26"},"nativeSrc":"6013:17:26","nodeType":"YulFunctionCall","src":"6013:17:26"},{"name":"src","nativeSrc":"6032:3:26","nodeType":"YulIdentifier","src":"6032:3:26"},{"name":"length","nativeSrc":"6037:6:26","nodeType":"YulIdentifier","src":"6037:6:26"}],"functionName":{"name":"calldatacopy","nativeSrc":"6000:12:26","nodeType":"YulIdentifier","src":"6000:12:26"},"nativeSrc":"6000:44:26","nodeType":"YulFunctionCall","src":"6000:44:26"},"nativeSrc":"6000:44:26","nodeType":"YulExpressionStatement","src":"6000:44:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6068:6:26","nodeType":"YulIdentifier","src":"6068:6:26"},{"name":"length","nativeSrc":"6076:6:26","nodeType":"YulIdentifier","src":"6076:6:26"}],"functionName":{"name":"add","nativeSrc":"6064:3:26","nodeType":"YulIdentifier","src":"6064:3:26"},"nativeSrc":"6064:19:26","nodeType":"YulFunctionCall","src":"6064:19:26"},{"kind":"number","nativeSrc":"6085:4:26","nodeType":"YulLiteral","src":"6085:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6060:3:26","nodeType":"YulIdentifier","src":"6060:3:26"},"nativeSrc":"6060:30:26","nodeType":"YulFunctionCall","src":"6060:30:26"},{"kind":"number","nativeSrc":"6092:1:26","nodeType":"YulLiteral","src":"6092:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6053:6:26","nodeType":"YulIdentifier","src":"6053:6:26"},"nativeSrc":"6053:41:26","nodeType":"YulFunctionCall","src":"6053:41:26"},"nativeSrc":"6053:41:26","nodeType":"YulExpressionStatement","src":"6053:41:26"}]},"name":"abi_decode_available_length_string","nativeSrc":"5468:632:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"5512:3:26","nodeType":"YulTypedName","src":"5512:3:26","type":""},{"name":"length","nativeSrc":"5517:6:26","nodeType":"YulTypedName","src":"5517:6:26","type":""},{"name":"end","nativeSrc":"5525:3:26","nodeType":"YulTypedName","src":"5525:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"5533:5:26","nodeType":"YulTypedName","src":"5533:5:26","type":""}],"src":"5468:632:26"},{"body":{"nativeSrc":"6158:169:26","nodeType":"YulBlock","src":"6158:169:26","statements":[{"body":{"nativeSrc":"6207:16:26","nodeType":"YulBlock","src":"6207:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6216:1:26","nodeType":"YulLiteral","src":"6216:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6219:1:26","nodeType":"YulLiteral","src":"6219:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6209:6:26","nodeType":"YulIdentifier","src":"6209:6:26"},"nativeSrc":"6209:12:26","nodeType":"YulFunctionCall","src":"6209:12:26"},"nativeSrc":"6209:12:26","nodeType":"YulExpressionStatement","src":"6209:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6186:6:26","nodeType":"YulIdentifier","src":"6186:6:26"},{"kind":"number","nativeSrc":"6194:4:26","nodeType":"YulLiteral","src":"6194:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6182:3:26","nodeType":"YulIdentifier","src":"6182:3:26"},"nativeSrc":"6182:17:26","nodeType":"YulFunctionCall","src":"6182:17:26"},{"name":"end","nativeSrc":"6201:3:26","nodeType":"YulIdentifier","src":"6201:3:26"}],"functionName":{"name":"slt","nativeSrc":"6178:3:26","nodeType":"YulIdentifier","src":"6178:3:26"},"nativeSrc":"6178:27:26","nodeType":"YulFunctionCall","src":"6178:27:26"}],"functionName":{"name":"iszero","nativeSrc":"6171:6:26","nodeType":"YulIdentifier","src":"6171:6:26"},"nativeSrc":"6171:35:26","nodeType":"YulFunctionCall","src":"6171:35:26"},"nativeSrc":"6168:55:26","nodeType":"YulIf","src":"6168:55:26"},{"nativeSrc":"6232:89:26","nodeType":"YulAssignment","src":"6232:89:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6280:6:26","nodeType":"YulIdentifier","src":"6280:6:26"},{"kind":"number","nativeSrc":"6288:4:26","nodeType":"YulLiteral","src":"6288:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6276:3:26","nodeType":"YulIdentifier","src":"6276:3:26"},"nativeSrc":"6276:17:26","nodeType":"YulFunctionCall","src":"6276:17:26"},{"arguments":[{"name":"offset","nativeSrc":"6308:6:26","nodeType":"YulIdentifier","src":"6308:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"6295:12:26","nodeType":"YulIdentifier","src":"6295:12:26"},"nativeSrc":"6295:20:26","nodeType":"YulFunctionCall","src":"6295:20:26"},{"name":"end","nativeSrc":"6317:3:26","nodeType":"YulIdentifier","src":"6317:3:26"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"6241:34:26","nodeType":"YulIdentifier","src":"6241:34:26"},"nativeSrc":"6241:80:26","nodeType":"YulFunctionCall","src":"6241:80:26"},"variableNames":[{"name":"array","nativeSrc":"6232:5:26","nodeType":"YulIdentifier","src":"6232:5:26"}]}]},"name":"abi_decode_string","nativeSrc":"6105:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6132:6:26","nodeType":"YulTypedName","src":"6132:6:26","type":""},{"name":"end","nativeSrc":"6140:3:26","nodeType":"YulTypedName","src":"6140:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6148:5:26","nodeType":"YulTypedName","src":"6148:5:26","type":""}],"src":"6105:222:26"},{"body":{"nativeSrc":"6464:570:26","nodeType":"YulBlock","src":"6464:570:26","statements":[{"body":{"nativeSrc":"6510:16:26","nodeType":"YulBlock","src":"6510:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6519:1:26","nodeType":"YulLiteral","src":"6519:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6522:1:26","nodeType":"YulLiteral","src":"6522:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6512:6:26","nodeType":"YulIdentifier","src":"6512:6:26"},"nativeSrc":"6512:12:26","nodeType":"YulFunctionCall","src":"6512:12:26"},"nativeSrc":"6512:12:26","nodeType":"YulExpressionStatement","src":"6512:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6485:7:26","nodeType":"YulIdentifier","src":"6485:7:26"},{"name":"headStart","nativeSrc":"6494:9:26","nodeType":"YulIdentifier","src":"6494:9:26"}],"functionName":{"name":"sub","nativeSrc":"6481:3:26","nodeType":"YulIdentifier","src":"6481:3:26"},"nativeSrc":"6481:23:26","nodeType":"YulFunctionCall","src":"6481:23:26"},{"kind":"number","nativeSrc":"6506:2:26","nodeType":"YulLiteral","src":"6506:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6477:3:26","nodeType":"YulIdentifier","src":"6477:3:26"},"nativeSrc":"6477:32:26","nodeType":"YulFunctionCall","src":"6477:32:26"},"nativeSrc":"6474:52:26","nodeType":"YulIf","src":"6474:52:26"},{"nativeSrc":"6535:38:26","nodeType":"YulAssignment","src":"6535:38:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6563:9:26","nodeType":"YulIdentifier","src":"6563:9:26"}],"functionName":{"name":"abi_decode_uint32","nativeSrc":"6545:17:26","nodeType":"YulIdentifier","src":"6545:17:26"},"nativeSrc":"6545:28:26","nodeType":"YulFunctionCall","src":"6545:28:26"},"variableNames":[{"name":"value0","nativeSrc":"6535:6:26","nodeType":"YulIdentifier","src":"6535:6:26"}]},{"nativeSrc":"6582:46:26","nodeType":"YulVariableDeclaration","src":"6582:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6613:9:26","nodeType":"YulIdentifier","src":"6613:9:26"},{"kind":"number","nativeSrc":"6624:2:26","nodeType":"YulLiteral","src":"6624:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6609:3:26","nodeType":"YulIdentifier","src":"6609:3:26"},"nativeSrc":"6609:18:26","nodeType":"YulFunctionCall","src":"6609:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"6596:12:26","nodeType":"YulIdentifier","src":"6596:12:26"},"nativeSrc":"6596:32:26","nodeType":"YulFunctionCall","src":"6596:32:26"},"variables":[{"name":"offset","nativeSrc":"6586:6:26","nodeType":"YulTypedName","src":"6586:6:26","type":""}]},{"nativeSrc":"6637:28:26","nodeType":"YulVariableDeclaration","src":"6637:28:26","value":{"kind":"number","nativeSrc":"6647:18:26","nodeType":"YulLiteral","src":"6647:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"6641:2:26","nodeType":"YulTypedName","src":"6641:2:26","type":""}]},{"body":{"nativeSrc":"6692:16:26","nodeType":"YulBlock","src":"6692:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6701:1:26","nodeType":"YulLiteral","src":"6701:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6704:1:26","nodeType":"YulLiteral","src":"6704:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6694:6:26","nodeType":"YulIdentifier","src":"6694:6:26"},"nativeSrc":"6694:12:26","nodeType":"YulFunctionCall","src":"6694:12:26"},"nativeSrc":"6694:12:26","nodeType":"YulExpressionStatement","src":"6694:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6680:6:26","nodeType":"YulIdentifier","src":"6680:6:26"},{"name":"_1","nativeSrc":"6688:2:26","nodeType":"YulIdentifier","src":"6688:2:26"}],"functionName":{"name":"gt","nativeSrc":"6677:2:26","nodeType":"YulIdentifier","src":"6677:2:26"},"nativeSrc":"6677:14:26","nodeType":"YulFunctionCall","src":"6677:14:26"},"nativeSrc":"6674:34:26","nodeType":"YulIf","src":"6674:34:26"},{"nativeSrc":"6717:60:26","nodeType":"YulAssignment","src":"6717:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6749:9:26","nodeType":"YulIdentifier","src":"6749:9:26"},{"name":"offset","nativeSrc":"6760:6:26","nodeType":"YulIdentifier","src":"6760:6:26"}],"functionName":{"name":"add","nativeSrc":"6745:3:26","nodeType":"YulIdentifier","src":"6745:3:26"},"nativeSrc":"6745:22:26","nodeType":"YulFunctionCall","src":"6745:22:26"},{"name":"dataEnd","nativeSrc":"6769:7:26","nodeType":"YulIdentifier","src":"6769:7:26"}],"functionName":{"name":"abi_decode_string","nativeSrc":"6727:17:26","nodeType":"YulIdentifier","src":"6727:17:26"},"nativeSrc":"6727:50:26","nodeType":"YulFunctionCall","src":"6727:50:26"},"variableNames":[{"name":"value1","nativeSrc":"6717:6:26","nodeType":"YulIdentifier","src":"6717:6:26"}]},{"nativeSrc":"6786:48:26","nodeType":"YulVariableDeclaration","src":"6786:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6819:9:26","nodeType":"YulIdentifier","src":"6819:9:26"},{"kind":"number","nativeSrc":"6830:2:26","nodeType":"YulLiteral","src":"6830:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6815:3:26","nodeType":"YulIdentifier","src":"6815:3:26"},"nativeSrc":"6815:18:26","nodeType":"YulFunctionCall","src":"6815:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"6802:12:26","nodeType":"YulIdentifier","src":"6802:12:26"},"nativeSrc":"6802:32:26","nodeType":"YulFunctionCall","src":"6802:32:26"},"variables":[{"name":"offset_1","nativeSrc":"6790:8:26","nodeType":"YulTypedName","src":"6790:8:26","type":""}]},{"body":{"nativeSrc":"6863:16:26","nodeType":"YulBlock","src":"6863:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6872:1:26","nodeType":"YulLiteral","src":"6872:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6875:1:26","nodeType":"YulLiteral","src":"6875:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6865:6:26","nodeType":"YulIdentifier","src":"6865:6:26"},"nativeSrc":"6865:12:26","nodeType":"YulFunctionCall","src":"6865:12:26"},"nativeSrc":"6865:12:26","nodeType":"YulExpressionStatement","src":"6865:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"6849:8:26","nodeType":"YulIdentifier","src":"6849:8:26"},{"name":"_1","nativeSrc":"6859:2:26","nodeType":"YulIdentifier","src":"6859:2:26"}],"functionName":{"name":"gt","nativeSrc":"6846:2:26","nodeType":"YulIdentifier","src":"6846:2:26"},"nativeSrc":"6846:16:26","nodeType":"YulFunctionCall","src":"6846:16:26"},"nativeSrc":"6843:36:26","nodeType":"YulIf","src":"6843:36:26"},{"nativeSrc":"6888:86:26","nodeType":"YulVariableDeclaration","src":"6888:86:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6944:9:26","nodeType":"YulIdentifier","src":"6944:9:26"},{"name":"offset_1","nativeSrc":"6955:8:26","nodeType":"YulIdentifier","src":"6955:8:26"}],"functionName":{"name":"add","nativeSrc":"6940:3:26","nodeType":"YulIdentifier","src":"6940:3:26"},"nativeSrc":"6940:24:26","nodeType":"YulFunctionCall","src":"6940:24:26"},{"name":"dataEnd","nativeSrc":"6966:7:26","nodeType":"YulIdentifier","src":"6966:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"6914:25:26","nodeType":"YulIdentifier","src":"6914:25:26"},"nativeSrc":"6914:60:26","nodeType":"YulFunctionCall","src":"6914:60:26"},"variables":[{"name":"value2_1","nativeSrc":"6892:8:26","nodeType":"YulTypedName","src":"6892:8:26","type":""},{"name":"value3_1","nativeSrc":"6902:8:26","nodeType":"YulTypedName","src":"6902:8:26","type":""}]},{"nativeSrc":"6983:18:26","nodeType":"YulAssignment","src":"6983:18:26","value":{"name":"value2_1","nativeSrc":"6993:8:26","nodeType":"YulIdentifier","src":"6993:8:26"},"variableNames":[{"name":"value2","nativeSrc":"6983:6:26","nodeType":"YulIdentifier","src":"6983:6:26"}]},{"nativeSrc":"7010:18:26","nodeType":"YulAssignment","src":"7010:18:26","value":{"name":"value3_1","nativeSrc":"7020:8:26","nodeType":"YulIdentifier","src":"7020:8:26"},"variableNames":[{"name":"value3","nativeSrc":"7010:6:26","nodeType":"YulIdentifier","src":"7010:6:26"}]}]},"name":"abi_decode_tuple_t_uint32t_string_memory_ptrt_bytes_calldata_ptr","nativeSrc":"6332:702:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6406:9:26","nodeType":"YulTypedName","src":"6406:9:26","type":""},{"name":"dataEnd","nativeSrc":"6417:7:26","nodeType":"YulTypedName","src":"6417:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6429:6:26","nodeType":"YulTypedName","src":"6429:6:26","type":""},{"name":"value1","nativeSrc":"6437:6:26","nodeType":"YulTypedName","src":"6437:6:26","type":""},{"name":"value2","nativeSrc":"6445:6:26","nodeType":"YulTypedName","src":"6445:6:26","type":""},{"name":"value3","nativeSrc":"6453:6:26","nodeType":"YulTypedName","src":"6453:6:26","type":""}],"src":"6332:702:26"},{"body":{"nativeSrc":"7095:97:26","nodeType":"YulBlock","src":"7095:97:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7112:3:26","nodeType":"YulIdentifier","src":"7112:3:26"},{"arguments":[{"name":"value","nativeSrc":"7123:5:26","nodeType":"YulIdentifier","src":"7123:5:26"}],"functionName":{"name":"mload","nativeSrc":"7117:5:26","nodeType":"YulIdentifier","src":"7117:5:26"},"nativeSrc":"7117:12:26","nodeType":"YulFunctionCall","src":"7117:12:26"}],"functionName":{"name":"mstore","nativeSrc":"7105:6:26","nodeType":"YulIdentifier","src":"7105:6:26"},"nativeSrc":"7105:25:26","nodeType":"YulFunctionCall","src":"7105:25:26"},"nativeSrc":"7105:25:26","nodeType":"YulExpressionStatement","src":"7105:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"7150:3:26","nodeType":"YulIdentifier","src":"7150:3:26"},{"kind":"number","nativeSrc":"7155:4:26","nodeType":"YulLiteral","src":"7155:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7146:3:26","nodeType":"YulIdentifier","src":"7146:3:26"},"nativeSrc":"7146:14:26","nodeType":"YulFunctionCall","src":"7146:14:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7172:5:26","nodeType":"YulIdentifier","src":"7172:5:26"},{"kind":"number","nativeSrc":"7179:4:26","nodeType":"YulLiteral","src":"7179:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7168:3:26","nodeType":"YulIdentifier","src":"7168:3:26"},"nativeSrc":"7168:16:26","nodeType":"YulFunctionCall","src":"7168:16:26"}],"functionName":{"name":"mload","nativeSrc":"7162:5:26","nodeType":"YulIdentifier","src":"7162:5:26"},"nativeSrc":"7162:23:26","nodeType":"YulFunctionCall","src":"7162:23:26"}],"functionName":{"name":"mstore","nativeSrc":"7139:6:26","nodeType":"YulIdentifier","src":"7139:6:26"},"nativeSrc":"7139:47:26","nodeType":"YulFunctionCall","src":"7139:47:26"},"nativeSrc":"7139:47:26","nodeType":"YulExpressionStatement","src":"7139:47:26"}]},"name":"abi_encode_struct_MessagingFee","nativeSrc":"7039:153:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7079:5:26","nodeType":"YulTypedName","src":"7079:5:26","type":""},{"name":"pos","nativeSrc":"7086:3:26","nodeType":"YulTypedName","src":"7086:3:26","type":""}],"src":"7039:153:26"},{"body":{"nativeSrc":"7364:300:26","nodeType":"YulBlock","src":"7364:300:26","statements":[{"nativeSrc":"7374:27:26","nodeType":"YulAssignment","src":"7374:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7386:9:26","nodeType":"YulIdentifier","src":"7386:9:26"},{"kind":"number","nativeSrc":"7397:3:26","nodeType":"YulLiteral","src":"7397:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7382:3:26","nodeType":"YulIdentifier","src":"7382:3:26"},"nativeSrc":"7382:19:26","nodeType":"YulFunctionCall","src":"7382:19:26"},"variableNames":[{"name":"tail","nativeSrc":"7374:4:26","nodeType":"YulIdentifier","src":"7374:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7417:9:26","nodeType":"YulIdentifier","src":"7417:9:26"},{"arguments":[{"name":"value0","nativeSrc":"7434:6:26","nodeType":"YulIdentifier","src":"7434:6:26"}],"functionName":{"name":"mload","nativeSrc":"7428:5:26","nodeType":"YulIdentifier","src":"7428:5:26"},"nativeSrc":"7428:13:26","nodeType":"YulFunctionCall","src":"7428:13:26"}],"functionName":{"name":"mstore","nativeSrc":"7410:6:26","nodeType":"YulIdentifier","src":"7410:6:26"},"nativeSrc":"7410:32:26","nodeType":"YulFunctionCall","src":"7410:32:26"},"nativeSrc":"7410:32:26","nodeType":"YulExpressionStatement","src":"7410:32:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7462:9:26","nodeType":"YulIdentifier","src":"7462:9:26"},{"kind":"number","nativeSrc":"7473:4:26","nodeType":"YulLiteral","src":"7473:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7458:3:26","nodeType":"YulIdentifier","src":"7458:3:26"},"nativeSrc":"7458:20:26","nodeType":"YulFunctionCall","src":"7458:20:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"7494:6:26","nodeType":"YulIdentifier","src":"7494:6:26"},{"kind":"number","nativeSrc":"7502:4:26","nodeType":"YulLiteral","src":"7502:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7490:3:26","nodeType":"YulIdentifier","src":"7490:3:26"},"nativeSrc":"7490:17:26","nodeType":"YulFunctionCall","src":"7490:17:26"}],"functionName":{"name":"mload","nativeSrc":"7484:5:26","nodeType":"YulIdentifier","src":"7484:5:26"},"nativeSrc":"7484:24:26","nodeType":"YulFunctionCall","src":"7484:24:26"},{"kind":"number","nativeSrc":"7510:18:26","nodeType":"YulLiteral","src":"7510:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"7480:3:26","nodeType":"YulIdentifier","src":"7480:3:26"},"nativeSrc":"7480:49:26","nodeType":"YulFunctionCall","src":"7480:49:26"}],"functionName":{"name":"mstore","nativeSrc":"7451:6:26","nodeType":"YulIdentifier","src":"7451:6:26"},"nativeSrc":"7451:79:26","nodeType":"YulFunctionCall","src":"7451:79:26"},"nativeSrc":"7451:79:26","nodeType":"YulExpressionStatement","src":"7451:79:26"},{"nativeSrc":"7539:44:26","nodeType":"YulVariableDeclaration","src":"7539:44:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"7569:6:26","nodeType":"YulIdentifier","src":"7569:6:26"},{"kind":"number","nativeSrc":"7577:4:26","nodeType":"YulLiteral","src":"7577:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"7565:3:26","nodeType":"YulIdentifier","src":"7565:3:26"},"nativeSrc":"7565:17:26","nodeType":"YulFunctionCall","src":"7565:17:26"}],"functionName":{"name":"mload","nativeSrc":"7559:5:26","nodeType":"YulIdentifier","src":"7559:5:26"},"nativeSrc":"7559:24:26","nodeType":"YulFunctionCall","src":"7559:24:26"},"variables":[{"name":"memberValue0","nativeSrc":"7543:12:26","nodeType":"YulTypedName","src":"7543:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"7623:12:26","nodeType":"YulIdentifier","src":"7623:12:26"},{"arguments":[{"name":"headStart","nativeSrc":"7641:9:26","nodeType":"YulIdentifier","src":"7641:9:26"},{"kind":"number","nativeSrc":"7652:4:26","nodeType":"YulLiteral","src":"7652:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"7637:3:26","nodeType":"YulIdentifier","src":"7637:3:26"},"nativeSrc":"7637:20:26","nodeType":"YulFunctionCall","src":"7637:20:26"}],"functionName":{"name":"abi_encode_struct_MessagingFee","nativeSrc":"7592:30:26","nodeType":"YulIdentifier","src":"7592:30:26"},"nativeSrc":"7592:66:26","nodeType":"YulFunctionCall","src":"7592:66:26"},"nativeSrc":"7592:66:26","nodeType":"YulExpressionStatement","src":"7592:66:26"}]},"name":"abi_encode_tuple_t_struct$_MessagingReceipt_$626_memory_ptr__to_t_struct$_MessagingReceipt_$626_memory_ptr__fromStack_reversed","nativeSrc":"7197:467:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7333:9:26","nodeType":"YulTypedName","src":"7333:9:26","type":""},{"name":"value0","nativeSrc":"7344:6:26","nodeType":"YulTypedName","src":"7344:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7355:4:26","nodeType":"YulTypedName","src":"7355:4:26","type":""}],"src":"7197:467:26"},{"body":{"nativeSrc":"7711:76:26","nodeType":"YulBlock","src":"7711:76:26","statements":[{"body":{"nativeSrc":"7765:16:26","nodeType":"YulBlock","src":"7765:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7774:1:26","nodeType":"YulLiteral","src":"7774:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"7777:1:26","nodeType":"YulLiteral","src":"7777:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7767:6:26","nodeType":"YulIdentifier","src":"7767:6:26"},"nativeSrc":"7767:12:26","nodeType":"YulFunctionCall","src":"7767:12:26"},"nativeSrc":"7767:12:26","nodeType":"YulExpressionStatement","src":"7767:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7734:5:26","nodeType":"YulIdentifier","src":"7734:5:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7755:5:26","nodeType":"YulIdentifier","src":"7755:5:26"}],"functionName":{"name":"iszero","nativeSrc":"7748:6:26","nodeType":"YulIdentifier","src":"7748:6:26"},"nativeSrc":"7748:13:26","nodeType":"YulFunctionCall","src":"7748:13:26"}],"functionName":{"name":"iszero","nativeSrc":"7741:6:26","nodeType":"YulIdentifier","src":"7741:6:26"},"nativeSrc":"7741:21:26","nodeType":"YulFunctionCall","src":"7741:21:26"}],"functionName":{"name":"eq","nativeSrc":"7731:2:26","nodeType":"YulIdentifier","src":"7731:2:26"},"nativeSrc":"7731:32:26","nodeType":"YulFunctionCall","src":"7731:32:26"}],"functionName":{"name":"iszero","nativeSrc":"7724:6:26","nodeType":"YulIdentifier","src":"7724:6:26"},"nativeSrc":"7724:40:26","nodeType":"YulFunctionCall","src":"7724:40:26"},"nativeSrc":"7721:60:26","nodeType":"YulIf","src":"7721:60:26"}]},"name":"validator_revert_bool","nativeSrc":"7669:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7700:5:26","nodeType":"YulTypedName","src":"7700:5:26","type":""}],"src":"7669:118:26"},{"body":{"nativeSrc":"7928:737:26","nodeType":"YulBlock","src":"7928:737:26","statements":[{"body":{"nativeSrc":"7975:16:26","nodeType":"YulBlock","src":"7975:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7984:1:26","nodeType":"YulLiteral","src":"7984:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"7987:1:26","nodeType":"YulLiteral","src":"7987:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7977:6:26","nodeType":"YulIdentifier","src":"7977:6:26"},"nativeSrc":"7977:12:26","nodeType":"YulFunctionCall","src":"7977:12:26"},"nativeSrc":"7977:12:26","nodeType":"YulExpressionStatement","src":"7977:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7949:7:26","nodeType":"YulIdentifier","src":"7949:7:26"},{"name":"headStart","nativeSrc":"7958:9:26","nodeType":"YulIdentifier","src":"7958:9:26"}],"functionName":{"name":"sub","nativeSrc":"7945:3:26","nodeType":"YulIdentifier","src":"7945:3:26"},"nativeSrc":"7945:23:26","nodeType":"YulFunctionCall","src":"7945:23:26"},{"kind":"number","nativeSrc":"7970:3:26","nodeType":"YulLiteral","src":"7970:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"7941:3:26","nodeType":"YulIdentifier","src":"7941:3:26"},"nativeSrc":"7941:33:26","nodeType":"YulFunctionCall","src":"7941:33:26"},"nativeSrc":"7938:53:26","nodeType":"YulIf","src":"7938:53:26"},{"nativeSrc":"8000:38:26","nodeType":"YulAssignment","src":"8000:38:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8028:9:26","nodeType":"YulIdentifier","src":"8028:9:26"}],"functionName":{"name":"abi_decode_uint32","nativeSrc":"8010:17:26","nodeType":"YulIdentifier","src":"8010:17:26"},"nativeSrc":"8010:28:26","nodeType":"YulFunctionCall","src":"8010:28:26"},"variableNames":[{"name":"value0","nativeSrc":"8000:6:26","nodeType":"YulIdentifier","src":"8000:6:26"}]},{"nativeSrc":"8047:46:26","nodeType":"YulVariableDeclaration","src":"8047:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8078:9:26","nodeType":"YulIdentifier","src":"8078:9:26"},{"kind":"number","nativeSrc":"8089:2:26","nodeType":"YulLiteral","src":"8089:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8074:3:26","nodeType":"YulIdentifier","src":"8074:3:26"},"nativeSrc":"8074:18:26","nodeType":"YulFunctionCall","src":"8074:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"8061:12:26","nodeType":"YulIdentifier","src":"8061:12:26"},"nativeSrc":"8061:32:26","nodeType":"YulFunctionCall","src":"8061:32:26"},"variables":[{"name":"offset","nativeSrc":"8051:6:26","nodeType":"YulTypedName","src":"8051:6:26","type":""}]},{"nativeSrc":"8102:28:26","nodeType":"YulVariableDeclaration","src":"8102:28:26","value":{"kind":"number","nativeSrc":"8112:18:26","nodeType":"YulLiteral","src":"8112:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"8106:2:26","nodeType":"YulTypedName","src":"8106:2:26","type":""}]},{"body":{"nativeSrc":"8157:16:26","nodeType":"YulBlock","src":"8157:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8166:1:26","nodeType":"YulLiteral","src":"8166:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"8169:1:26","nodeType":"YulLiteral","src":"8169:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8159:6:26","nodeType":"YulIdentifier","src":"8159:6:26"},"nativeSrc":"8159:12:26","nodeType":"YulFunctionCall","src":"8159:12:26"},"nativeSrc":"8159:12:26","nodeType":"YulExpressionStatement","src":"8159:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8145:6:26","nodeType":"YulIdentifier","src":"8145:6:26"},{"name":"_1","nativeSrc":"8153:2:26","nodeType":"YulIdentifier","src":"8153:2:26"}],"functionName":{"name":"gt","nativeSrc":"8142:2:26","nodeType":"YulIdentifier","src":"8142:2:26"},"nativeSrc":"8142:14:26","nodeType":"YulFunctionCall","src":"8142:14:26"},"nativeSrc":"8139:34:26","nodeType":"YulIf","src":"8139:34:26"},{"nativeSrc":"8182:60:26","nodeType":"YulAssignment","src":"8182:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8214:9:26","nodeType":"YulIdentifier","src":"8214:9:26"},{"name":"offset","nativeSrc":"8225:6:26","nodeType":"YulIdentifier","src":"8225:6:26"}],"functionName":{"name":"add","nativeSrc":"8210:3:26","nodeType":"YulIdentifier","src":"8210:3:26"},"nativeSrc":"8210:22:26","nodeType":"YulFunctionCall","src":"8210:22:26"},{"name":"dataEnd","nativeSrc":"8234:7:26","nodeType":"YulIdentifier","src":"8234:7:26"}],"functionName":{"name":"abi_decode_string","nativeSrc":"8192:17:26","nodeType":"YulIdentifier","src":"8192:17:26"},"nativeSrc":"8192:50:26","nodeType":"YulFunctionCall","src":"8192:50:26"},"variableNames":[{"name":"value1","nativeSrc":"8182:6:26","nodeType":"YulIdentifier","src":"8182:6:26"}]},{"nativeSrc":"8251:48:26","nodeType":"YulVariableDeclaration","src":"8251:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8284:9:26","nodeType":"YulIdentifier","src":"8284:9:26"},{"kind":"number","nativeSrc":"8295:2:26","nodeType":"YulLiteral","src":"8295:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8280:3:26","nodeType":"YulIdentifier","src":"8280:3:26"},"nativeSrc":"8280:18:26","nodeType":"YulFunctionCall","src":"8280:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"8267:12:26","nodeType":"YulIdentifier","src":"8267:12:26"},"nativeSrc":"8267:32:26","nodeType":"YulFunctionCall","src":"8267:32:26"},"variables":[{"name":"offset_1","nativeSrc":"8255:8:26","nodeType":"YulTypedName","src":"8255:8:26","type":""}]},{"body":{"nativeSrc":"8328:16:26","nodeType":"YulBlock","src":"8328:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8337:1:26","nodeType":"YulLiteral","src":"8337:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"8340:1:26","nodeType":"YulLiteral","src":"8340:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8330:6:26","nodeType":"YulIdentifier","src":"8330:6:26"},"nativeSrc":"8330:12:26","nodeType":"YulFunctionCall","src":"8330:12:26"},"nativeSrc":"8330:12:26","nodeType":"YulExpressionStatement","src":"8330:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"8314:8:26","nodeType":"YulIdentifier","src":"8314:8:26"},{"name":"_1","nativeSrc":"8324:2:26","nodeType":"YulIdentifier","src":"8324:2:26"}],"functionName":{"name":"gt","nativeSrc":"8311:2:26","nodeType":"YulIdentifier","src":"8311:2:26"},"nativeSrc":"8311:16:26","nodeType":"YulFunctionCall","src":"8311:16:26"},"nativeSrc":"8308:36:26","nodeType":"YulIf","src":"8308:36:26"},{"nativeSrc":"8353:34:26","nodeType":"YulVariableDeclaration","src":"8353:34:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8367:9:26","nodeType":"YulIdentifier","src":"8367:9:26"},{"name":"offset_1","nativeSrc":"8378:8:26","nodeType":"YulIdentifier","src":"8378:8:26"}],"functionName":{"name":"add","nativeSrc":"8363:3:26","nodeType":"YulIdentifier","src":"8363:3:26"},"nativeSrc":"8363:24:26","nodeType":"YulFunctionCall","src":"8363:24:26"},"variables":[{"name":"_2","nativeSrc":"8357:2:26","nodeType":"YulTypedName","src":"8357:2:26","type":""}]},{"body":{"nativeSrc":"8435:16:26","nodeType":"YulBlock","src":"8435:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8444:1:26","nodeType":"YulLiteral","src":"8444:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"8447:1:26","nodeType":"YulLiteral","src":"8447:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8437:6:26","nodeType":"YulIdentifier","src":"8437:6:26"},"nativeSrc":"8437:12:26","nodeType":"YulFunctionCall","src":"8437:12:26"},"nativeSrc":"8437:12:26","nodeType":"YulExpressionStatement","src":"8437:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"8414:2:26","nodeType":"YulIdentifier","src":"8414:2:26"},{"kind":"number","nativeSrc":"8418:4:26","nodeType":"YulLiteral","src":"8418:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8410:3:26","nodeType":"YulIdentifier","src":"8410:3:26"},"nativeSrc":"8410:13:26","nodeType":"YulFunctionCall","src":"8410:13:26"},{"name":"dataEnd","nativeSrc":"8425:7:26","nodeType":"YulIdentifier","src":"8425:7:26"}],"functionName":{"name":"slt","nativeSrc":"8406:3:26","nodeType":"YulIdentifier","src":"8406:3:26"},"nativeSrc":"8406:27:26","nodeType":"YulFunctionCall","src":"8406:27:26"}],"functionName":{"name":"iszero","nativeSrc":"8399:6:26","nodeType":"YulIdentifier","src":"8399:6:26"},"nativeSrc":"8399:35:26","nodeType":"YulFunctionCall","src":"8399:35:26"},"nativeSrc":"8396:55:26","nodeType":"YulIf","src":"8396:55:26"},{"nativeSrc":"8460:84:26","nodeType":"YulAssignment","src":"8460:84:26","value":{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"8509:2:26","nodeType":"YulIdentifier","src":"8509:2:26"},{"kind":"number","nativeSrc":"8513:2:26","nodeType":"YulLiteral","src":"8513:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8505:3:26","nodeType":"YulIdentifier","src":"8505:3:26"},"nativeSrc":"8505:11:26","nodeType":"YulFunctionCall","src":"8505:11:26"},{"arguments":[{"name":"_2","nativeSrc":"8531:2:26","nodeType":"YulIdentifier","src":"8531:2:26"}],"functionName":{"name":"calldataload","nativeSrc":"8518:12:26","nodeType":"YulIdentifier","src":"8518:12:26"},"nativeSrc":"8518:16:26","nodeType":"YulFunctionCall","src":"8518:16:26"},{"name":"dataEnd","nativeSrc":"8536:7:26","nodeType":"YulIdentifier","src":"8536:7:26"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"8470:34:26","nodeType":"YulIdentifier","src":"8470:34:26"},"nativeSrc":"8470:74:26","nodeType":"YulFunctionCall","src":"8470:74:26"},"variableNames":[{"name":"value2","nativeSrc":"8460:6:26","nodeType":"YulIdentifier","src":"8460:6:26"}]},{"nativeSrc":"8553:45:26","nodeType":"YulVariableDeclaration","src":"8553:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8583:9:26","nodeType":"YulIdentifier","src":"8583:9:26"},{"kind":"number","nativeSrc":"8594:2:26","nodeType":"YulLiteral","src":"8594:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8579:3:26","nodeType":"YulIdentifier","src":"8579:3:26"},"nativeSrc":"8579:18:26","nodeType":"YulFunctionCall","src":"8579:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"8566:12:26","nodeType":"YulIdentifier","src":"8566:12:26"},"nativeSrc":"8566:32:26","nodeType":"YulFunctionCall","src":"8566:32:26"},"variables":[{"name":"value","nativeSrc":"8557:5:26","nodeType":"YulTypedName","src":"8557:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8629:5:26","nodeType":"YulIdentifier","src":"8629:5:26"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"8607:21:26","nodeType":"YulIdentifier","src":"8607:21:26"},"nativeSrc":"8607:28:26","nodeType":"YulFunctionCall","src":"8607:28:26"},"nativeSrc":"8607:28:26","nodeType":"YulExpressionStatement","src":"8607:28:26"},{"nativeSrc":"8644:15:26","nodeType":"YulAssignment","src":"8644:15:26","value":{"name":"value","nativeSrc":"8654:5:26","nodeType":"YulIdentifier","src":"8654:5:26"},"variableNames":[{"name":"value3","nativeSrc":"8644:6:26","nodeType":"YulIdentifier","src":"8644:6:26"}]}]},"name":"abi_decode_tuple_t_uint32t_string_memory_ptrt_bytes_memory_ptrt_bool","nativeSrc":"7792:873:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7870:9:26","nodeType":"YulTypedName","src":"7870:9:26","type":""},{"name":"dataEnd","nativeSrc":"7881:7:26","nodeType":"YulTypedName","src":"7881:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7893:6:26","nodeType":"YulTypedName","src":"7893:6:26","type":""},{"name":"value1","nativeSrc":"7901:6:26","nodeType":"YulTypedName","src":"7901:6:26","type":""},{"name":"value2","nativeSrc":"7909:6:26","nodeType":"YulTypedName","src":"7909:6:26","type":""},{"name":"value3","nativeSrc":"7917:6:26","nodeType":"YulTypedName","src":"7917:6:26","type":""}],"src":"7792:873:26"},{"body":{"nativeSrc":"8829:100:26","nodeType":"YulBlock","src":"8829:100:26","statements":[{"nativeSrc":"8839:26:26","nodeType":"YulAssignment","src":"8839:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8851:9:26","nodeType":"YulIdentifier","src":"8851:9:26"},{"kind":"number","nativeSrc":"8862:2:26","nodeType":"YulLiteral","src":"8862:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8847:3:26","nodeType":"YulIdentifier","src":"8847:3:26"},"nativeSrc":"8847:18:26","nodeType":"YulFunctionCall","src":"8847:18:26"},"variableNames":[{"name":"tail","nativeSrc":"8839:4:26","nodeType":"YulIdentifier","src":"8839:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8905:6:26","nodeType":"YulIdentifier","src":"8905:6:26"},{"name":"headStart","nativeSrc":"8913:9:26","nodeType":"YulIdentifier","src":"8913:9:26"}],"functionName":{"name":"abi_encode_struct_MessagingFee","nativeSrc":"8874:30:26","nodeType":"YulIdentifier","src":"8874:30:26"},"nativeSrc":"8874:49:26","nodeType":"YulFunctionCall","src":"8874:49:26"},"nativeSrc":"8874:49:26","nodeType":"YulExpressionStatement","src":"8874:49:26"}]},"name":"abi_encode_tuple_t_struct$_MessagingFee_$631_memory_ptr__to_t_struct$_MessagingFee_$631_memory_ptr__fromStack_reversed","nativeSrc":"8670:259:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8798:9:26","nodeType":"YulTypedName","src":"8798:9:26","type":""},{"name":"value0","nativeSrc":"8809:6:26","nodeType":"YulTypedName","src":"8809:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8820:4:26","nodeType":"YulTypedName","src":"8820:4:26","type":""}],"src":"8670:259:26"},{"body":{"nativeSrc":"9029:140:26","nodeType":"YulBlock","src":"9029:140:26","statements":[{"body":{"nativeSrc":"9075:16:26","nodeType":"YulBlock","src":"9075:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9084:1:26","nodeType":"YulLiteral","src":"9084:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"9087:1:26","nodeType":"YulLiteral","src":"9087:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9077:6:26","nodeType":"YulIdentifier","src":"9077:6:26"},"nativeSrc":"9077:12:26","nodeType":"YulFunctionCall","src":"9077:12:26"},"nativeSrc":"9077:12:26","nodeType":"YulExpressionStatement","src":"9077:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9050:7:26","nodeType":"YulIdentifier","src":"9050:7:26"},{"name":"headStart","nativeSrc":"9059:9:26","nodeType":"YulIdentifier","src":"9059:9:26"}],"functionName":{"name":"sub","nativeSrc":"9046:3:26","nodeType":"YulIdentifier","src":"9046:3:26"},"nativeSrc":"9046:23:26","nodeType":"YulFunctionCall","src":"9046:23:26"},{"kind":"number","nativeSrc":"9071:2:26","nodeType":"YulLiteral","src":"9071:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"9042:3:26","nodeType":"YulIdentifier","src":"9042:3:26"},"nativeSrc":"9042:32:26","nodeType":"YulFunctionCall","src":"9042:32:26"},"nativeSrc":"9039:52:26","nodeType":"YulIf","src":"9039:52:26"},{"nativeSrc":"9100:63:26","nodeType":"YulAssignment","src":"9100:63:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9144:9:26","nodeType":"YulIdentifier","src":"9144:9:26"},{"name":"dataEnd","nativeSrc":"9155:7:26","nodeType":"YulIdentifier","src":"9155:7:26"}],"functionName":{"name":"abi_decode_struct_Origin_calldata","nativeSrc":"9110:33:26","nodeType":"YulIdentifier","src":"9110:33:26"},"nativeSrc":"9110:53:26","nodeType":"YulFunctionCall","src":"9110:53:26"},"variableNames":[{"name":"value0","nativeSrc":"9100:6:26","nodeType":"YulIdentifier","src":"9100:6:26"}]}]},"name":"abi_decode_tuple_t_struct$_Origin_$638_calldata_ptr","nativeSrc":"8934:235:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8995:9:26","nodeType":"YulTypedName","src":"8995:9:26","type":""},{"name":"dataEnd","nativeSrc":"9006:7:26","nodeType":"YulTypedName","src":"9006:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9018:6:26","nodeType":"YulTypedName","src":"9018:6:26","type":""}],"src":"8934:235:26"},{"body":{"nativeSrc":"9301:136:26","nodeType":"YulBlock","src":"9301:136:26","statements":[{"nativeSrc":"9311:26:26","nodeType":"YulAssignment","src":"9311:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9323:9:26","nodeType":"YulIdentifier","src":"9323:9:26"},{"kind":"number","nativeSrc":"9334:2:26","nodeType":"YulLiteral","src":"9334:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9319:3:26","nodeType":"YulIdentifier","src":"9319:3:26"},"nativeSrc":"9319:18:26","nodeType":"YulFunctionCall","src":"9319:18:26"},"variableNames":[{"name":"tail","nativeSrc":"9311:4:26","nodeType":"YulIdentifier","src":"9311:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9353:9:26","nodeType":"YulIdentifier","src":"9353:9:26"},{"arguments":[{"name":"value0","nativeSrc":"9368:6:26","nodeType":"YulIdentifier","src":"9368:6:26"},{"kind":"number","nativeSrc":"9376:10:26","nodeType":"YulLiteral","src":"9376:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"9364:3:26","nodeType":"YulIdentifier","src":"9364:3:26"},"nativeSrc":"9364:23:26","nodeType":"YulFunctionCall","src":"9364:23:26"}],"functionName":{"name":"mstore","nativeSrc":"9346:6:26","nodeType":"YulIdentifier","src":"9346:6:26"},"nativeSrc":"9346:42:26","nodeType":"YulFunctionCall","src":"9346:42:26"},"nativeSrc":"9346:42:26","nodeType":"YulExpressionStatement","src":"9346:42:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9408:9:26","nodeType":"YulIdentifier","src":"9408:9:26"},{"kind":"number","nativeSrc":"9419:2:26","nodeType":"YulLiteral","src":"9419:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9404:3:26","nodeType":"YulIdentifier","src":"9404:3:26"},"nativeSrc":"9404:18:26","nodeType":"YulFunctionCall","src":"9404:18:26"},{"name":"value1","nativeSrc":"9424:6:26","nodeType":"YulIdentifier","src":"9424:6:26"}],"functionName":{"name":"mstore","nativeSrc":"9397:6:26","nodeType":"YulIdentifier","src":"9397:6:26"},"nativeSrc":"9397:34:26","nodeType":"YulFunctionCall","src":"9397:34:26"},"nativeSrc":"9397:34:26","nodeType":"YulExpressionStatement","src":"9397:34:26"}]},"name":"abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed","nativeSrc":"9174:263:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9262:9:26","nodeType":"YulTypedName","src":"9262:9:26","type":""},{"name":"value1","nativeSrc":"9273:6:26","nodeType":"YulTypedName","src":"9273:6:26","type":""},{"name":"value0","nativeSrc":"9281:6:26","nodeType":"YulTypedName","src":"9281:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9292:4:26","nodeType":"YulTypedName","src":"9292:4:26","type":""}],"src":"9174:263:26"},{"body":{"nativeSrc":"9497:325:26","nodeType":"YulBlock","src":"9497:325:26","statements":[{"nativeSrc":"9507:22:26","nodeType":"YulAssignment","src":"9507:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"9521:1:26","nodeType":"YulLiteral","src":"9521:1:26","type":"","value":"1"},{"name":"data","nativeSrc":"9524:4:26","nodeType":"YulIdentifier","src":"9524:4:26"}],"functionName":{"name":"shr","nativeSrc":"9517:3:26","nodeType":"YulIdentifier","src":"9517:3:26"},"nativeSrc":"9517:12:26","nodeType":"YulFunctionCall","src":"9517:12:26"},"variableNames":[{"name":"length","nativeSrc":"9507:6:26","nodeType":"YulIdentifier","src":"9507:6:26"}]},{"nativeSrc":"9538:38:26","nodeType":"YulVariableDeclaration","src":"9538:38:26","value":{"arguments":[{"name":"data","nativeSrc":"9568:4:26","nodeType":"YulIdentifier","src":"9568:4:26"},{"kind":"number","nativeSrc":"9574:1:26","nodeType":"YulLiteral","src":"9574:1:26","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"9564:3:26","nodeType":"YulIdentifier","src":"9564:3:26"},"nativeSrc":"9564:12:26","nodeType":"YulFunctionCall","src":"9564:12:26"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"9542:18:26","nodeType":"YulTypedName","src":"9542:18:26","type":""}]},{"body":{"nativeSrc":"9615:31:26","nodeType":"YulBlock","src":"9615:31:26","statements":[{"nativeSrc":"9617:27:26","nodeType":"YulAssignment","src":"9617:27:26","value":{"arguments":[{"name":"length","nativeSrc":"9631:6:26","nodeType":"YulIdentifier","src":"9631:6:26"},{"kind":"number","nativeSrc":"9639:4:26","nodeType":"YulLiteral","src":"9639:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9627:3:26","nodeType":"YulIdentifier","src":"9627:3:26"},"nativeSrc":"9627:17:26","nodeType":"YulFunctionCall","src":"9627:17:26"},"variableNames":[{"name":"length","nativeSrc":"9617:6:26","nodeType":"YulIdentifier","src":"9617:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9595:18:26","nodeType":"YulIdentifier","src":"9595:18:26"}],"functionName":{"name":"iszero","nativeSrc":"9588:6:26","nodeType":"YulIdentifier","src":"9588:6:26"},"nativeSrc":"9588:26:26","nodeType":"YulFunctionCall","src":"9588:26:26"},"nativeSrc":"9585:61:26","nodeType":"YulIf","src":"9585:61:26"},{"body":{"nativeSrc":"9705:111:26","nodeType":"YulBlock","src":"9705:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9726:1:26","nodeType":"YulLiteral","src":"9726:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9733:3:26","nodeType":"YulLiteral","src":"9733:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"9738:10:26","nodeType":"YulLiteral","src":"9738:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9729:3:26","nodeType":"YulIdentifier","src":"9729:3:26"},"nativeSrc":"9729:20:26","nodeType":"YulFunctionCall","src":"9729:20:26"}],"functionName":{"name":"mstore","nativeSrc":"9719:6:26","nodeType":"YulIdentifier","src":"9719:6:26"},"nativeSrc":"9719:31:26","nodeType":"YulFunctionCall","src":"9719:31:26"},"nativeSrc":"9719:31:26","nodeType":"YulExpressionStatement","src":"9719:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9770:1:26","nodeType":"YulLiteral","src":"9770:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"9773:4:26","nodeType":"YulLiteral","src":"9773:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9763:6:26","nodeType":"YulIdentifier","src":"9763:6:26"},"nativeSrc":"9763:15:26","nodeType":"YulFunctionCall","src":"9763:15:26"},"nativeSrc":"9763:15:26","nodeType":"YulExpressionStatement","src":"9763:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9798:1:26","nodeType":"YulLiteral","src":"9798:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"9801:4:26","nodeType":"YulLiteral","src":"9801:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9791:6:26","nodeType":"YulIdentifier","src":"9791:6:26"},"nativeSrc":"9791:15:26","nodeType":"YulFunctionCall","src":"9791:15:26"},"nativeSrc":"9791:15:26","nodeType":"YulExpressionStatement","src":"9791:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9661:18:26","nodeType":"YulIdentifier","src":"9661:18:26"},{"arguments":[{"name":"length","nativeSrc":"9684:6:26","nodeType":"YulIdentifier","src":"9684:6:26"},{"kind":"number","nativeSrc":"9692:2:26","nodeType":"YulLiteral","src":"9692:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9681:2:26","nodeType":"YulIdentifier","src":"9681:2:26"},"nativeSrc":"9681:14:26","nodeType":"YulFunctionCall","src":"9681:14:26"}],"functionName":{"name":"eq","nativeSrc":"9658:2:26","nodeType":"YulIdentifier","src":"9658:2:26"},"nativeSrc":"9658:38:26","nodeType":"YulFunctionCall","src":"9658:38:26"},"nativeSrc":"9655:161:26","nodeType":"YulIf","src":"9655:161:26"}]},"name":"extract_byte_array_length","nativeSrc":"9442:380:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"9477:4:26","nodeType":"YulTypedName","src":"9477:4:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9486:6:26","nodeType":"YulTypedName","src":"9486:6:26","type":""}],"src":"9442:380:26"},{"body":{"nativeSrc":"9926:93:26","nodeType":"YulBlock","src":"9926:93:26","statements":[{"nativeSrc":"9936:26:26","nodeType":"YulAssignment","src":"9936:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9948:9:26","nodeType":"YulIdentifier","src":"9948:9:26"},{"kind":"number","nativeSrc":"9959:2:26","nodeType":"YulLiteral","src":"9959:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9944:3:26","nodeType":"YulIdentifier","src":"9944:3:26"},"nativeSrc":"9944:18:26","nodeType":"YulFunctionCall","src":"9944:18:26"},"variableNames":[{"name":"tail","nativeSrc":"9936:4:26","nodeType":"YulIdentifier","src":"9936:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9978:9:26","nodeType":"YulIdentifier","src":"9978:9:26"},{"arguments":[{"name":"value0","nativeSrc":"9993:6:26","nodeType":"YulIdentifier","src":"9993:6:26"},{"kind":"number","nativeSrc":"10001:10:26","nodeType":"YulLiteral","src":"10001:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"9989:3:26","nodeType":"YulIdentifier","src":"9989:3:26"},"nativeSrc":"9989:23:26","nodeType":"YulFunctionCall","src":"9989:23:26"}],"functionName":{"name":"mstore","nativeSrc":"9971:6:26","nodeType":"YulIdentifier","src":"9971:6:26"},"nativeSrc":"9971:42:26","nodeType":"YulFunctionCall","src":"9971:42:26"},"nativeSrc":"9971:42:26","nodeType":"YulExpressionStatement","src":"9971:42:26"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"9827:192:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9895:9:26","nodeType":"YulTypedName","src":"9895:9:26","type":""},{"name":"value0","nativeSrc":"9906:6:26","nodeType":"YulTypedName","src":"9906:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9917:4:26","nodeType":"YulTypedName","src":"9917:4:26","type":""}],"src":"9827:192:26"},{"body":{"nativeSrc":"10104:242:26","nodeType":"YulBlock","src":"10104:242:26","statements":[{"body":{"nativeSrc":"10150:16:26","nodeType":"YulBlock","src":"10150:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10159:1:26","nodeType":"YulLiteral","src":"10159:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10162:1:26","nodeType":"YulLiteral","src":"10162:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10152:6:26","nodeType":"YulIdentifier","src":"10152:6:26"},"nativeSrc":"10152:12:26","nodeType":"YulFunctionCall","src":"10152:12:26"},"nativeSrc":"10152:12:26","nodeType":"YulExpressionStatement","src":"10152:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10125:7:26","nodeType":"YulIdentifier","src":"10125:7:26"},{"name":"headStart","nativeSrc":"10134:9:26","nodeType":"YulIdentifier","src":"10134:9:26"}],"functionName":{"name":"sub","nativeSrc":"10121:3:26","nodeType":"YulIdentifier","src":"10121:3:26"},"nativeSrc":"10121:23:26","nodeType":"YulFunctionCall","src":"10121:23:26"},{"kind":"number","nativeSrc":"10146:2:26","nodeType":"YulLiteral","src":"10146:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10117:3:26","nodeType":"YulIdentifier","src":"10117:3:26"},"nativeSrc":"10117:32:26","nodeType":"YulFunctionCall","src":"10117:32:26"},"nativeSrc":"10114:52:26","nodeType":"YulIf","src":"10114:52:26"},{"nativeSrc":"10175:37:26","nodeType":"YulVariableDeclaration","src":"10175:37:26","value":{"arguments":[{"name":"headStart","nativeSrc":"10202:9:26","nodeType":"YulIdentifier","src":"10202:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"10189:12:26","nodeType":"YulIdentifier","src":"10189:12:26"},"nativeSrc":"10189:23:26","nodeType":"YulFunctionCall","src":"10189:23:26"},"variables":[{"name":"offset","nativeSrc":"10179:6:26","nodeType":"YulTypedName","src":"10179:6:26","type":""}]},{"body":{"nativeSrc":"10255:16:26","nodeType":"YulBlock","src":"10255:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10264:1:26","nodeType":"YulLiteral","src":"10264:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10267:1:26","nodeType":"YulLiteral","src":"10267:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10257:6:26","nodeType":"YulIdentifier","src":"10257:6:26"},"nativeSrc":"10257:12:26","nodeType":"YulFunctionCall","src":"10257:12:26"},"nativeSrc":"10257:12:26","nodeType":"YulExpressionStatement","src":"10257:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"10227:6:26","nodeType":"YulIdentifier","src":"10227:6:26"},{"kind":"number","nativeSrc":"10235:18:26","nodeType":"YulLiteral","src":"10235:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10224:2:26","nodeType":"YulIdentifier","src":"10224:2:26"},"nativeSrc":"10224:30:26","nodeType":"YulFunctionCall","src":"10224:30:26"},"nativeSrc":"10221:50:26","nodeType":"YulIf","src":"10221:50:26"},{"nativeSrc":"10280:60:26","nodeType":"YulAssignment","src":"10280:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10312:9:26","nodeType":"YulIdentifier","src":"10312:9:26"},{"name":"offset","nativeSrc":"10323:6:26","nodeType":"YulIdentifier","src":"10323:6:26"}],"functionName":{"name":"add","nativeSrc":"10308:3:26","nodeType":"YulIdentifier","src":"10308:3:26"},"nativeSrc":"10308:22:26","nodeType":"YulFunctionCall","src":"10308:22:26"},{"name":"dataEnd","nativeSrc":"10332:7:26","nodeType":"YulIdentifier","src":"10332:7:26"}],"functionName":{"name":"abi_decode_string","nativeSrc":"10290:17:26","nodeType":"YulIdentifier","src":"10290:17:26"},"nativeSrc":"10290:50:26","nodeType":"YulFunctionCall","src":"10290:50:26"},"variableNames":[{"name":"value0","nativeSrc":"10280:6:26","nodeType":"YulIdentifier","src":"10280:6:26"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"10024:322:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10070:9:26","nodeType":"YulTypedName","src":"10070:9:26","type":""},{"name":"dataEnd","nativeSrc":"10081:7:26","nodeType":"YulTypedName","src":"10081:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10093:6:26","nodeType":"YulTypedName","src":"10093:6:26","type":""}],"src":"10024:322:26"},{"body":{"nativeSrc":"10407:65:26","nodeType":"YulBlock","src":"10407:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10424:1:26","nodeType":"YulLiteral","src":"10424:1:26","type":"","value":"0"},{"name":"ptr","nativeSrc":"10427:3:26","nodeType":"YulIdentifier","src":"10427:3:26"}],"functionName":{"name":"mstore","nativeSrc":"10417:6:26","nodeType":"YulIdentifier","src":"10417:6:26"},"nativeSrc":"10417:14:26","nodeType":"YulFunctionCall","src":"10417:14:26"},"nativeSrc":"10417:14:26","nodeType":"YulExpressionStatement","src":"10417:14:26"},{"nativeSrc":"10440:26:26","nodeType":"YulAssignment","src":"10440:26:26","value":{"arguments":[{"kind":"number","nativeSrc":"10458:1:26","nodeType":"YulLiteral","src":"10458:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10461:4:26","nodeType":"YulLiteral","src":"10461:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"10448:9:26","nodeType":"YulIdentifier","src":"10448:9:26"},"nativeSrc":"10448:18:26","nodeType":"YulFunctionCall","src":"10448:18:26"},"variableNames":[{"name":"data","nativeSrc":"10440:4:26","nodeType":"YulIdentifier","src":"10440:4:26"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"10351:121:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10390:3:26","nodeType":"YulTypedName","src":"10390:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"10398:4:26","nodeType":"YulTypedName","src":"10398:4:26","type":""}],"src":"10351:121:26"},{"body":{"nativeSrc":"10558:462:26","nodeType":"YulBlock","src":"10558:462:26","statements":[{"body":{"nativeSrc":"10591:423:26","nodeType":"YulBlock","src":"10591:423:26","statements":[{"nativeSrc":"10605:11:26","nodeType":"YulVariableDeclaration","src":"10605:11:26","value":{"kind":"number","nativeSrc":"10615:1:26","nodeType":"YulLiteral","src":"10615:1:26","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"10609:2:26","nodeType":"YulTypedName","src":"10609:2:26","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10636:1:26","nodeType":"YulLiteral","src":"10636:1:26","type":"","value":"0"},{"name":"array","nativeSrc":"10639:5:26","nodeType":"YulIdentifier","src":"10639:5:26"}],"functionName":{"name":"mstore","nativeSrc":"10629:6:26","nodeType":"YulIdentifier","src":"10629:6:26"},"nativeSrc":"10629:16:26","nodeType":"YulFunctionCall","src":"10629:16:26"},"nativeSrc":"10629:16:26","nodeType":"YulExpressionStatement","src":"10629:16:26"},{"nativeSrc":"10658:30:26","nodeType":"YulVariableDeclaration","src":"10658:30:26","value":{"arguments":[{"kind":"number","nativeSrc":"10680:1:26","nodeType":"YulLiteral","src":"10680:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"10683:4:26","nodeType":"YulLiteral","src":"10683:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"10670:9:26","nodeType":"YulIdentifier","src":"10670:9:26"},"nativeSrc":"10670:18:26","nodeType":"YulFunctionCall","src":"10670:18:26"},"variables":[{"name":"data","nativeSrc":"10662:4:26","nodeType":"YulTypedName","src":"10662:4:26","type":""}]},{"nativeSrc":"10701:57:26","nodeType":"YulVariableDeclaration","src":"10701:57:26","value":{"arguments":[{"name":"data","nativeSrc":"10724:4:26","nodeType":"YulIdentifier","src":"10724:4:26"},{"arguments":[{"kind":"number","nativeSrc":"10734:1:26","nodeType":"YulLiteral","src":"10734:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"10741:10:26","nodeType":"YulIdentifier","src":"10741:10:26"},{"kind":"number","nativeSrc":"10753:2:26","nodeType":"YulLiteral","src":"10753:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"10737:3:26","nodeType":"YulIdentifier","src":"10737:3:26"},"nativeSrc":"10737:19:26","nodeType":"YulFunctionCall","src":"10737:19:26"}],"functionName":{"name":"shr","nativeSrc":"10730:3:26","nodeType":"YulIdentifier","src":"10730:3:26"},"nativeSrc":"10730:27:26","nodeType":"YulFunctionCall","src":"10730:27:26"}],"functionName":{"name":"add","nativeSrc":"10720:3:26","nodeType":"YulIdentifier","src":"10720:3:26"},"nativeSrc":"10720:38:26","nodeType":"YulFunctionCall","src":"10720:38:26"},"variables":[{"name":"deleteStart","nativeSrc":"10705:11:26","nodeType":"YulTypedName","src":"10705:11:26","type":""}]},{"body":{"nativeSrc":"10795:23:26","nodeType":"YulBlock","src":"10795:23:26","statements":[{"nativeSrc":"10797:19:26","nodeType":"YulAssignment","src":"10797:19:26","value":{"name":"data","nativeSrc":"10812:4:26","nodeType":"YulIdentifier","src":"10812:4:26"},"variableNames":[{"name":"deleteStart","nativeSrc":"10797:11:26","nodeType":"YulIdentifier","src":"10797:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"10777:10:26","nodeType":"YulIdentifier","src":"10777:10:26"},{"kind":"number","nativeSrc":"10789:4:26","nodeType":"YulLiteral","src":"10789:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"10774:2:26","nodeType":"YulIdentifier","src":"10774:2:26"},"nativeSrc":"10774:20:26","nodeType":"YulFunctionCall","src":"10774:20:26"},"nativeSrc":"10771:47:26","nodeType":"YulIf","src":"10771:47:26"},{"nativeSrc":"10831:41:26","nodeType":"YulVariableDeclaration","src":"10831:41:26","value":{"arguments":[{"name":"data","nativeSrc":"10845:4:26","nodeType":"YulIdentifier","src":"10845:4:26"},{"arguments":[{"kind":"number","nativeSrc":"10855:1:26","nodeType":"YulLiteral","src":"10855:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"10862:3:26","nodeType":"YulIdentifier","src":"10862:3:26"},{"kind":"number","nativeSrc":"10867:2:26","nodeType":"YulLiteral","src":"10867:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"10858:3:26","nodeType":"YulIdentifier","src":"10858:3:26"},"nativeSrc":"10858:12:26","nodeType":"YulFunctionCall","src":"10858:12:26"}],"functionName":{"name":"shr","nativeSrc":"10851:3:26","nodeType":"YulIdentifier","src":"10851:3:26"},"nativeSrc":"10851:20:26","nodeType":"YulFunctionCall","src":"10851:20:26"}],"functionName":{"name":"add","nativeSrc":"10841:3:26","nodeType":"YulIdentifier","src":"10841:3:26"},"nativeSrc":"10841:31:26","nodeType":"YulFunctionCall","src":"10841:31:26"},"variables":[{"name":"_2","nativeSrc":"10835:2:26","nodeType":"YulTypedName","src":"10835:2:26","type":""}]},{"nativeSrc":"10885:24:26","nodeType":"YulVariableDeclaration","src":"10885:24:26","value":{"name":"deleteStart","nativeSrc":"10898:11:26","nodeType":"YulIdentifier","src":"10898:11:26"},"variables":[{"name":"start","nativeSrc":"10889:5:26","nodeType":"YulTypedName","src":"10889:5:26","type":""}]},{"body":{"nativeSrc":"10983:21:26","nodeType":"YulBlock","src":"10983:21:26","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"10992:5:26","nodeType":"YulIdentifier","src":"10992:5:26"},{"name":"_1","nativeSrc":"10999:2:26","nodeType":"YulIdentifier","src":"10999:2:26"}],"functionName":{"name":"sstore","nativeSrc":"10985:6:26","nodeType":"YulIdentifier","src":"10985:6:26"},"nativeSrc":"10985:17:26","nodeType":"YulFunctionCall","src":"10985:17:26"},"nativeSrc":"10985:17:26","nodeType":"YulExpressionStatement","src":"10985:17:26"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"10933:5:26","nodeType":"YulIdentifier","src":"10933:5:26"},{"name":"_2","nativeSrc":"10940:2:26","nodeType":"YulIdentifier","src":"10940:2:26"}],"functionName":{"name":"lt","nativeSrc":"10930:2:26","nodeType":"YulIdentifier","src":"10930:2:26"},"nativeSrc":"10930:13:26","nodeType":"YulFunctionCall","src":"10930:13:26"},"nativeSrc":"10922:82:26","nodeType":"YulForLoop","post":{"nativeSrc":"10944:26:26","nodeType":"YulBlock","src":"10944:26:26","statements":[{"nativeSrc":"10946:22:26","nodeType":"YulAssignment","src":"10946:22:26","value":{"arguments":[{"name":"start","nativeSrc":"10959:5:26","nodeType":"YulIdentifier","src":"10959:5:26"},{"kind":"number","nativeSrc":"10966:1:26","nodeType":"YulLiteral","src":"10966:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"10955:3:26","nodeType":"YulIdentifier","src":"10955:3:26"},"nativeSrc":"10955:13:26","nodeType":"YulFunctionCall","src":"10955:13:26"},"variableNames":[{"name":"start","nativeSrc":"10946:5:26","nodeType":"YulIdentifier","src":"10946:5:26"}]}]},"pre":{"nativeSrc":"10926:3:26","nodeType":"YulBlock","src":"10926:3:26","statements":[]},"src":"10922:82:26"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"10574:3:26","nodeType":"YulIdentifier","src":"10574:3:26"},{"kind":"number","nativeSrc":"10579:2:26","nodeType":"YulLiteral","src":"10579:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"10571:2:26","nodeType":"YulIdentifier","src":"10571:2:26"},"nativeSrc":"10571:11:26","nodeType":"YulFunctionCall","src":"10571:11:26"},"nativeSrc":"10568:446:26","nodeType":"YulIf","src":"10568:446:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"10477:543:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"10530:5:26","nodeType":"YulTypedName","src":"10530:5:26","type":""},{"name":"len","nativeSrc":"10537:3:26","nodeType":"YulTypedName","src":"10537:3:26","type":""},{"name":"startIndex","nativeSrc":"10542:10:26","nodeType":"YulTypedName","src":"10542:10:26","type":""}],"src":"10477:543:26"},{"body":{"nativeSrc":"11110:81:26","nodeType":"YulBlock","src":"11110:81:26","statements":[{"nativeSrc":"11120:65:26","nodeType":"YulAssignment","src":"11120:65:26","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"11135:4:26","nodeType":"YulIdentifier","src":"11135:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11153:1:26","nodeType":"YulLiteral","src":"11153:1:26","type":"","value":"3"},{"name":"len","nativeSrc":"11156:3:26","nodeType":"YulIdentifier","src":"11156:3:26"}],"functionName":{"name":"shl","nativeSrc":"11149:3:26","nodeType":"YulIdentifier","src":"11149:3:26"},"nativeSrc":"11149:11:26","nodeType":"YulFunctionCall","src":"11149:11:26"},{"arguments":[{"kind":"number","nativeSrc":"11166:1:26","nodeType":"YulLiteral","src":"11166:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"11162:3:26","nodeType":"YulIdentifier","src":"11162:3:26"},"nativeSrc":"11162:6:26","nodeType":"YulFunctionCall","src":"11162:6:26"}],"functionName":{"name":"shr","nativeSrc":"11145:3:26","nodeType":"YulIdentifier","src":"11145:3:26"},"nativeSrc":"11145:24:26","nodeType":"YulFunctionCall","src":"11145:24:26"}],"functionName":{"name":"not","nativeSrc":"11141:3:26","nodeType":"YulIdentifier","src":"11141:3:26"},"nativeSrc":"11141:29:26","nodeType":"YulFunctionCall","src":"11141:29:26"}],"functionName":{"name":"and","nativeSrc":"11131:3:26","nodeType":"YulIdentifier","src":"11131:3:26"},"nativeSrc":"11131:40:26","nodeType":"YulFunctionCall","src":"11131:40:26"},{"arguments":[{"kind":"number","nativeSrc":"11177:1:26","nodeType":"YulLiteral","src":"11177:1:26","type":"","value":"1"},{"name":"len","nativeSrc":"11180:3:26","nodeType":"YulIdentifier","src":"11180:3:26"}],"functionName":{"name":"shl","nativeSrc":"11173:3:26","nodeType":"YulIdentifier","src":"11173:3:26"},"nativeSrc":"11173:11:26","nodeType":"YulFunctionCall","src":"11173:11:26"}],"functionName":{"name":"or","nativeSrc":"11128:2:26","nodeType":"YulIdentifier","src":"11128:2:26"},"nativeSrc":"11128:57:26","nodeType":"YulFunctionCall","src":"11128:57:26"},"variableNames":[{"name":"used","nativeSrc":"11120:4:26","nodeType":"YulIdentifier","src":"11120:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"11025:166:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11087:4:26","nodeType":"YulTypedName","src":"11087:4:26","type":""},{"name":"len","nativeSrc":"11093:3:26","nodeType":"YulTypedName","src":"11093:3:26","type":""}],"returnVariables":[{"name":"used","nativeSrc":"11101:4:26","nodeType":"YulTypedName","src":"11101:4:26","type":""}],"src":"11025:166:26"},{"body":{"nativeSrc":"11292:1249:26","nodeType":"YulBlock","src":"11292:1249:26","statements":[{"nativeSrc":"11302:24:26","nodeType":"YulVariableDeclaration","src":"11302:24:26","value":{"arguments":[{"name":"src","nativeSrc":"11322:3:26","nodeType":"YulIdentifier","src":"11322:3:26"}],"functionName":{"name":"mload","nativeSrc":"11316:5:26","nodeType":"YulIdentifier","src":"11316:5:26"},"nativeSrc":"11316:10:26","nodeType":"YulFunctionCall","src":"11316:10:26"},"variables":[{"name":"newLen","nativeSrc":"11306:6:26","nodeType":"YulTypedName","src":"11306:6:26","type":""}]},{"body":{"nativeSrc":"11369:22:26","nodeType":"YulBlock","src":"11369:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"11371:16:26","nodeType":"YulIdentifier","src":"11371:16:26"},"nativeSrc":"11371:18:26","nodeType":"YulFunctionCall","src":"11371:18:26"},"nativeSrc":"11371:18:26","nodeType":"YulExpressionStatement","src":"11371:18:26"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"11341:6:26","nodeType":"YulIdentifier","src":"11341:6:26"},{"kind":"number","nativeSrc":"11349:18:26","nodeType":"YulLiteral","src":"11349:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11338:2:26","nodeType":"YulIdentifier","src":"11338:2:26"},"nativeSrc":"11338:30:26","nodeType":"YulFunctionCall","src":"11338:30:26"},"nativeSrc":"11335:56:26","nodeType":"YulIf","src":"11335:56:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"11444:4:26","nodeType":"YulIdentifier","src":"11444:4:26"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"11482:4:26","nodeType":"YulIdentifier","src":"11482:4:26"}],"functionName":{"name":"sload","nativeSrc":"11476:5:26","nodeType":"YulIdentifier","src":"11476:5:26"},"nativeSrc":"11476:11:26","nodeType":"YulFunctionCall","src":"11476:11:26"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"11450:25:26","nodeType":"YulIdentifier","src":"11450:25:26"},"nativeSrc":"11450:38:26","nodeType":"YulFunctionCall","src":"11450:38:26"},{"name":"newLen","nativeSrc":"11490:6:26","nodeType":"YulIdentifier","src":"11490:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"11400:43:26","nodeType":"YulIdentifier","src":"11400:43:26"},"nativeSrc":"11400:97:26","nodeType":"YulFunctionCall","src":"11400:97:26"},"nativeSrc":"11400:97:26","nodeType":"YulExpressionStatement","src":"11400:97:26"},{"nativeSrc":"11506:18:26","nodeType":"YulVariableDeclaration","src":"11506:18:26","value":{"kind":"number","nativeSrc":"11523:1:26","nodeType":"YulLiteral","src":"11523:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"11510:9:26","nodeType":"YulTypedName","src":"11510:9:26","type":""}]},{"nativeSrc":"11533:23:26","nodeType":"YulVariableDeclaration","src":"11533:23:26","value":{"kind":"number","nativeSrc":"11552:4:26","nodeType":"YulLiteral","src":"11552:4:26","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"11537:11:26","nodeType":"YulTypedName","src":"11537:11:26","type":""}]},{"nativeSrc":"11565:17:26","nodeType":"YulAssignment","src":"11565:17:26","value":{"kind":"number","nativeSrc":"11578:4:26","nodeType":"YulLiteral","src":"11578:4:26","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"11565:9:26","nodeType":"YulIdentifier","src":"11565:9:26"}]},{"cases":[{"body":{"nativeSrc":"11628:656:26","nodeType":"YulBlock","src":"11628:656:26","statements":[{"nativeSrc":"11642:35:26","nodeType":"YulVariableDeclaration","src":"11642:35:26","value":{"arguments":[{"name":"newLen","nativeSrc":"11661:6:26","nodeType":"YulIdentifier","src":"11661:6:26"},{"arguments":[{"kind":"number","nativeSrc":"11673:2:26","nodeType":"YulLiteral","src":"11673:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"11669:3:26","nodeType":"YulIdentifier","src":"11669:3:26"},"nativeSrc":"11669:7:26","nodeType":"YulFunctionCall","src":"11669:7:26"}],"functionName":{"name":"and","nativeSrc":"11657:3:26","nodeType":"YulIdentifier","src":"11657:3:26"},"nativeSrc":"11657:20:26","nodeType":"YulFunctionCall","src":"11657:20:26"},"variables":[{"name":"loopEnd","nativeSrc":"11646:7:26","nodeType":"YulTypedName","src":"11646:7:26","type":""}]},{"nativeSrc":"11690:49:26","nodeType":"YulVariableDeclaration","src":"11690:49:26","value":{"arguments":[{"name":"slot","nativeSrc":"11734:4:26","nodeType":"YulIdentifier","src":"11734:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"11704:29:26","nodeType":"YulIdentifier","src":"11704:29:26"},"nativeSrc":"11704:35:26","nodeType":"YulFunctionCall","src":"11704:35:26"},"variables":[{"name":"dstPtr","nativeSrc":"11694:6:26","nodeType":"YulTypedName","src":"11694:6:26","type":""}]},{"nativeSrc":"11752:10:26","nodeType":"YulVariableDeclaration","src":"11752:10:26","value":{"kind":"number","nativeSrc":"11761:1:26","nodeType":"YulLiteral","src":"11761:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11756:1:26","nodeType":"YulTypedName","src":"11756:1:26","type":""}]},{"body":{"nativeSrc":"11839:172:26","nodeType":"YulBlock","src":"11839:172:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"11864:6:26","nodeType":"YulIdentifier","src":"11864:6:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11882:3:26","nodeType":"YulIdentifier","src":"11882:3:26"},{"name":"srcOffset","nativeSrc":"11887:9:26","nodeType":"YulIdentifier","src":"11887:9:26"}],"functionName":{"name":"add","nativeSrc":"11878:3:26","nodeType":"YulIdentifier","src":"11878:3:26"},"nativeSrc":"11878:19:26","nodeType":"YulFunctionCall","src":"11878:19:26"}],"functionName":{"name":"mload","nativeSrc":"11872:5:26","nodeType":"YulIdentifier","src":"11872:5:26"},"nativeSrc":"11872:26:26","nodeType":"YulFunctionCall","src":"11872:26:26"}],"functionName":{"name":"sstore","nativeSrc":"11857:6:26","nodeType":"YulIdentifier","src":"11857:6:26"},"nativeSrc":"11857:42:26","nodeType":"YulFunctionCall","src":"11857:42:26"},"nativeSrc":"11857:42:26","nodeType":"YulExpressionStatement","src":"11857:42:26"},{"nativeSrc":"11916:24:26","nodeType":"YulAssignment","src":"11916:24:26","value":{"arguments":[{"name":"dstPtr","nativeSrc":"11930:6:26","nodeType":"YulIdentifier","src":"11930:6:26"},{"kind":"number","nativeSrc":"11938:1:26","nodeType":"YulLiteral","src":"11938:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11926:3:26","nodeType":"YulIdentifier","src":"11926:3:26"},"nativeSrc":"11926:14:26","nodeType":"YulFunctionCall","src":"11926:14:26"},"variableNames":[{"name":"dstPtr","nativeSrc":"11916:6:26","nodeType":"YulIdentifier","src":"11916:6:26"}]},{"nativeSrc":"11957:40:26","nodeType":"YulAssignment","src":"11957:40:26","value":{"arguments":[{"name":"srcOffset","nativeSrc":"11974:9:26","nodeType":"YulIdentifier","src":"11974:9:26"},{"name":"srcOffset_1","nativeSrc":"11985:11:26","nodeType":"YulIdentifier","src":"11985:11:26"}],"functionName":{"name":"add","nativeSrc":"11970:3:26","nodeType":"YulIdentifier","src":"11970:3:26"},"nativeSrc":"11970:27:26","nodeType":"YulFunctionCall","src":"11970:27:26"},"variableNames":[{"name":"srcOffset","nativeSrc":"11957:9:26","nodeType":"YulIdentifier","src":"11957:9:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11786:1:26","nodeType":"YulIdentifier","src":"11786:1:26"},{"name":"loopEnd","nativeSrc":"11789:7:26","nodeType":"YulIdentifier","src":"11789:7:26"}],"functionName":{"name":"lt","nativeSrc":"11783:2:26","nodeType":"YulIdentifier","src":"11783:2:26"},"nativeSrc":"11783:14:26","nodeType":"YulFunctionCall","src":"11783:14:26"},"nativeSrc":"11775:236:26","nodeType":"YulForLoop","post":{"nativeSrc":"11798:28:26","nodeType":"YulBlock","src":"11798:28:26","statements":[{"nativeSrc":"11800:24:26","nodeType":"YulAssignment","src":"11800:24:26","value":{"arguments":[{"name":"i","nativeSrc":"11809:1:26","nodeType":"YulIdentifier","src":"11809:1:26"},{"name":"srcOffset_1","nativeSrc":"11812:11:26","nodeType":"YulIdentifier","src":"11812:11:26"}],"functionName":{"name":"add","nativeSrc":"11805:3:26","nodeType":"YulIdentifier","src":"11805:3:26"},"nativeSrc":"11805:19:26","nodeType":"YulFunctionCall","src":"11805:19:26"},"variableNames":[{"name":"i","nativeSrc":"11800:1:26","nodeType":"YulIdentifier","src":"11800:1:26"}]}]},"pre":{"nativeSrc":"11779:3:26","nodeType":"YulBlock","src":"11779:3:26","statements":[]},"src":"11775:236:26"},{"body":{"nativeSrc":"12059:166:26","nodeType":"YulBlock","src":"12059:166:26","statements":[{"nativeSrc":"12077:43:26","nodeType":"YulVariableDeclaration","src":"12077:43:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"12104:3:26","nodeType":"YulIdentifier","src":"12104:3:26"},{"name":"srcOffset","nativeSrc":"12109:9:26","nodeType":"YulIdentifier","src":"12109:9:26"}],"functionName":{"name":"add","nativeSrc":"12100:3:26","nodeType":"YulIdentifier","src":"12100:3:26"},"nativeSrc":"12100:19:26","nodeType":"YulFunctionCall","src":"12100:19:26"}],"functionName":{"name":"mload","nativeSrc":"12094:5:26","nodeType":"YulIdentifier","src":"12094:5:26"},"nativeSrc":"12094:26:26","nodeType":"YulFunctionCall","src":"12094:26:26"},"variables":[{"name":"lastValue","nativeSrc":"12081:9:26","nodeType":"YulTypedName","src":"12081:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"12144:6:26","nodeType":"YulIdentifier","src":"12144:6:26"},{"arguments":[{"name":"lastValue","nativeSrc":"12156:9:26","nodeType":"YulIdentifier","src":"12156:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12183:1:26","nodeType":"YulLiteral","src":"12183:1:26","type":"","value":"3"},{"name":"newLen","nativeSrc":"12186:6:26","nodeType":"YulIdentifier","src":"12186:6:26"}],"functionName":{"name":"shl","nativeSrc":"12179:3:26","nodeType":"YulIdentifier","src":"12179:3:26"},"nativeSrc":"12179:14:26","nodeType":"YulFunctionCall","src":"12179:14:26"},{"kind":"number","nativeSrc":"12195:3:26","nodeType":"YulLiteral","src":"12195:3:26","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"12175:3:26","nodeType":"YulIdentifier","src":"12175:3:26"},"nativeSrc":"12175:24:26","nodeType":"YulFunctionCall","src":"12175:24:26"},{"arguments":[{"kind":"number","nativeSrc":"12205:1:26","nodeType":"YulLiteral","src":"12205:1:26","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"12201:3:26","nodeType":"YulIdentifier","src":"12201:3:26"},"nativeSrc":"12201:6:26","nodeType":"YulFunctionCall","src":"12201:6:26"}],"functionName":{"name":"shr","nativeSrc":"12171:3:26","nodeType":"YulIdentifier","src":"12171:3:26"},"nativeSrc":"12171:37:26","nodeType":"YulFunctionCall","src":"12171:37:26"}],"functionName":{"name":"not","nativeSrc":"12167:3:26","nodeType":"YulIdentifier","src":"12167:3:26"},"nativeSrc":"12167:42:26","nodeType":"YulFunctionCall","src":"12167:42:26"}],"functionName":{"name":"and","nativeSrc":"12152:3:26","nodeType":"YulIdentifier","src":"12152:3:26"},"nativeSrc":"12152:58:26","nodeType":"YulFunctionCall","src":"12152:58:26"}],"functionName":{"name":"sstore","nativeSrc":"12137:6:26","nodeType":"YulIdentifier","src":"12137:6:26"},"nativeSrc":"12137:74:26","nodeType":"YulFunctionCall","src":"12137:74:26"},"nativeSrc":"12137:74:26","nodeType":"YulExpressionStatement","src":"12137:74:26"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"12030:7:26","nodeType":"YulIdentifier","src":"12030:7:26"},{"name":"newLen","nativeSrc":"12039:6:26","nodeType":"YulIdentifier","src":"12039:6:26"}],"functionName":{"name":"lt","nativeSrc":"12027:2:26","nodeType":"YulIdentifier","src":"12027:2:26"},"nativeSrc":"12027:19:26","nodeType":"YulFunctionCall","src":"12027:19:26"},"nativeSrc":"12024:201:26","nodeType":"YulIf","src":"12024:201:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"12245:4:26","nodeType":"YulIdentifier","src":"12245:4:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12259:1:26","nodeType":"YulLiteral","src":"12259:1:26","type":"","value":"1"},{"name":"newLen","nativeSrc":"12262:6:26","nodeType":"YulIdentifier","src":"12262:6:26"}],"functionName":{"name":"shl","nativeSrc":"12255:3:26","nodeType":"YulIdentifier","src":"12255:3:26"},"nativeSrc":"12255:14:26","nodeType":"YulFunctionCall","src":"12255:14:26"},{"kind":"number","nativeSrc":"12271:1:26","nodeType":"YulLiteral","src":"12271:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"12251:3:26","nodeType":"YulIdentifier","src":"12251:3:26"},"nativeSrc":"12251:22:26","nodeType":"YulFunctionCall","src":"12251:22:26"}],"functionName":{"name":"sstore","nativeSrc":"12238:6:26","nodeType":"YulIdentifier","src":"12238:6:26"},"nativeSrc":"12238:36:26","nodeType":"YulFunctionCall","src":"12238:36:26"},"nativeSrc":"12238:36:26","nodeType":"YulExpressionStatement","src":"12238:36:26"}]},"nativeSrc":"11621:663:26","nodeType":"YulCase","src":"11621:663:26","value":{"kind":"number","nativeSrc":"11626:1:26","nodeType":"YulLiteral","src":"11626:1:26","type":"","value":"1"}},{"body":{"nativeSrc":"12301:234:26","nodeType":"YulBlock","src":"12301:234:26","statements":[{"nativeSrc":"12315:14:26","nodeType":"YulVariableDeclaration","src":"12315:14:26","value":{"kind":"number","nativeSrc":"12328:1:26","nodeType":"YulLiteral","src":"12328:1:26","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"12319:5:26","nodeType":"YulTypedName","src":"12319:5:26","type":""}]},{"body":{"nativeSrc":"12364:67:26","nodeType":"YulBlock","src":"12364:67:26","statements":[{"nativeSrc":"12382:35:26","nodeType":"YulAssignment","src":"12382:35:26","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"12401:3:26","nodeType":"YulIdentifier","src":"12401:3:26"},{"name":"srcOffset","nativeSrc":"12406:9:26","nodeType":"YulIdentifier","src":"12406:9:26"}],"functionName":{"name":"add","nativeSrc":"12397:3:26","nodeType":"YulIdentifier","src":"12397:3:26"},"nativeSrc":"12397:19:26","nodeType":"YulFunctionCall","src":"12397:19:26"}],"functionName":{"name":"mload","nativeSrc":"12391:5:26","nodeType":"YulIdentifier","src":"12391:5:26"},"nativeSrc":"12391:26:26","nodeType":"YulFunctionCall","src":"12391:26:26"},"variableNames":[{"name":"value","nativeSrc":"12382:5:26","nodeType":"YulIdentifier","src":"12382:5:26"}]}]},"condition":{"name":"newLen","nativeSrc":"12345:6:26","nodeType":"YulIdentifier","src":"12345:6:26"},"nativeSrc":"12342:89:26","nodeType":"YulIf","src":"12342:89:26"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"12451:4:26","nodeType":"YulIdentifier","src":"12451:4:26"},{"arguments":[{"name":"value","nativeSrc":"12510:5:26","nodeType":"YulIdentifier","src":"12510:5:26"},{"name":"newLen","nativeSrc":"12517:6:26","nodeType":"YulIdentifier","src":"12517:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"12457:52:26","nodeType":"YulIdentifier","src":"12457:52:26"},"nativeSrc":"12457:67:26","nodeType":"YulFunctionCall","src":"12457:67:26"}],"functionName":{"name":"sstore","nativeSrc":"12444:6:26","nodeType":"YulIdentifier","src":"12444:6:26"},"nativeSrc":"12444:81:26","nodeType":"YulFunctionCall","src":"12444:81:26"},"nativeSrc":"12444:81:26","nodeType":"YulExpressionStatement","src":"12444:81:26"}]},"nativeSrc":"12293:242:26","nodeType":"YulCase","src":"12293:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"11601:6:26","nodeType":"YulIdentifier","src":"11601:6:26"},{"kind":"number","nativeSrc":"11609:2:26","nodeType":"YulLiteral","src":"11609:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"11598:2:26","nodeType":"YulIdentifier","src":"11598:2:26"},"nativeSrc":"11598:14:26","nodeType":"YulFunctionCall","src":"11598:14:26"},"nativeSrc":"11591:944:26","nodeType":"YulSwitch","src":"11591:944:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"11196:1345:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"11277:4:26","nodeType":"YulTypedName","src":"11277:4:26","type":""},{"name":"src","nativeSrc":"11283:3:26","nodeType":"YulTypedName","src":"11283:3:26","type":""}],"src":"11196:1345:26"},{"body":{"nativeSrc":"12739:696:26","nodeType":"YulBlock","src":"12739:696:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12756:9:26","nodeType":"YulIdentifier","src":"12756:9:26"},{"kind":"number","nativeSrc":"12767:2:26","nodeType":"YulLiteral","src":"12767:2:26","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"12749:6:26","nodeType":"YulIdentifier","src":"12749:6:26"},"nativeSrc":"12749:21:26","nodeType":"YulFunctionCall","src":"12749:21:26"},"nativeSrc":"12749:21:26","nodeType":"YulExpressionStatement","src":"12749:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12790:9:26","nodeType":"YulIdentifier","src":"12790:9:26"},{"kind":"number","nativeSrc":"12801:2:26","nodeType":"YulLiteral","src":"12801:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12786:3:26","nodeType":"YulIdentifier","src":"12786:3:26"},"nativeSrc":"12786:18:26","nodeType":"YulFunctionCall","src":"12786:18:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"12816:6:26","nodeType":"YulIdentifier","src":"12816:6:26"}],"functionName":{"name":"mload","nativeSrc":"12810:5:26","nodeType":"YulIdentifier","src":"12810:5:26"},"nativeSrc":"12810:13:26","nodeType":"YulFunctionCall","src":"12810:13:26"},{"kind":"number","nativeSrc":"12825:10:26","nodeType":"YulLiteral","src":"12825:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"12806:3:26","nodeType":"YulIdentifier","src":"12806:3:26"},"nativeSrc":"12806:30:26","nodeType":"YulFunctionCall","src":"12806:30:26"}],"functionName":{"name":"mstore","nativeSrc":"12779:6:26","nodeType":"YulIdentifier","src":"12779:6:26"},"nativeSrc":"12779:58:26","nodeType":"YulFunctionCall","src":"12779:58:26"},"nativeSrc":"12779:58:26","nodeType":"YulExpressionStatement","src":"12779:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12857:9:26","nodeType":"YulIdentifier","src":"12857:9:26"},{"kind":"number","nativeSrc":"12868:2:26","nodeType":"YulLiteral","src":"12868:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12853:3:26","nodeType":"YulIdentifier","src":"12853:3:26"},"nativeSrc":"12853:18:26","nodeType":"YulFunctionCall","src":"12853:18:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"12883:6:26","nodeType":"YulIdentifier","src":"12883:6:26"},{"kind":"number","nativeSrc":"12891:4:26","nodeType":"YulLiteral","src":"12891:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12879:3:26","nodeType":"YulIdentifier","src":"12879:3:26"},"nativeSrc":"12879:17:26","nodeType":"YulFunctionCall","src":"12879:17:26"}],"functionName":{"name":"mload","nativeSrc":"12873:5:26","nodeType":"YulIdentifier","src":"12873:5:26"},"nativeSrc":"12873:24:26","nodeType":"YulFunctionCall","src":"12873:24:26"}],"functionName":{"name":"mstore","nativeSrc":"12846:6:26","nodeType":"YulIdentifier","src":"12846:6:26"},"nativeSrc":"12846:52:26","nodeType":"YulFunctionCall","src":"12846:52:26"},"nativeSrc":"12846:52:26","nodeType":"YulExpressionStatement","src":"12846:52:26"},{"nativeSrc":"12907:42:26","nodeType":"YulVariableDeclaration","src":"12907:42:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"12937:6:26","nodeType":"YulIdentifier","src":"12937:6:26"},{"kind":"number","nativeSrc":"12945:2:26","nodeType":"YulLiteral","src":"12945:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12933:3:26","nodeType":"YulIdentifier","src":"12933:3:26"},"nativeSrc":"12933:15:26","nodeType":"YulFunctionCall","src":"12933:15:26"}],"functionName":{"name":"mload","nativeSrc":"12927:5:26","nodeType":"YulIdentifier","src":"12927:5:26"},"nativeSrc":"12927:22:26","nodeType":"YulFunctionCall","src":"12927:22:26"},"variables":[{"name":"memberValue0","nativeSrc":"12911:12:26","nodeType":"YulTypedName","src":"12911:12:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12969:9:26","nodeType":"YulIdentifier","src":"12969:9:26"},{"kind":"number","nativeSrc":"12980:3:26","nodeType":"YulLiteral","src":"12980:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12965:3:26","nodeType":"YulIdentifier","src":"12965:3:26"},"nativeSrc":"12965:19:26","nodeType":"YulFunctionCall","src":"12965:19:26"},{"kind":"number","nativeSrc":"12986:4:26","nodeType":"YulLiteral","src":"12986:4:26","type":"","value":"0xa0"}],"functionName":{"name":"mstore","nativeSrc":"12958:6:26","nodeType":"YulIdentifier","src":"12958:6:26"},"nativeSrc":"12958:33:26","nodeType":"YulFunctionCall","src":"12958:33:26"},"nativeSrc":"12958:33:26","nodeType":"YulExpressionStatement","src":"12958:33:26"},{"nativeSrc":"13000:66:26","nodeType":"YulVariableDeclaration","src":"13000:66:26","value":{"arguments":[{"name":"memberValue0","nativeSrc":"13032:12:26","nodeType":"YulIdentifier","src":"13032:12:26"},{"arguments":[{"name":"headStart","nativeSrc":"13050:9:26","nodeType":"YulIdentifier","src":"13050:9:26"},{"kind":"number","nativeSrc":"13061:3:26","nodeType":"YulLiteral","src":"13061:3:26","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"13046:3:26","nodeType":"YulIdentifier","src":"13046:3:26"},"nativeSrc":"13046:19:26","nodeType":"YulFunctionCall","src":"13046:19:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"13014:17:26","nodeType":"YulIdentifier","src":"13014:17:26"},"nativeSrc":"13014:52:26","nodeType":"YulFunctionCall","src":"13014:52:26"},"variables":[{"name":"tail_1","nativeSrc":"13004:6:26","nodeType":"YulTypedName","src":"13004:6:26","type":""}]},{"nativeSrc":"13075:44:26","nodeType":"YulVariableDeclaration","src":"13075:44:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"13107:6:26","nodeType":"YulIdentifier","src":"13107:6:26"},{"kind":"number","nativeSrc":"13115:2:26","nodeType":"YulLiteral","src":"13115:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13103:3:26","nodeType":"YulIdentifier","src":"13103:3:26"},"nativeSrc":"13103:15:26","nodeType":"YulFunctionCall","src":"13103:15:26"}],"functionName":{"name":"mload","nativeSrc":"13097:5:26","nodeType":"YulIdentifier","src":"13097:5:26"},"nativeSrc":"13097:22:26","nodeType":"YulFunctionCall","src":"13097:22:26"},"variables":[{"name":"memberValue0_1","nativeSrc":"13079:14:26","nodeType":"YulTypedName","src":"13079:14:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13139:9:26","nodeType":"YulIdentifier","src":"13139:9:26"},{"kind":"number","nativeSrc":"13150:4:26","nodeType":"YulLiteral","src":"13150:4:26","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"13135:3:26","nodeType":"YulIdentifier","src":"13135:3:26"},"nativeSrc":"13135:20:26","nodeType":"YulFunctionCall","src":"13135:20:26"},{"arguments":[{"arguments":[{"name":"tail_1","nativeSrc":"13165:6:26","nodeType":"YulIdentifier","src":"13165:6:26"},{"name":"headStart","nativeSrc":"13173:9:26","nodeType":"YulIdentifier","src":"13173:9:26"}],"functionName":{"name":"sub","nativeSrc":"13161:3:26","nodeType":"YulIdentifier","src":"13161:3:26"},"nativeSrc":"13161:22:26","nodeType":"YulFunctionCall","src":"13161:22:26"},{"arguments":[{"kind":"number","nativeSrc":"13189:2:26","nodeType":"YulLiteral","src":"13189:2:26","type":"","value":"63"}],"functionName":{"name":"not","nativeSrc":"13185:3:26","nodeType":"YulIdentifier","src":"13185:3:26"},"nativeSrc":"13185:7:26","nodeType":"YulFunctionCall","src":"13185:7:26"}],"functionName":{"name":"add","nativeSrc":"13157:3:26","nodeType":"YulIdentifier","src":"13157:3:26"},"nativeSrc":"13157:36:26","nodeType":"YulFunctionCall","src":"13157:36:26"}],"functionName":{"name":"mstore","nativeSrc":"13128:6:26","nodeType":"YulIdentifier","src":"13128:6:26"},"nativeSrc":"13128:66:26","nodeType":"YulFunctionCall","src":"13128:66:26"},"nativeSrc":"13128:66:26","nodeType":"YulExpressionStatement","src":"13128:66:26"},{"nativeSrc":"13203:55:26","nodeType":"YulVariableDeclaration","src":"13203:55:26","value":{"arguments":[{"name":"memberValue0_1","nativeSrc":"13235:14:26","nodeType":"YulIdentifier","src":"13235:14:26"},{"name":"tail_1","nativeSrc":"13251:6:26","nodeType":"YulIdentifier","src":"13251:6:26"}],"functionName":{"name":"abi_encode_string","nativeSrc":"13217:17:26","nodeType":"YulIdentifier","src":"13217:17:26"},"nativeSrc":"13217:41:26","nodeType":"YulFunctionCall","src":"13217:41:26"},"variables":[{"name":"tail_2","nativeSrc":"13207:6:26","nodeType":"YulTypedName","src":"13207:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13278:9:26","nodeType":"YulIdentifier","src":"13278:9:26"},{"kind":"number","nativeSrc":"13289:3:26","nodeType":"YulLiteral","src":"13289:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"13274:3:26","nodeType":"YulIdentifier","src":"13274:3:26"},"nativeSrc":"13274:19:26","nodeType":"YulFunctionCall","src":"13274:19:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"13319:6:26","nodeType":"YulIdentifier","src":"13319:6:26"},{"kind":"number","nativeSrc":"13327:3:26","nodeType":"YulLiteral","src":"13327:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"13315:3:26","nodeType":"YulIdentifier","src":"13315:3:26"},"nativeSrc":"13315:16:26","nodeType":"YulFunctionCall","src":"13315:16:26"}],"functionName":{"name":"mload","nativeSrc":"13309:5:26","nodeType":"YulIdentifier","src":"13309:5:26"},"nativeSrc":"13309:23:26","nodeType":"YulFunctionCall","src":"13309:23:26"}],"functionName":{"name":"iszero","nativeSrc":"13302:6:26","nodeType":"YulIdentifier","src":"13302:6:26"},"nativeSrc":"13302:31:26","nodeType":"YulFunctionCall","src":"13302:31:26"}],"functionName":{"name":"iszero","nativeSrc":"13295:6:26","nodeType":"YulIdentifier","src":"13295:6:26"},"nativeSrc":"13295:39:26","nodeType":"YulFunctionCall","src":"13295:39:26"}],"functionName":{"name":"mstore","nativeSrc":"13267:6:26","nodeType":"YulIdentifier","src":"13267:6:26"},"nativeSrc":"13267:68:26","nodeType":"YulFunctionCall","src":"13267:68:26"},"nativeSrc":"13267:68:26","nodeType":"YulExpressionStatement","src":"13267:68:26"},{"nativeSrc":"13344:14:26","nodeType":"YulAssignment","src":"13344:14:26","value":{"name":"tail_2","nativeSrc":"13352:6:26","nodeType":"YulIdentifier","src":"13352:6:26"},"variableNames":[{"name":"tail","nativeSrc":"13344:4:26","nodeType":"YulIdentifier","src":"13344:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13378:9:26","nodeType":"YulIdentifier","src":"13378:9:26"},{"kind":"number","nativeSrc":"13389:4:26","nodeType":"YulLiteral","src":"13389:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13374:3:26","nodeType":"YulIdentifier","src":"13374:3:26"},"nativeSrc":"13374:20:26","nodeType":"YulFunctionCall","src":"13374:20:26"},{"arguments":[{"name":"value1","nativeSrc":"13400:6:26","nodeType":"YulIdentifier","src":"13400:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13416:3:26","nodeType":"YulLiteral","src":"13416:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"13421:1:26","nodeType":"YulLiteral","src":"13421:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13412:3:26","nodeType":"YulIdentifier","src":"13412:3:26"},"nativeSrc":"13412:11:26","nodeType":"YulFunctionCall","src":"13412:11:26"},{"kind":"number","nativeSrc":"13425:1:26","nodeType":"YulLiteral","src":"13425:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13408:3:26","nodeType":"YulIdentifier","src":"13408:3:26"},"nativeSrc":"13408:19:26","nodeType":"YulFunctionCall","src":"13408:19:26"}],"functionName":{"name":"and","nativeSrc":"13396:3:26","nodeType":"YulIdentifier","src":"13396:3:26"},"nativeSrc":"13396:32:26","nodeType":"YulFunctionCall","src":"13396:32:26"}],"functionName":{"name":"mstore","nativeSrc":"13367:6:26","nodeType":"YulIdentifier","src":"13367:6:26"},"nativeSrc":"13367:62:26","nodeType":"YulFunctionCall","src":"13367:62:26"},"nativeSrc":"13367:62:26","nodeType":"YulExpressionStatement","src":"13367:62:26"}]},"name":"abi_encode_tuple_t_struct$_MessagingParams_$618_memory_ptr_t_address__to_t_struct$_MessagingParams_$618_memory_ptr_t_address__fromStack_reversed","nativeSrc":"12546:889:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12700:9:26","nodeType":"YulTypedName","src":"12700:9:26","type":""},{"name":"value1","nativeSrc":"12711:6:26","nodeType":"YulTypedName","src":"12711:6:26","type":""},{"name":"value0","nativeSrc":"12719:6:26","nodeType":"YulTypedName","src":"12719:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12730:4:26","nodeType":"YulTypedName","src":"12730:4:26","type":""}],"src":"12546:889:26"},{"body":{"nativeSrc":"13520:398:26","nodeType":"YulBlock","src":"13520:398:26","statements":[{"body":{"nativeSrc":"13564:16:26","nodeType":"YulBlock","src":"13564:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13573:1:26","nodeType":"YulLiteral","src":"13573:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"13576:1:26","nodeType":"YulLiteral","src":"13576:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13566:6:26","nodeType":"YulIdentifier","src":"13566:6:26"},"nativeSrc":"13566:12:26","nodeType":"YulFunctionCall","src":"13566:12:26"},"nativeSrc":"13566:12:26","nodeType":"YulExpressionStatement","src":"13566:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"13541:3:26","nodeType":"YulIdentifier","src":"13541:3:26"},{"name":"headStart","nativeSrc":"13546:9:26","nodeType":"YulIdentifier","src":"13546:9:26"}],"functionName":{"name":"sub","nativeSrc":"13537:3:26","nodeType":"YulIdentifier","src":"13537:3:26"},"nativeSrc":"13537:19:26","nodeType":"YulFunctionCall","src":"13537:19:26"},{"kind":"number","nativeSrc":"13558:4:26","nodeType":"YulLiteral","src":"13558:4:26","type":"","value":"0x40"}],"functionName":{"name":"slt","nativeSrc":"13533:3:26","nodeType":"YulIdentifier","src":"13533:3:26"},"nativeSrc":"13533:30:26","nodeType":"YulFunctionCall","src":"13533:30:26"},"nativeSrc":"13530:50:26","nodeType":"YulIf","src":"13530:50:26"},{"nativeSrc":"13589:25:26","nodeType":"YulVariableDeclaration","src":"13589:25:26","value":{"arguments":[{"kind":"number","nativeSrc":"13609:4:26","nodeType":"YulLiteral","src":"13609:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"13603:5:26","nodeType":"YulIdentifier","src":"13603:5:26"},"nativeSrc":"13603:11:26","nodeType":"YulFunctionCall","src":"13603:11:26"},"variables":[{"name":"memPtr","nativeSrc":"13593:6:26","nodeType":"YulTypedName","src":"13593:6:26","type":""}]},{"nativeSrc":"13623:35:26","nodeType":"YulVariableDeclaration","src":"13623:35:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"13645:6:26","nodeType":"YulIdentifier","src":"13645:6:26"},{"kind":"number","nativeSrc":"13653:4:26","nodeType":"YulLiteral","src":"13653:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"13641:3:26","nodeType":"YulIdentifier","src":"13641:3:26"},"nativeSrc":"13641:17:26","nodeType":"YulFunctionCall","src":"13641:17:26"},"variables":[{"name":"newFreePtr","nativeSrc":"13627:10:26","nodeType":"YulTypedName","src":"13627:10:26","type":""}]},{"body":{"nativeSrc":"13733:22:26","nodeType":"YulBlock","src":"13733:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"13735:16:26","nodeType":"YulIdentifier","src":"13735:16:26"},"nativeSrc":"13735:18:26","nodeType":"YulFunctionCall","src":"13735:18:26"},"nativeSrc":"13735:18:26","nodeType":"YulExpressionStatement","src":"13735:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"13676:10:26","nodeType":"YulIdentifier","src":"13676:10:26"},{"kind":"number","nativeSrc":"13688:18:26","nodeType":"YulLiteral","src":"13688:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"13673:2:26","nodeType":"YulIdentifier","src":"13673:2:26"},"nativeSrc":"13673:34:26","nodeType":"YulFunctionCall","src":"13673:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"13712:10:26","nodeType":"YulIdentifier","src":"13712:10:26"},{"name":"memPtr","nativeSrc":"13724:6:26","nodeType":"YulIdentifier","src":"13724:6:26"}],"functionName":{"name":"lt","nativeSrc":"13709:2:26","nodeType":"YulIdentifier","src":"13709:2:26"},"nativeSrc":"13709:22:26","nodeType":"YulFunctionCall","src":"13709:22:26"}],"functionName":{"name":"or","nativeSrc":"13670:2:26","nodeType":"YulIdentifier","src":"13670:2:26"},"nativeSrc":"13670:62:26","nodeType":"YulFunctionCall","src":"13670:62:26"},"nativeSrc":"13667:88:26","nodeType":"YulIf","src":"13667:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13771:4:26","nodeType":"YulLiteral","src":"13771:4:26","type":"","value":"0x40"},{"name":"newFreePtr","nativeSrc":"13777:10:26","nodeType":"YulIdentifier","src":"13777:10:26"}],"functionName":{"name":"mstore","nativeSrc":"13764:6:26","nodeType":"YulIdentifier","src":"13764:6:26"},"nativeSrc":"13764:24:26","nodeType":"YulFunctionCall","src":"13764:24:26"},"nativeSrc":"13764:24:26","nodeType":"YulExpressionStatement","src":"13764:24:26"},{"nativeSrc":"13797:15:26","nodeType":"YulAssignment","src":"13797:15:26","value":{"name":"memPtr","nativeSrc":"13806:6:26","nodeType":"YulIdentifier","src":"13806:6:26"},"variableNames":[{"name":"value","nativeSrc":"13797:5:26","nodeType":"YulIdentifier","src":"13797:5:26"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"13828:6:26","nodeType":"YulIdentifier","src":"13828:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"13842:9:26","nodeType":"YulIdentifier","src":"13842:9:26"}],"functionName":{"name":"mload","nativeSrc":"13836:5:26","nodeType":"YulIdentifier","src":"13836:5:26"},"nativeSrc":"13836:16:26","nodeType":"YulFunctionCall","src":"13836:16:26"}],"functionName":{"name":"mstore","nativeSrc":"13821:6:26","nodeType":"YulIdentifier","src":"13821:6:26"},"nativeSrc":"13821:32:26","nodeType":"YulFunctionCall","src":"13821:32:26"},"nativeSrc":"13821:32:26","nodeType":"YulExpressionStatement","src":"13821:32:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13873:6:26","nodeType":"YulIdentifier","src":"13873:6:26"},{"kind":"number","nativeSrc":"13881:2:26","nodeType":"YulLiteral","src":"13881:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13869:3:26","nodeType":"YulIdentifier","src":"13869:3:26"},"nativeSrc":"13869:15:26","nodeType":"YulFunctionCall","src":"13869:15:26"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13896:9:26","nodeType":"YulIdentifier","src":"13896:9:26"},{"kind":"number","nativeSrc":"13907:2:26","nodeType":"YulLiteral","src":"13907:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13892:3:26","nodeType":"YulIdentifier","src":"13892:3:26"},"nativeSrc":"13892:18:26","nodeType":"YulFunctionCall","src":"13892:18:26"}],"functionName":{"name":"mload","nativeSrc":"13886:5:26","nodeType":"YulIdentifier","src":"13886:5:26"},"nativeSrc":"13886:25:26","nodeType":"YulFunctionCall","src":"13886:25:26"}],"functionName":{"name":"mstore","nativeSrc":"13862:6:26","nodeType":"YulIdentifier","src":"13862:6:26"},"nativeSrc":"13862:50:26","nodeType":"YulFunctionCall","src":"13862:50:26"},"nativeSrc":"13862:50:26","nodeType":"YulExpressionStatement","src":"13862:50:26"}]},"name":"abi_decode_struct_MessagingFee_fromMemory","nativeSrc":"13440:478:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13491:9:26","nodeType":"YulTypedName","src":"13491:9:26","type":""},{"name":"end","nativeSrc":"13502:3:26","nodeType":"YulTypedName","src":"13502:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"13510:5:26","nodeType":"YulTypedName","src":"13510:5:26","type":""}],"src":"13440:478:26"},{"body":{"nativeSrc":"14037:612:26","nodeType":"YulBlock","src":"14037:612:26","statements":[{"body":{"nativeSrc":"14084:16:26","nodeType":"YulBlock","src":"14084:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14093:1:26","nodeType":"YulLiteral","src":"14093:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"14096:1:26","nodeType":"YulLiteral","src":"14096:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14086:6:26","nodeType":"YulIdentifier","src":"14086:6:26"},"nativeSrc":"14086:12:26","nodeType":"YulFunctionCall","src":"14086:12:26"},"nativeSrc":"14086:12:26","nodeType":"YulExpressionStatement","src":"14086:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14058:7:26","nodeType":"YulIdentifier","src":"14058:7:26"},{"name":"headStart","nativeSrc":"14067:9:26","nodeType":"YulIdentifier","src":"14067:9:26"}],"functionName":{"name":"sub","nativeSrc":"14054:3:26","nodeType":"YulIdentifier","src":"14054:3:26"},"nativeSrc":"14054:23:26","nodeType":"YulFunctionCall","src":"14054:23:26"},{"kind":"number","nativeSrc":"14079:3:26","nodeType":"YulLiteral","src":"14079:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"14050:3:26","nodeType":"YulIdentifier","src":"14050:3:26"},"nativeSrc":"14050:33:26","nodeType":"YulFunctionCall","src":"14050:33:26"},"nativeSrc":"14047:53:26","nodeType":"YulIf","src":"14047:53:26"},{"nativeSrc":"14109:23:26","nodeType":"YulVariableDeclaration","src":"14109:23:26","value":{"arguments":[{"kind":"number","nativeSrc":"14129:2:26","nodeType":"YulLiteral","src":"14129:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"14123:5:26","nodeType":"YulIdentifier","src":"14123:5:26"},"nativeSrc":"14123:9:26","nodeType":"YulFunctionCall","src":"14123:9:26"},"variables":[{"name":"memPtr","nativeSrc":"14113:6:26","nodeType":"YulTypedName","src":"14113:6:26","type":""}]},{"nativeSrc":"14141:35:26","nodeType":"YulVariableDeclaration","src":"14141:35:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"14163:6:26","nodeType":"YulIdentifier","src":"14163:6:26"},{"kind":"number","nativeSrc":"14171:4:26","nodeType":"YulLiteral","src":"14171:4:26","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"14159:3:26","nodeType":"YulIdentifier","src":"14159:3:26"},"nativeSrc":"14159:17:26","nodeType":"YulFunctionCall","src":"14159:17:26"},"variables":[{"name":"newFreePtr","nativeSrc":"14145:10:26","nodeType":"YulTypedName","src":"14145:10:26","type":""}]},{"nativeSrc":"14185:28:26","nodeType":"YulVariableDeclaration","src":"14185:28:26","value":{"kind":"number","nativeSrc":"14195:18:26","nodeType":"YulLiteral","src":"14195:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"14189:2:26","nodeType":"YulTypedName","src":"14189:2:26","type":""}]},{"body":{"nativeSrc":"14272:22:26","nodeType":"YulBlock","src":"14272:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"14274:16:26","nodeType":"YulIdentifier","src":"14274:16:26"},"nativeSrc":"14274:18:26","nodeType":"YulFunctionCall","src":"14274:18:26"},"nativeSrc":"14274:18:26","nodeType":"YulExpressionStatement","src":"14274:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"14231:10:26","nodeType":"YulIdentifier","src":"14231:10:26"},{"name":"_1","nativeSrc":"14243:2:26","nodeType":"YulIdentifier","src":"14243:2:26"}],"functionName":{"name":"gt","nativeSrc":"14228:2:26","nodeType":"YulIdentifier","src":"14228:2:26"},"nativeSrc":"14228:18:26","nodeType":"YulFunctionCall","src":"14228:18:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"14251:10:26","nodeType":"YulIdentifier","src":"14251:10:26"},{"name":"memPtr","nativeSrc":"14263:6:26","nodeType":"YulIdentifier","src":"14263:6:26"}],"functionName":{"name":"lt","nativeSrc":"14248:2:26","nodeType":"YulIdentifier","src":"14248:2:26"},"nativeSrc":"14248:22:26","nodeType":"YulFunctionCall","src":"14248:22:26"}],"functionName":{"name":"or","nativeSrc":"14225:2:26","nodeType":"YulIdentifier","src":"14225:2:26"},"nativeSrc":"14225:46:26","nodeType":"YulFunctionCall","src":"14225:46:26"},"nativeSrc":"14222:72:26","nodeType":"YulIf","src":"14222:72:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14310:2:26","nodeType":"YulLiteral","src":"14310:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"14314:10:26","nodeType":"YulIdentifier","src":"14314:10:26"}],"functionName":{"name":"mstore","nativeSrc":"14303:6:26","nodeType":"YulIdentifier","src":"14303:6:26"},"nativeSrc":"14303:22:26","nodeType":"YulFunctionCall","src":"14303:22:26"},"nativeSrc":"14303:22:26","nodeType":"YulExpressionStatement","src":"14303:22:26"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"14341:6:26","nodeType":"YulIdentifier","src":"14341:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"14355:9:26","nodeType":"YulIdentifier","src":"14355:9:26"}],"functionName":{"name":"mload","nativeSrc":"14349:5:26","nodeType":"YulIdentifier","src":"14349:5:26"},"nativeSrc":"14349:16:26","nodeType":"YulFunctionCall","src":"14349:16:26"}],"functionName":{"name":"mstore","nativeSrc":"14334:6:26","nodeType":"YulIdentifier","src":"14334:6:26"},"nativeSrc":"14334:32:26","nodeType":"YulFunctionCall","src":"14334:32:26"},"nativeSrc":"14334:32:26","nodeType":"YulExpressionStatement","src":"14334:32:26"},{"nativeSrc":"14375:38:26","nodeType":"YulVariableDeclaration","src":"14375:38:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14398:9:26","nodeType":"YulIdentifier","src":"14398:9:26"},{"kind":"number","nativeSrc":"14409:2:26","nodeType":"YulLiteral","src":"14409:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14394:3:26","nodeType":"YulIdentifier","src":"14394:3:26"},"nativeSrc":"14394:18:26","nodeType":"YulFunctionCall","src":"14394:18:26"}],"functionName":{"name":"mload","nativeSrc":"14388:5:26","nodeType":"YulIdentifier","src":"14388:5:26"},"nativeSrc":"14388:25:26","nodeType":"YulFunctionCall","src":"14388:25:26"},"variables":[{"name":"value","nativeSrc":"14379:5:26","nodeType":"YulTypedName","src":"14379:5:26","type":""}]},{"body":{"nativeSrc":"14459:16:26","nodeType":"YulBlock","src":"14459:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14468:1:26","nodeType":"YulLiteral","src":"14468:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"14471:1:26","nodeType":"YulLiteral","src":"14471:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14461:6:26","nodeType":"YulIdentifier","src":"14461:6:26"},"nativeSrc":"14461:12:26","nodeType":"YulFunctionCall","src":"14461:12:26"},"nativeSrc":"14461:12:26","nodeType":"YulExpressionStatement","src":"14461:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14435:5:26","nodeType":"YulIdentifier","src":"14435:5:26"},{"arguments":[{"name":"value","nativeSrc":"14446:5:26","nodeType":"YulIdentifier","src":"14446:5:26"},{"name":"_1","nativeSrc":"14453:2:26","nodeType":"YulIdentifier","src":"14453:2:26"}],"functionName":{"name":"and","nativeSrc":"14442:3:26","nodeType":"YulIdentifier","src":"14442:3:26"},"nativeSrc":"14442:14:26","nodeType":"YulFunctionCall","src":"14442:14:26"}],"functionName":{"name":"eq","nativeSrc":"14432:2:26","nodeType":"YulIdentifier","src":"14432:2:26"},"nativeSrc":"14432:25:26","nodeType":"YulFunctionCall","src":"14432:25:26"}],"functionName":{"name":"iszero","nativeSrc":"14425:6:26","nodeType":"YulIdentifier","src":"14425:6:26"},"nativeSrc":"14425:33:26","nodeType":"YulFunctionCall","src":"14425:33:26"},"nativeSrc":"14422:53:26","nodeType":"YulIf","src":"14422:53:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14495:6:26","nodeType":"YulIdentifier","src":"14495:6:26"},{"kind":"number","nativeSrc":"14503:2:26","nodeType":"YulLiteral","src":"14503:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14491:3:26","nodeType":"YulIdentifier","src":"14491:3:26"},"nativeSrc":"14491:15:26","nodeType":"YulFunctionCall","src":"14491:15:26"},{"name":"value","nativeSrc":"14508:5:26","nodeType":"YulIdentifier","src":"14508:5:26"}],"functionName":{"name":"mstore","nativeSrc":"14484:6:26","nodeType":"YulIdentifier","src":"14484:6:26"},"nativeSrc":"14484:30:26","nodeType":"YulFunctionCall","src":"14484:30:26"},"nativeSrc":"14484:30:26","nodeType":"YulExpressionStatement","src":"14484:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14534:6:26","nodeType":"YulIdentifier","src":"14534:6:26"},{"kind":"number","nativeSrc":"14542:2:26","nodeType":"YulLiteral","src":"14542:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14530:3:26","nodeType":"YulIdentifier","src":"14530:3:26"},"nativeSrc":"14530:15:26","nodeType":"YulFunctionCall","src":"14530:15:26"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14593:9:26","nodeType":"YulIdentifier","src":"14593:9:26"},{"kind":"number","nativeSrc":"14604:2:26","nodeType":"YulLiteral","src":"14604:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14589:3:26","nodeType":"YulIdentifier","src":"14589:3:26"},"nativeSrc":"14589:18:26","nodeType":"YulFunctionCall","src":"14589:18:26"},{"name":"dataEnd","nativeSrc":"14609:7:26","nodeType":"YulIdentifier","src":"14609:7:26"}],"functionName":{"name":"abi_decode_struct_MessagingFee_fromMemory","nativeSrc":"14547:41:26","nodeType":"YulIdentifier","src":"14547:41:26"},"nativeSrc":"14547:70:26","nodeType":"YulFunctionCall","src":"14547:70:26"}],"functionName":{"name":"mstore","nativeSrc":"14523:6:26","nodeType":"YulIdentifier","src":"14523:6:26"},"nativeSrc":"14523:95:26","nodeType":"YulFunctionCall","src":"14523:95:26"},"nativeSrc":"14523:95:26","nodeType":"YulExpressionStatement","src":"14523:95:26"},{"nativeSrc":"14627:16:26","nodeType":"YulAssignment","src":"14627:16:26","value":{"name":"memPtr","nativeSrc":"14637:6:26","nodeType":"YulIdentifier","src":"14637:6:26"},"variableNames":[{"name":"value0","nativeSrc":"14627:6:26","nodeType":"YulIdentifier","src":"14627:6:26"}]}]},"name":"abi_decode_tuple_t_struct$_MessagingReceipt_$626_memory_ptr_fromMemory","nativeSrc":"13923:726:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14003:9:26","nodeType":"YulTypedName","src":"14003:9:26","type":""},{"name":"dataEnd","nativeSrc":"14014:7:26","nodeType":"YulTypedName","src":"14014:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14026:6:26","nodeType":"YulTypedName","src":"14026:6:26","type":""}],"src":"13923:726:26"},{"body":{"nativeSrc":"14764:148:26","nodeType":"YulBlock","src":"14764:148:26","statements":[{"body":{"nativeSrc":"14810:16:26","nodeType":"YulBlock","src":"14810:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14819:1:26","nodeType":"YulLiteral","src":"14819:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"14822:1:26","nodeType":"YulLiteral","src":"14822:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14812:6:26","nodeType":"YulIdentifier","src":"14812:6:26"},"nativeSrc":"14812:12:26","nodeType":"YulFunctionCall","src":"14812:12:26"},"nativeSrc":"14812:12:26","nodeType":"YulExpressionStatement","src":"14812:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14785:7:26","nodeType":"YulIdentifier","src":"14785:7:26"},{"name":"headStart","nativeSrc":"14794:9:26","nodeType":"YulIdentifier","src":"14794:9:26"}],"functionName":{"name":"sub","nativeSrc":"14781:3:26","nodeType":"YulIdentifier","src":"14781:3:26"},"nativeSrc":"14781:23:26","nodeType":"YulFunctionCall","src":"14781:23:26"},{"kind":"number","nativeSrc":"14806:2:26","nodeType":"YulLiteral","src":"14806:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"14777:3:26","nodeType":"YulIdentifier","src":"14777:3:26"},"nativeSrc":"14777:32:26","nodeType":"YulFunctionCall","src":"14777:32:26"},"nativeSrc":"14774:52:26","nodeType":"YulIf","src":"14774:52:26"},{"nativeSrc":"14835:71:26","nodeType":"YulAssignment","src":"14835:71:26","value":{"arguments":[{"name":"headStart","nativeSrc":"14887:9:26","nodeType":"YulIdentifier","src":"14887:9:26"},{"name":"dataEnd","nativeSrc":"14898:7:26","nodeType":"YulIdentifier","src":"14898:7:26"}],"functionName":{"name":"abi_decode_struct_MessagingFee_fromMemory","nativeSrc":"14845:41:26","nodeType":"YulIdentifier","src":"14845:41:26"},"nativeSrc":"14845:61:26","nodeType":"YulFunctionCall","src":"14845:61:26"},"variableNames":[{"name":"value0","nativeSrc":"14835:6:26","nodeType":"YulIdentifier","src":"14835:6:26"}]}]},"name":"abi_decode_tuple_t_struct$_MessagingFee_$631_memory_ptr_fromMemory","nativeSrc":"14654:258:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14730:9:26","nodeType":"YulTypedName","src":"14730:9:26","type":""},{"name":"dataEnd","nativeSrc":"14741:7:26","nodeType":"YulTypedName","src":"14741:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14753:6:26","nodeType":"YulTypedName","src":"14753:6:26","type":""}],"src":"14654:258:26"},{"body":{"nativeSrc":"15018:76:26","nodeType":"YulBlock","src":"15018:76:26","statements":[{"nativeSrc":"15028:26:26","nodeType":"YulAssignment","src":"15028:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"15040:9:26","nodeType":"YulIdentifier","src":"15040:9:26"},{"kind":"number","nativeSrc":"15051:2:26","nodeType":"YulLiteral","src":"15051:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15036:3:26","nodeType":"YulIdentifier","src":"15036:3:26"},"nativeSrc":"15036:18:26","nodeType":"YulFunctionCall","src":"15036:18:26"},"variableNames":[{"name":"tail","nativeSrc":"15028:4:26","nodeType":"YulIdentifier","src":"15028:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15070:9:26","nodeType":"YulIdentifier","src":"15070:9:26"},{"name":"value0","nativeSrc":"15081:6:26","nodeType":"YulIdentifier","src":"15081:6:26"}],"functionName":{"name":"mstore","nativeSrc":"15063:6:26","nodeType":"YulIdentifier","src":"15063:6:26"},"nativeSrc":"15063:25:26","nodeType":"YulFunctionCall","src":"15063:25:26"},"nativeSrc":"15063:25:26","nodeType":"YulExpressionStatement","src":"15063:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14917:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14987:9:26","nodeType":"YulTypedName","src":"14987:9:26","type":""},{"name":"value0","nativeSrc":"14998:6:26","nodeType":"YulTypedName","src":"14998:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15009:4:26","nodeType":"YulTypedName","src":"15009:4:26","type":""}],"src":"14917:177:26"},{"body":{"nativeSrc":"15180:170:26","nodeType":"YulBlock","src":"15180:170:26","statements":[{"body":{"nativeSrc":"15226:16:26","nodeType":"YulBlock","src":"15226:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15235:1:26","nodeType":"YulLiteral","src":"15235:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"15238:1:26","nodeType":"YulLiteral","src":"15238:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15228:6:26","nodeType":"YulIdentifier","src":"15228:6:26"},"nativeSrc":"15228:12:26","nodeType":"YulFunctionCall","src":"15228:12:26"},"nativeSrc":"15228:12:26","nodeType":"YulExpressionStatement","src":"15228:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15201:7:26","nodeType":"YulIdentifier","src":"15201:7:26"},{"name":"headStart","nativeSrc":"15210:9:26","nodeType":"YulIdentifier","src":"15210:9:26"}],"functionName":{"name":"sub","nativeSrc":"15197:3:26","nodeType":"YulIdentifier","src":"15197:3:26"},"nativeSrc":"15197:23:26","nodeType":"YulFunctionCall","src":"15197:23:26"},{"kind":"number","nativeSrc":"15222:2:26","nodeType":"YulLiteral","src":"15222:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15193:3:26","nodeType":"YulIdentifier","src":"15193:3:26"},"nativeSrc":"15193:32:26","nodeType":"YulFunctionCall","src":"15193:32:26"},"nativeSrc":"15190:52:26","nodeType":"YulIf","src":"15190:52:26"},{"nativeSrc":"15251:29:26","nodeType":"YulVariableDeclaration","src":"15251:29:26","value":{"arguments":[{"name":"headStart","nativeSrc":"15270:9:26","nodeType":"YulIdentifier","src":"15270:9:26"}],"functionName":{"name":"mload","nativeSrc":"15264:5:26","nodeType":"YulIdentifier","src":"15264:5:26"},"nativeSrc":"15264:16:26","nodeType":"YulFunctionCall","src":"15264:16:26"},"variables":[{"name":"value","nativeSrc":"15255:5:26","nodeType":"YulTypedName","src":"15255:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15314:5:26","nodeType":"YulIdentifier","src":"15314:5:26"}],"functionName":{"name":"validator_revert_address","nativeSrc":"15289:24:26","nodeType":"YulIdentifier","src":"15289:24:26"},"nativeSrc":"15289:31:26","nodeType":"YulFunctionCall","src":"15289:31:26"},"nativeSrc":"15289:31:26","nodeType":"YulExpressionStatement","src":"15289:31:26"},{"nativeSrc":"15329:15:26","nodeType":"YulAssignment","src":"15329:15:26","value":{"name":"value","nativeSrc":"15339:5:26","nodeType":"YulIdentifier","src":"15339:5:26"},"variableNames":[{"name":"value0","nativeSrc":"15329:6:26","nodeType":"YulIdentifier","src":"15329:6:26"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"15099:251:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15146:9:26","nodeType":"YulTypedName","src":"15146:9:26","type":""},{"name":"dataEnd","nativeSrc":"15157:7:26","nodeType":"YulTypedName","src":"15157:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15169:6:26","nodeType":"YulTypedName","src":"15169:6:26","type":""}],"src":"15099:251:26"},{"body":{"nativeSrc":"15512:218:26","nodeType":"YulBlock","src":"15512:218:26","statements":[{"nativeSrc":"15522:26:26","nodeType":"YulAssignment","src":"15522:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"15534:9:26","nodeType":"YulIdentifier","src":"15534:9:26"},{"kind":"number","nativeSrc":"15545:2:26","nodeType":"YulLiteral","src":"15545:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15530:3:26","nodeType":"YulIdentifier","src":"15530:3:26"},"nativeSrc":"15530:18:26","nodeType":"YulFunctionCall","src":"15530:18:26"},"variableNames":[{"name":"tail","nativeSrc":"15522:4:26","nodeType":"YulIdentifier","src":"15522:4:26"}]},{"nativeSrc":"15557:29:26","nodeType":"YulVariableDeclaration","src":"15557:29:26","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15575:3:26","nodeType":"YulLiteral","src":"15575:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"15580:1:26","nodeType":"YulLiteral","src":"15580:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"15571:3:26","nodeType":"YulIdentifier","src":"15571:3:26"},"nativeSrc":"15571:11:26","nodeType":"YulFunctionCall","src":"15571:11:26"},{"kind":"number","nativeSrc":"15584:1:26","nodeType":"YulLiteral","src":"15584:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"15567:3:26","nodeType":"YulIdentifier","src":"15567:3:26"},"nativeSrc":"15567:19:26","nodeType":"YulFunctionCall","src":"15567:19:26"},"variables":[{"name":"_1","nativeSrc":"15561:2:26","nodeType":"YulTypedName","src":"15561:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15602:9:26","nodeType":"YulIdentifier","src":"15602:9:26"},{"arguments":[{"name":"value0","nativeSrc":"15617:6:26","nodeType":"YulIdentifier","src":"15617:6:26"},{"name":"_1","nativeSrc":"15625:2:26","nodeType":"YulIdentifier","src":"15625:2:26"}],"functionName":{"name":"and","nativeSrc":"15613:3:26","nodeType":"YulIdentifier","src":"15613:3:26"},"nativeSrc":"15613:15:26","nodeType":"YulFunctionCall","src":"15613:15:26"}],"functionName":{"name":"mstore","nativeSrc":"15595:6:26","nodeType":"YulIdentifier","src":"15595:6:26"},"nativeSrc":"15595:34:26","nodeType":"YulFunctionCall","src":"15595:34:26"},"nativeSrc":"15595:34:26","nodeType":"YulExpressionStatement","src":"15595:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15649:9:26","nodeType":"YulIdentifier","src":"15649:9:26"},{"kind":"number","nativeSrc":"15660:2:26","nodeType":"YulLiteral","src":"15660:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15645:3:26","nodeType":"YulIdentifier","src":"15645:3:26"},"nativeSrc":"15645:18:26","nodeType":"YulFunctionCall","src":"15645:18:26"},{"arguments":[{"name":"value1","nativeSrc":"15669:6:26","nodeType":"YulIdentifier","src":"15669:6:26"},{"name":"_1","nativeSrc":"15677:2:26","nodeType":"YulIdentifier","src":"15677:2:26"}],"functionName":{"name":"and","nativeSrc":"15665:3:26","nodeType":"YulIdentifier","src":"15665:3:26"},"nativeSrc":"15665:15:26","nodeType":"YulFunctionCall","src":"15665:15:26"}],"functionName":{"name":"mstore","nativeSrc":"15638:6:26","nodeType":"YulIdentifier","src":"15638:6:26"},"nativeSrc":"15638:43:26","nodeType":"YulFunctionCall","src":"15638:43:26"},"nativeSrc":"15638:43:26","nodeType":"YulExpressionStatement","src":"15638:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15701:9:26","nodeType":"YulIdentifier","src":"15701:9:26"},{"kind":"number","nativeSrc":"15712:2:26","nodeType":"YulLiteral","src":"15712:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15697:3:26","nodeType":"YulIdentifier","src":"15697:3:26"},"nativeSrc":"15697:18:26","nodeType":"YulFunctionCall","src":"15697:18:26"},{"name":"value2","nativeSrc":"15717:6:26","nodeType":"YulIdentifier","src":"15717:6:26"}],"functionName":{"name":"mstore","nativeSrc":"15690:6:26","nodeType":"YulIdentifier","src":"15690:6:26"},"nativeSrc":"15690:34:26","nodeType":"YulFunctionCall","src":"15690:34:26"},"nativeSrc":"15690:34:26","nodeType":"YulExpressionStatement","src":"15690:34:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"15355:375:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15465:9:26","nodeType":"YulTypedName","src":"15465:9:26","type":""},{"name":"value2","nativeSrc":"15476:6:26","nodeType":"YulTypedName","src":"15476:6:26","type":""},{"name":"value1","nativeSrc":"15484:6:26","nodeType":"YulTypedName","src":"15484:6:26","type":""},{"name":"value0","nativeSrc":"15492:6:26","nodeType":"YulTypedName","src":"15492:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15503:4:26","nodeType":"YulTypedName","src":"15503:4:26","type":""}],"src":"15355:375:26"},{"body":{"nativeSrc":"15813:167:26","nodeType":"YulBlock","src":"15813:167:26","statements":[{"body":{"nativeSrc":"15859:16:26","nodeType":"YulBlock","src":"15859:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15868:1:26","nodeType":"YulLiteral","src":"15868:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"15871:1:26","nodeType":"YulLiteral","src":"15871:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15861:6:26","nodeType":"YulIdentifier","src":"15861:6:26"},"nativeSrc":"15861:12:26","nodeType":"YulFunctionCall","src":"15861:12:26"},"nativeSrc":"15861:12:26","nodeType":"YulExpressionStatement","src":"15861:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15834:7:26","nodeType":"YulIdentifier","src":"15834:7:26"},{"name":"headStart","nativeSrc":"15843:9:26","nodeType":"YulIdentifier","src":"15843:9:26"}],"functionName":{"name":"sub","nativeSrc":"15830:3:26","nodeType":"YulIdentifier","src":"15830:3:26"},"nativeSrc":"15830:23:26","nodeType":"YulFunctionCall","src":"15830:23:26"},{"kind":"number","nativeSrc":"15855:2:26","nodeType":"YulLiteral","src":"15855:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15826:3:26","nodeType":"YulIdentifier","src":"15826:3:26"},"nativeSrc":"15826:32:26","nodeType":"YulFunctionCall","src":"15826:32:26"},"nativeSrc":"15823:52:26","nodeType":"YulIf","src":"15823:52:26"},{"nativeSrc":"15884:29:26","nodeType":"YulVariableDeclaration","src":"15884:29:26","value":{"arguments":[{"name":"headStart","nativeSrc":"15903:9:26","nodeType":"YulIdentifier","src":"15903:9:26"}],"functionName":{"name":"mload","nativeSrc":"15897:5:26","nodeType":"YulIdentifier","src":"15897:5:26"},"nativeSrc":"15897:16:26","nodeType":"YulFunctionCall","src":"15897:16:26"},"variables":[{"name":"value","nativeSrc":"15888:5:26","nodeType":"YulTypedName","src":"15888:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15944:5:26","nodeType":"YulIdentifier","src":"15944:5:26"}],"functionName":{"name":"validator_revert_bool","nativeSrc":"15922:21:26","nodeType":"YulIdentifier","src":"15922:21:26"},"nativeSrc":"15922:28:26","nodeType":"YulFunctionCall","src":"15922:28:26"},"nativeSrc":"15922:28:26","nodeType":"YulExpressionStatement","src":"15922:28:26"},{"nativeSrc":"15959:15:26","nodeType":"YulAssignment","src":"15959:15:26","value":{"name":"value","nativeSrc":"15969:5:26","nodeType":"YulIdentifier","src":"15969:5:26"},"variableNames":[{"name":"value0","nativeSrc":"15959:6:26","nodeType":"YulIdentifier","src":"15959:6:26"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"15735:245:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15779:9:26","nodeType":"YulTypedName","src":"15779:9:26","type":""},{"name":"dataEnd","nativeSrc":"15790:7:26","nodeType":"YulTypedName","src":"15790:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15802:6:26","nodeType":"YulTypedName","src":"15802:6:26","type":""}],"src":"15735:245:26"},{"body":{"nativeSrc":"16122:150:26","nodeType":"YulBlock","src":"16122:150:26","statements":[{"nativeSrc":"16132:27:26","nodeType":"YulVariableDeclaration","src":"16132:27:26","value":{"arguments":[{"name":"value0","nativeSrc":"16152:6:26","nodeType":"YulIdentifier","src":"16152:6:26"}],"functionName":{"name":"mload","nativeSrc":"16146:5:26","nodeType":"YulIdentifier","src":"16146:5:26"},"nativeSrc":"16146:13:26","nodeType":"YulFunctionCall","src":"16146:13:26"},"variables":[{"name":"length","nativeSrc":"16136:6:26","nodeType":"YulTypedName","src":"16136:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"16207:6:26","nodeType":"YulIdentifier","src":"16207:6:26"},{"kind":"number","nativeSrc":"16215:4:26","nodeType":"YulLiteral","src":"16215:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16203:3:26","nodeType":"YulIdentifier","src":"16203:3:26"},"nativeSrc":"16203:17:26","nodeType":"YulFunctionCall","src":"16203:17:26"},{"name":"pos","nativeSrc":"16222:3:26","nodeType":"YulIdentifier","src":"16222:3:26"},{"name":"length","nativeSrc":"16227:6:26","nodeType":"YulIdentifier","src":"16227:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"16168:34:26","nodeType":"YulIdentifier","src":"16168:34:26"},"nativeSrc":"16168:66:26","nodeType":"YulFunctionCall","src":"16168:66:26"},"nativeSrc":"16168:66:26","nodeType":"YulExpressionStatement","src":"16168:66:26"},{"nativeSrc":"16243:23:26","nodeType":"YulAssignment","src":"16243:23:26","value":{"arguments":[{"name":"pos","nativeSrc":"16254:3:26","nodeType":"YulIdentifier","src":"16254:3:26"},{"name":"length","nativeSrc":"16259:6:26","nodeType":"YulIdentifier","src":"16259:6:26"}],"functionName":{"name":"add","nativeSrc":"16250:3:26","nodeType":"YulIdentifier","src":"16250:3:26"},"nativeSrc":"16250:16:26","nodeType":"YulFunctionCall","src":"16250:16:26"},"variableNames":[{"name":"end","nativeSrc":"16243:3:26","nodeType":"YulIdentifier","src":"16243:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"15985:287:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16098:3:26","nodeType":"YulTypedName","src":"16098:3:26","type":""},{"name":"value0","nativeSrc":"16103:6:26","nodeType":"YulTypedName","src":"16103:6:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16114:3:26","nodeType":"YulTypedName","src":"16114:3:26","type":""}],"src":"15985:287:26"}]},"contents":"{\n    { }\n    function abi_decode_struct_Origin_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 96) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Origin_$638_calldata_ptrt_bytes32t_bytes_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_struct_Origin_calldata(headStart, dataEnd)\n        value1 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let value := calldataload(add(headStart, 160))\n        validator_revert_address(value)\n        value4 := value\n        let offset_1 := calldataload(add(headStart, 192))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_uint64_t_uint64__to_t_uint64_t_uint64__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_ILayerZeroEndpointV2_$800__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_struct$_Origin_$638_calldata_ptrt_bytes_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_struct_Origin_calldata(headStart, dataEnd)\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let value := calldataload(add(headStart, 128))\n        validator_revert_address(value)\n        value3 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_uint32t_string_memory_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_struct_MessagingFee(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_tuple_t_struct$_MessagingReceipt_$626_memory_ptr__to_t_struct$_MessagingReceipt_$626_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffff))\n        let memberValue0 := mload(add(value0, 0x40))\n        abi_encode_struct_MessagingFee(memberValue0, add(headStart, 0x40))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint32t_string_memory_ptrt_bytes_memory_ptrt_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint32(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset_1)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        value2 := abi_decode_available_length_string(add(_2, 32), calldataload(_2), dataEnd)\n        let value := calldataload(add(headStart, 96))\n        validator_revert_bool(value)\n        value3 := value\n    }\n    function abi_encode_tuple_t_struct$_MessagingFee_$631_memory_ptr__to_t_struct$_MessagingFee_$631_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_struct_MessagingFee(value0, headStart)\n    }\n    function abi_decode_tuple_t_struct$_Origin_$638_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_struct_Origin_calldata(headStart, dataEnd)\n    }\n    function abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_struct$_MessagingParams_$618_memory_ptr_t_address__to_t_struct$_MessagingParams_$618_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), and(mload(value0), 0xffffffff))\n        mstore(add(headStart, 96), mload(add(value0, 0x20)))\n        let memberValue0 := mload(add(value0, 64))\n        mstore(add(headStart, 128), 0xa0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 224))\n        let memberValue0_1 := mload(add(value0, 96))\n        mstore(add(headStart, 0xa0), add(sub(tail_1, headStart), not(63)))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        mstore(add(headStart, 192), iszero(iszero(mload(add(value0, 128)))))\n        tail := tail_2\n        mstore(add(headStart, 0x20), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_struct_MessagingFee_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        let memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n        value := memPtr\n        mstore(memPtr, mload(headStart))\n        mstore(add(memPtr, 32), mload(add(headStart, 32)))\n    }\n    function abi_decode_tuple_t_struct$_MessagingReceipt_$626_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        let _1 := 0xffffffffffffffff\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, mload(headStart))\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, _1))) { revert(0, 0) }\n        mstore(add(memPtr, 32), value)\n        mstore(add(memPtr, 64), abi_decode_struct_MessagingFee_fromMemory(add(headStart, 64), dataEnd))\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_struct$_MessagingFee_$631_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_struct_MessagingFee_fromMemory(headStart, dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"60":[{"length":32,"start":347},{"length":32,"start":843},{"length":32,"start":1265},{"length":32,"start":2037},{"length":32,"start":2275},{"length":32,"start":2522},{"length":32,"start":2705}]},"linkReferences":{},"object":"6080604052600436106100e85760003560e01c806382413eac1161008a578063e0539e5811610059578063e0539e58146102bc578063f2fde38b146102dc578063f77e5dd3146102fc578063ff7bd03d1461032957600080fd5b806382413eac146102045780638da5cb5b14610243578063bb0b6a5314610261578063ca5eb5e11461029c57600080fd5b80635e280f11116100c65780635e280f1114610149578063715018a61461019557806373d4a13a146101aa5780637d25a05e146101cc57600080fd5b806313137d65146100ed57806317442b70146101025780633400288b14610129575b600080fd5b6101006100fb366004610d5a565b610349565b005b34801561010e57600080fd5b50604080516001815260026020820152015b60405180910390f35b34801561013557600080fd5b50610100610144366004610e12565b610409565b34801561015557600080fd5b5061017d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610120565b3480156101a157600080fd5b5061010061041f565b3480156101b657600080fd5b506101bf610433565b6040516101209190610e8c565b3480156101d857600080fd5b506101ec6101e7366004610e12565b6104c1565b6040516001600160401b039091168152602001610120565b34801561021057600080fd5b5061023361021f366004610e9f565b6001600160a01b0381163014949350505050565b6040519015158152602001610120565b34801561024f57600080fd5b506000546001600160a01b031661017d565b34801561026d57600080fd5b5061028e61027c366004610f05565b60016020526000908152604090205481565b604051908152602001610120565b3480156102a857600080fd5b506101006102b7366004610f20565b6104ca565b6102cf6102ca366004610fe8565b610550565b604051610120919061105e565b3480156102e857600080fd5b506101006102f7366004610f20565b6105d9565b34801561030857600080fd5b5061031c6103173660046110ae565b610617565b604051610120919061113d565b34801561033557600080fd5b50610233610344366004611154565b61065b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314610399576040516391ac5e4f60e01b81523360048201526024015b60405180910390fd5b602087018035906103b3906103ae908a610f05565b610691565b146103f1576103c56020880188610f05565b60405163309afaf360e21b815263ffffffff909116600482015260208801356024820152604401610390565b610400878787878787876106cd565b50505050505050565b6104116106f0565b61041b828261071d565b5050565b6104276106f0565b6104316000610772565b565b6002805461044090611170565b80601f016020809104026020016040519081016040528092919081815260200182805461046c90611170565b80156104b95780601f1061048e576101008083540402835291602001916104b9565b820191906000526020600020905b81548152906001019060200180831161049c57829003601f168201915b505050505081565b60005b92915050565b6104d26106f0565b60405163ca5eb5e160e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063ca5eb5e190602401600060405180830381600087803b15801561053557600080fd5b505af1158015610549573d6000803e3d6000fd5b5050505050565b610558610c9e565b60008460405160200161056b9190610e8c565b60408051601f198184030181526020601f870181900481028401810190925285835292506105cf9188918491908890889081908401838280828437600092018290525060408051808201909152348152602081019190915292503391506107c29050565b9695505050505050565b6105e16106f0565b6001600160a01b03811661060b57604051631e4fbdf760e01b815260006004820152602401610390565b61061481610772565b50565b604080518082019091526000808252602082015260008460405160200161063e9190610e8c565b60405160208183030381529060405290506105cf868286866108cd565b60006020820180359060019083906106739086610f05565b63ffffffff1681526020810191909152604001600020541492915050565b63ffffffff8116600090815260016020526040812054806104c45760405163f6ff4fb760e01b815263ffffffff84166004820152602401610390565b6106d9848601866111a4565b6002906106e69082611230565b5050505050505050565b6000546001600160a01b031633146104315760405163118cdaa760e01b8152336004820152602401610390565b63ffffffff8216600081815260016020908152604091829020849055815192835282018390527f238399d427b947898edb290f5ff0f9109849b1c3ba196a42e35f00c50a54b98b910160405180910390a15050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107ca610c9e565b60006107d984600001516109ae565b6020850151909150156107f3576107f384602001516109d6565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632637a450826040518060a001604052808b63ffffffff1681526020016108438c610691565b81526020018a815260200189815260200160008960200151111515815250866040518463ffffffff1660e01b815260040161087f9291906112ef565b60806040518083038185885af115801561089d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108c291906113b6565b979650505050505050565b60408051808201909152600080825260208201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ddc28c586040518060a001604052808863ffffffff16815260200161093089610691565b8152602001878152602001868152602001851515815250306040518363ffffffff1660e01b81526004016109659291906112ef565b6040805180830381865afa158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190611427565b95945050505050565b60008134146109d2576040516304fb820960e51b8152346004820152602401610390565b5090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e4fe1d946040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190611443565b90506001600160a01b038116610a83576040516329b99a9560e11b815260040160405180910390fd5b6040805133602482018190527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03818116604485015260648085018890528551808603909101815260849094019094526020830180516001600160e01b03166323b872dd60e01b17905261041b938516928690610b08908590610b0e565b50505050565b6000610b236001600160a01b03841683610b76565b90508051600014158015610b48575080806020019051810190610b469190611460565b155b15610b7157604051635274afe760e01b81526001600160a01b0384166004820152602401610390565b505050565b6060610b8483836000610b8b565b9392505050565b606081471015610bb05760405163cd78605960e01b8152306004820152602401610390565b600080856001600160a01b03168486604051610bcc919061147d565b60006040518083038185875af1925050503d8060008114610c09576040519150601f19603f3d011682016040523d82523d6000602084013e610c0e565b606091505b50915091506105cf868383606082610c2e57610c2982610c75565b610b84565b8151158015610c4557506001600160a01b0384163b155b15610c6e57604051639996b31560e01b81526001600160a01b0385166004820152602401610390565b5080610b84565b805115610c855780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60405180606001604052806000801916815260200160006001600160401b03168152602001610ce0604051806040016040528060008152602001600081525090565b905290565b600060608284031215610cf757600080fd5b50919050565b60008083601f840112610d0f57600080fd5b5081356001600160401b03811115610d2657600080fd5b602083019150836020828501011115610d3e57600080fd5b9250929050565b6001600160a01b038116811461061457600080fd5b600080600080600080600060e0888a031215610d7557600080fd5b610d7f8989610ce5565b96506060880135955060808801356001600160401b0380821115610da257600080fd5b610dae8b838c01610cfd565b909750955060a08a01359150610dc382610d45565b90935060c08901359080821115610dd957600080fd5b50610de68a828b01610cfd565b989b979a50959850939692959293505050565b803563ffffffff81168114610e0d57600080fd5b919050565b60008060408385031215610e2557600080fd5b610e2e83610df9565b946020939093013593505050565b60005b83811015610e57578181015183820152602001610e3f565b50506000910152565b60008151808452610e78816020860160208601610e3c565b601f01601f19169290920160200192915050565b602081526000610b846020830184610e60565b60008060008060a08587031215610eb557600080fd5b610ebf8686610ce5565b935060608501356001600160401b03811115610eda57600080fd5b610ee687828801610cfd565b9094509250506080850135610efa81610d45565b939692955090935050565b600060208284031215610f1757600080fd5b610b8482610df9565b600060208284031215610f3257600080fd5b8135610b8481610d45565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b0380841115610f6d57610f6d610f3d565b604051601f8501601f19908116603f01168101908282118183101715610f9557610f95610f3d565b81604052809350858152868686011115610fae57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112610fd957600080fd5b610b8483833560208501610f53565b60008060008060608587031215610ffe57600080fd5b61100785610df9565b935060208501356001600160401b038082111561102357600080fd5b61102f88838901610fc8565b9450604087013591508082111561104557600080fd5b5061105287828801610cfd565b95989497509550505050565b6000608082019050825182526001600160401b0360208401511660208301526040830151611099604084018280518252602090810151910152565b5092915050565b801515811461061457600080fd5b600080600080608085870312156110c457600080fd5b6110cd85610df9565b935060208501356001600160401b03808211156110e957600080fd5b6110f588838901610fc8565b9450604087013591508082111561110b57600080fd5b508501601f8101871361111d57600080fd5b61112c87823560208401610f53565b9250506060850135610efa816110a0565b8151815260208083015190820152604081016104c4565b60006060828403121561116657600080fd5b610b848383610ce5565b600181811c9082168061118457607f821691505b602082108103610cf757634e487b7160e01b600052602260045260246000fd5b6000602082840312156111b657600080fd5b81356001600160401b038111156111cc57600080fd5b6111d884828501610fc8565b949350505050565b601f821115610b71576000816000526020600020601f850160051c810160208610156112095750805b601f850160051c820191505b8181101561122857828155600101611215565b505050505050565b81516001600160401b0381111561124957611249610f3d565b61125d816112578454611170565b846111e0565b602080601f831160018114611292576000841561127a5750858301515b600019600386901b1c1916600185901b178555611228565b600085815260208120601f198616915b828110156112c1578886015182559484019460019091019084016112a2565b50858210156112df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815263ffffffff8351166040820152602083015160608201526000604084015160a0608084015261132560e0840182610e60565b90506060850151603f198483030160a08501526113428282610e60565b60809690960151151560c08501525050506001600160a01b039190911660209091015290565b60006040828403121561137a57600080fd5b604051604081018181106001600160401b038211171561139c5761139c610f3d565b604052825181526020928301519281019290925250919050565b6000608082840312156113c857600080fd5b604051606081016001600160401b0382821081831117156113eb576113eb610f3d565b816040528451835260208501519150808216821461140857600080fd5b50602082015261141b8460408501611368565b60408201529392505050565b60006040828403121561143957600080fd5b610b848383611368565b60006020828403121561145557600080fd5b8151610b8481610d45565b60006020828403121561147257600080fd5b8151610b84816110a0565b6000825161148f818460208701610e3c565b919091019291505056fea264697066735822122085f2d5152ac200de0f9c6ac1cf3e36f380e49325f197d25e00d4e1421834b20564736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82413EAC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE0539E58 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xE0539E58 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xF77E5DD3 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xFF7BD03D EQ PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x82413EAC EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xBB0B6A53 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xCA5EB5E1 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5E280F11 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x5E280F11 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x7D25A05E EQ PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13137D65 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x17442B70 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x3400288B EQ PUSH2 0x129 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP3 ADD MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x120 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x41F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x120 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ADDRESS EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x120 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x120 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x105E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x10AE JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x113D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x344 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH4 0x91AC5E4F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP8 ADD DUP1 CALLDATALOAD SWAP1 PUSH2 0x3B3 SWAP1 PUSH2 0x3AE SWAP1 DUP11 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST EQ PUSH2 0x3F1 JUMPI PUSH2 0x3C5 PUSH1 0x20 DUP9 ADD DUP9 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x309AFAF3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x390 JUMP JUMPDEST PUSH2 0x400 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x6CD JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x411 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x41B DUP3 DUP3 PUSH2 0x71D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x427 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x431 PUSH1 0x0 PUSH2 0x772 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x440 SWAP1 PUSH2 0x1170 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46C SWAP1 PUSH2 0x1170 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4D2 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xCA5EB5E1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xCA5EB5E1 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x549 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x558 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x20 PUSH1 0x1F DUP8 ADD DUP2 SWAP1 DIV DUP2 MUL DUP5 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP6 DUP4 MSTORE SWAP3 POP PUSH2 0x5CF SWAP2 DUP9 SWAP2 DUP5 SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 POP CALLER SWAP2 POP PUSH2 0x7C2 SWAP1 POP JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST PUSH2 0x614 DUP2 PUSH2 0x772 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x63E SWAP2 SWAP1 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x5CF DUP7 DUP3 DUP7 DUP7 PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 SWAP1 DUP4 SWAP1 PUSH2 0x673 SWAP1 DUP7 PUSH2 0xF05 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF6FF4FB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST PUSH2 0x6D9 DUP5 DUP7 ADD DUP7 PUSH2 0x11A4 JUMP JUMPDEST PUSH1 0x2 SWAP1 PUSH2 0x6E6 SWAP1 DUP3 PUSH2 0x1230 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x238399D427B947898EDB290F5FF0F9109849B1C3BA196A42E35F00C50A54B98B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7CA PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x7F3 JUMPI PUSH2 0x7F3 DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x9D6 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2637A450 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x843 DUP13 PUSH2 0x691 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP10 PUSH1 0x20 ADD MLOAD GT ISZERO ISZERO DUP2 MSTORE POP DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87F SWAP3 SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C2 SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDDC28C58 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x930 DUP10 PUSH2 0x691 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x965 SWAP3 SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A5 SWAP2 SWAP1 PUSH2 0x1427 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLVALUE EQ PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4FB8209 PUSH1 0xE5 SHL DUP2 MSTORE CALLVALUE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4FE1D94 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA5A SWAP2 SWAP1 PUSH2 0x1443 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA83 JUMPI PUSH1 0x40 MLOAD PUSH4 0x29B99A95 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP1 DUP6 ADD DUP9 SWAP1 MSTORE DUP6 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP5 ADD SWAP1 SWAP5 MSTORE PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x41B SWAP4 DUP6 AND SWAP3 DUP7 SWAP1 PUSH2 0xB08 SWAP1 DUP6 SWAP1 PUSH2 0xB0E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB23 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0xB76 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0xB48 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB84 DUP4 DUP4 PUSH1 0x0 PUSH2 0xB8B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xBCC SWAP2 SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x5CF DUP7 DUP4 DUP4 PUSH1 0x60 DUP3 PUSH2 0xC2E JUMPI PUSH2 0xC29 DUP3 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0xC45 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xC6E JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x390 JUMP JUMPDEST POP DUP1 PUSH2 0xB84 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xC85 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xD0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xD3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD7F DUP10 DUP10 PUSH2 0xCE5 JUMP JUMPDEST SWAP7 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDAE DUP12 DUP4 DUP13 ADD PUSH2 0xCFD JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0xDC3 DUP3 PUSH2 0xD45 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE6 DUP11 DUP3 DUP12 ADD PUSH2 0xCFD JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE2E DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE57 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE78 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB84 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBF DUP7 DUP7 PUSH2 0xCE5 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE6 DUP8 DUP3 DUP9 ADD PUSH2 0xCFD JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP PUSH1 0x80 DUP6 ADD CALLDATALOAD PUSH2 0xEFA DUP2 PUSH2 0xD45 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB84 DUP3 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB84 DUP2 PUSH2 0xD45 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 GT ISZERO PUSH2 0xF6D JUMPI PUSH2 0xF6D PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF95 JUMPI PUSH2 0xF95 PUSH2 0xF3D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xFAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB84 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1007 DUP6 PUSH2 0xDF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102F DUP9 DUP4 DUP10 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1052 DUP8 DUP3 DUP9 ADD PUSH2 0xCFD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1099 PUSH1 0x40 DUP5 ADD DUP3 DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10CD DUP6 PUSH2 0xDF9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x10E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10F5 DUP9 DUP4 DUP10 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x110B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x111D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112C DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xF53 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0xEFA DUP2 PUSH2 0x10A0 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB84 DUP4 DUP4 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1184 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCF7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x11CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D8 DUP5 DUP3 DUP6 ADD PUSH2 0xFC8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1209 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1228 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1215 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1249 JUMPI PUSH2 0x1249 PUSH2 0xF3D JUMP JUMPDEST PUSH2 0x125D DUP2 PUSH2 0x1257 DUP5 SLOAD PUSH2 0x1170 JUMP JUMPDEST DUP5 PUSH2 0x11E0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1292 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x127A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12C1 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x12A2 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x12DF JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP4 MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0xA0 PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1325 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0xE60 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3F NOT DUP5 DUP4 SUB ADD PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x1342 DUP3 DUP3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x80 SWAP7 SWAP1 SWAP7 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x137A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x139C JUMPI PUSH2 0x139C PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP3 LT DUP2 DUP4 GT OR ISZERO PUSH2 0x13EB JUMPI PUSH2 0x13EB PUSH2 0xF3D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP5 MLOAD DUP4 MSTORE PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 AND DUP3 EQ PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x141B DUP5 PUSH1 0x40 DUP6 ADD PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB84 DUP4 DUP4 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB84 DUP2 PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB84 DUP2 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x148F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 CALLCODE 0xD5 ISZERO 0x2A 0xC2 STOP 0xDE 0xF SWAP13 PUSH11 0xC1CF3E36F380E49325F197 0xD2 0x5E STOP 0xD4 0xE1 TIMESTAMP XOR CALLVALUE 0xB2 SDIV PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"326:2738:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4368:708:2;;;;;;:::i;:::-;;:::i;:::-;;1287:235:0;;;;;;;;;;-1:-1:-1;1287:235:0;;;843:1:3;1920:34:26;;678:1:2;1985:2:26;1970:18;;1963:43;1856:18;1287:235:0;;;;;;;;1724:108:1;;;;;;;;;;-1:-1:-1;1724:108:1;;;;;:::i;:::-;;:::i;446:46::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2634:32:26;;;2616:51;;2604:2;2589:18;446:46:1;2442:231:26;2293:101:12;;;;;;;;;;;;;:::i;460:44:23:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3507:128:2:-;;;;;;;;;;-1:-1:-1;3507:128:2;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3596:31:26;;;3578:50;;3566:2;3551:18;3507:128:2;3434:200:26;2013:216:2;;;;;;;;;;-1:-1:-1;2013:216:2;;;;;:::i;:::-;-1:-1:-1;;;;;2198:24:2;;2217:4;2198:24;2013:216;;;;;;;;;;4478:14:26;;4471:22;4453:41;;4441:2;4426:18;2013:216:2;4313:187:26;1638:85:12;;;;;;;;;;-1:-1:-1;1684:7:12;1710:6;-1:-1:-1;;;;;1710:6:12;1638:85;;569:48:1;;;;;;;;;;-1:-1:-1;569:48:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5048:25:26;;;5036:2;5021:18;569:48:1;4902:177:26;3252:105:1;;;;;;;;;;-1:-1:-1;3252:105:1;;;;;:::i;:::-;;:::i;971:334:23:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2543:215:12:-;;;;;;;;;;-1:-1:-1;2543:215:12;;;;;:::i;:::-;;:::i;1796:307:23:-;;;;;;;;;;-1:-1:-1;1796:307:23;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2771:149:2:-;;;;;;;;;;-1:-1:-1;2771:149:2;;;;;:::i;:::-;;:::i;4368:708::-;4681:8;-1:-1:-1;;;;;4673:31:2;4694:10;4673:31;4669:68;;4713:24;;-1:-1:-1;;;4713:24:2;;4726:10;4713:24;;;2616:51:26;2589:18;;4713:24:2;;;;;;;;4669:68;4873:14;;;;;;4837:32;;4854:14;;4873:7;4854:14;:::i;:::-;4837:16;:32::i;:::-;:50;4833:103;;4905:14;;;;:7;:14;:::i;:::-;4896:40;;-1:-1:-1;;;4896:40:2;;9376:10:26;9364:23;;;4896:40:2;;;9346:42:26;4921:14:2;;;;9404:18:26;;;9397:34;9319:18;;4896:40:2;9174:263:26;4833:103:2;5010:59;5021:7;5030:5;5037:8;;5047:9;5058:10;;5010;:59::i;:::-;4368:708;;;;;;;:::o;1724:108:1:-;1531:13:12;:11;:13::i;:::-;1804:21:1::1;1813:4;1819:5;1804:8;:21::i;:::-;1724:108:::0;;:::o;2293:101:12:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;460:44:23:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3507:128:2:-;3596:12;3507:128;;;;;:::o;3252:105:1:-;1531:13:12;:11;:13::i;:::-;3319:31:1::1;::::0;-1:-1:-1;;;3319:31:1;;-1:-1:-1;;;;;2634:32:26;;;3319:31:1::1;::::0;::::1;2616:51:26::0;3319:8:1::1;:20;::::0;::::1;::::0;2589:18:26;;3319:31:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3252:105:::0;:::o;971:334:23:-;1106:31;;:::i;:::-;1149:21;1184:8;1173:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1173:20:23;;;;;;;1213:85;;;;;;;;;;;;;;;;;;1173:20;-1:-1:-1;1213:85:23;;1221:7;;1173:20;;;1240:8;;;;;;1213:85;;1240:8;;;;1213:85;;;;;;;;-1:-1:-1;1250:26:23;;;;;;;;;1263:9;1250:26;;;;;;;;;;-1:-1:-1;1286:10:23;;-1:-1:-1;1213:7:23;;-1:-1:-1;1213:85:23:i;:::-;1203:95;971:334;-1:-1:-1;;;;;;971:334:23:o;2543:215:12:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:12;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:12;;2700:1:::1;2672:31;::::0;::::1;2616:51:26::0;2589:18;;2672:31:12::1;2442:231:26::0;2623:91:12::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:307:23:-;-1:-1:-1;;;;;;;;;;;;;;;;;1988:20:23;2022:8;2011:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;1988:43;;2047:49;2054:7;2063;2072:8;2082:13;2047:6;:49::i;2771:149:2:-;2853:4;2900:13;;;;;;2876:5;;2853:4;;2882:13;;2900:6;2882:13;:::i;:::-;2876:20;;;;;;;;;;;;;-1:-1:-1;2876:20:2;;:37;;2771:149;-1:-1:-1;;2771:149:2:o;2718:196:1:-;2822:11;;;2788:7;2822:11;;;:5;:11;;;;;;;2843:43;;2874:12;;-1:-1:-1;;;2874:12:1;;10001:10:26;9989:23;;2874:12:1;;;9971:42:26;9944:18;;2874:12:1;9827:192:26;2799:263:23;3026:29;;;;3037:7;3026:29;:::i;:::-;3019:4;;:36;;:4;:36;:::i;:::-;;2799:263;;;;;;;:::o;1796:162:12:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:12;735:10:17;1855:23:12;1851:101;;1901:40;;-1:-1:-1;;;1901:40:12;;735:10:17;1901:40:12;;;2616:51:26;2589:18;;1901:40:12;2442:231:26;2286:134:1;2359:11;;;;;;;:5;:11;;;;;;;;;:19;;;2393:20;;9346:42:26;;;9404:18;;9397:34;;;2393:20:1;;9319:18:26;2393:20:1;;;;;;;2286:134;;:::o;2912:187:12:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:12;;;-1:-1:-1;;;;;;3020:17:12;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;3188:766:3:-;3389:31;;:::i;:::-;3554:20;3577:26;3588:4;:14;;;3577:10;:26::i;:::-;3617:15;;;;3554:49;;-1:-1:-1;3617:19:3;3613:53;;3638:28;3650:4;:15;;;3638:11;:28::i;:::-;3755:8;-1:-1:-1;;;;;3755:13:3;;3777:12;3809:92;;;;;;;;3825:7;3809:92;;;;;;3834:25;3851:7;3834:16;:25::i;:::-;3809:92;;;;3861:8;3809:92;;;;3871:8;3809:92;;;;3899:1;3881:4;:15;;;:19;3809:92;;;;;3919:14;3755:192;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3677:270;3188:766;-1:-1:-1;;;;;;;3188:766:3:o;2038:391::-;-1:-1:-1;;;;;;;;;;;;;;;;;2259:8:3;-1:-1:-1;;;;;2259:14:3;;2291:86;;;;;;;;2307:7;2291:86;;;;;;2316:25;2333:7;2316:16;:25::i;:::-;2291:86;;;;2343:8;2291:86;;;;2353:8;2291:86;;;;2363:13;2291:86;;;;;2403:4;2259:163;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2240:182;2038:391;-1:-1:-1;;;;;2038:391:3:o;4650:191::-;4716:17;4762:10;4749:9;:23;4745:62;;4781:26;;-1:-1:-1;;;4781:26:3;;4797:9;4781:26;;;5048:25:26;5021:18;;4781:26:3;4902:177:26;4745:62:3;-1:-1:-1;4824:10:3;4650:191::o;5218:410::-;5371:15;5389:8;-1:-1:-1;;;;;5389:16:3;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5371:36;-1:-1:-1;;;;;;5421:21:3;;5417:54;;5451:20;;-1:-1:-1;;;5451:20:3;;;;;;;;;;;5417:54;1829:53:15;;;5578:10:3;1829:53:15;;;15595:34:26;;;5598:8:3;-1:-1:-1;;;;;15665:15:26;;;15645:18;;;15638:43;15697:18;;;;15690:34;;;1829:53:15;;;;;;;;;;15530:18:26;;;;1829:53:15;;;;;;;;-1:-1:-1;;;;;1829:53:15;-1:-1:-1;;;1829:53:15;;;5545:76:3;;:32;;;5609:11;;1802:81:15;;5545:32:3;;1802:19:15;:81::i;:::-;1702:188;;;;:::o;4059:629::-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:15;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:15;;-1:-1:-1;;;;;2634:32:26;;4631:40:15;;;2616:51:26;2589:18;;4631:40:15;2442:231:26;4547:135:15;4129:559;4059:629;;:::o;2705:151:16:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;2705:151;-1:-1:-1;;;2705:151:16:o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:16;;3394:4;3359:41;;;2616:51:26;2589:18;;3359:41:16;2442:231:26;3303:108:16;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:16;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:16;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:16;;-1:-1:-1;;;;;2634:32:26;;5121:24:16;;;2616:51:26;2589:18;;5121:24:16;2442:231:26;5041:119:16;-1:-1:-1;5180:10:16;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:16;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:154:26:-;73:5;118:2;109:6;104:3;100:16;96:25;93:45;;;134:1;131;124:12;93:45;-1:-1:-1;156:6:26;14:154;-1:-1:-1;14:154:26:o;173:347::-;224:8;234:6;288:3;281:4;273:6;269:17;265:27;255:55;;306:1;303;296:12;255:55;-1:-1:-1;329:20:26;;-1:-1:-1;;;;;361:30:26;;358:50;;;404:1;401;394:12;358:50;441:4;433:6;429:17;417:29;;493:3;486:4;477:6;469;465:19;461:30;458:39;455:59;;;510:1;507;500:12;455:59;173:347;;;;;:::o;525:131::-;-1:-1:-1;;;;;600:31:26;;590:42;;580:70;;646:1;643;636:12;661:1047;803:6;811;819;827;835;843;851;904:3;892:9;883:7;879:23;875:33;872:53;;;921:1;918;911:12;872:53;944;989:7;978:9;944:53;:::i;:::-;934:63;;1044:2;1033:9;1029:18;1016:32;1006:42;;1099:3;1088:9;1084:19;1071:33;-1:-1:-1;;;;;1164:2:26;1156:6;1153:14;1150:34;;;1180:1;1177;1170:12;1150:34;1219:58;1269:7;1260:6;1249:9;1245:22;1219:58;:::i;:::-;1296:8;;-1:-1:-1;1193:84:26;-1:-1:-1;1381:3:26;1366:19;;1353:33;;-1:-1:-1;1395:31:26;1353:33;1395:31;:::i;:::-;1445:5;;-1:-1:-1;1503:3:26;1488:19;;1475:33;;1520:16;;;1517:36;;;1549:1;1546;1539:12;1517:36;;1588:60;1640:7;1629:8;1618:9;1614:24;1588:60;:::i;:::-;661:1047;;;;-1:-1:-1;661:1047:26;;-1:-1:-1;661:1047:26;;;;1562:86;;-1:-1:-1;;;661:1047:26:o;2017:163::-;2084:20;;2144:10;2133:22;;2123:33;;2113:61;;2170:1;2167;2160:12;2113:61;2017:163;;;:::o;2185:252::-;2252:6;2260;2313:2;2301:9;2292:7;2288:23;2284:32;2281:52;;;2329:1;2326;2319:12;2281:52;2352:28;2370:9;2352:28;:::i;:::-;2342:38;2427:2;2412:18;;;;2399:32;;-1:-1:-1;;;2185:252:26:o;2678:250::-;2763:1;2773:113;2787:6;2784:1;2781:13;2773:113;;;2863:11;;;2857:18;2844:11;;;2837:39;2809:2;2802:10;2773:113;;;-1:-1:-1;;2920:1:26;2902:16;;2895:27;2678:250::o;2933:271::-;2975:3;3013:5;3007:12;3040:6;3035:3;3028:19;3056:76;3125:6;3118:4;3113:3;3109:14;3102:4;3095:5;3091:16;3056:76;:::i;:::-;3186:2;3165:15;-1:-1:-1;;3161:29:26;3152:39;;;;3193:4;3148:50;;2933:271;-1:-1:-1;;2933:271:26:o;3209:220::-;3358:2;3347:9;3340:21;3321:4;3378:45;3419:2;3408:9;3404:18;3396:6;3378:45;:::i;3639:669::-;3752:6;3760;3768;3776;3829:3;3817:9;3808:7;3804:23;3800:33;3797:53;;;3846:1;3843;3836:12;3797:53;3869;3914:7;3903:9;3869:53;:::i;:::-;3859:63;;3973:2;3962:9;3958:18;3945:32;-1:-1:-1;;;;;3992:6:26;3989:30;3986:50;;;4032:1;4029;4022:12;3986:50;4071:58;4121:7;4112:6;4101:9;4097:22;4071:58;:::i;:::-;4148:8;;-1:-1:-1;4045:84:26;-1:-1:-1;;4233:3:26;4218:19;;4205:33;4247:31;4205:33;4247:31;:::i;:::-;3639:669;;;;-1:-1:-1;3639:669:26;;-1:-1:-1;;3639:669:26:o;4713:184::-;4771:6;4824:2;4812:9;4803:7;4799:23;4795:32;4792:52;;;4840:1;4837;4830:12;4792:52;4863:28;4881:9;4863:28;:::i;5084:247::-;5143:6;5196:2;5184:9;5175:7;5171:23;5167:32;5164:52;;;5212:1;5209;5202:12;5164:52;5251:9;5238:23;5270:31;5295:5;5270:31;:::i;5336:127::-;5397:10;5392:3;5388:20;5385:1;5378:31;5428:4;5425:1;5418:15;5452:4;5449:1;5442:15;5468:632;5533:5;-1:-1:-1;;;;;5604:2:26;5596:6;5593:14;5590:40;;;5610:18;;:::i;:::-;5685:2;5679:9;5653:2;5739:15;;-1:-1:-1;;5735:24:26;;;5761:2;5731:33;5727:42;5715:55;;;5785:18;;;5805:22;;;5782:46;5779:72;;;5831:18;;:::i;:::-;5871:10;5867:2;5860:22;5900:6;5891:15;;5930:6;5922;5915:22;5970:3;5961:6;5956:3;5952:16;5949:25;5946:45;;;5987:1;5984;5977:12;5946:45;6037:6;6032:3;6025:4;6017:6;6013:17;6000:44;6092:1;6085:4;6076:6;6068;6064:19;6060:30;6053:41;;;;5468:632;;;;;:::o;6105:222::-;6148:5;6201:3;6194:4;6186:6;6182:17;6178:27;6168:55;;6219:1;6216;6209:12;6168:55;6241:80;6317:3;6308:6;6295:20;6288:4;6280:6;6276:17;6241:80;:::i;6332:702::-;6429:6;6437;6445;6453;6506:2;6494:9;6485:7;6481:23;6477:32;6474:52;;;6522:1;6519;6512:12;6474:52;6545:28;6563:9;6545:28;:::i;:::-;6535:38;;6624:2;6613:9;6609:18;6596:32;-1:-1:-1;;;;;6688:2:26;6680:6;6677:14;6674:34;;;6704:1;6701;6694:12;6674:34;6727:50;6769:7;6760:6;6749:9;6745:22;6727:50;:::i;:::-;6717:60;;6830:2;6819:9;6815:18;6802:32;6786:48;;6859:2;6849:8;6846:16;6843:36;;;6875:1;6872;6865:12;6843:36;;6914:60;6966:7;6955:8;6944:9;6940:24;6914:60;:::i;:::-;6332:702;;;;-1:-1:-1;6993:8:26;-1:-1:-1;;;;6332:702:26:o;7197:467::-;7355:4;7397:3;7386:9;7382:19;7374:27;;7434:6;7428:13;7417:9;7410:32;-1:-1:-1;;;;;7502:4:26;7494:6;7490:17;7484:24;7480:49;7473:4;7462:9;7458:20;7451:79;7577:4;7569:6;7565:17;7559:24;7592:66;7652:4;7641:9;7637:20;7623:12;7117;;7105:25;;7179:4;7168:16;;;7162:23;7146:14;;7139:47;7039:153;7592:66;;7197:467;;;;:::o;7669:118::-;7755:5;7748:13;7741:21;7734:5;7731:32;7721:60;;7777:1;7774;7767:12;7792:873;7893:6;7901;7909;7917;7970:3;7958:9;7949:7;7945:23;7941:33;7938:53;;;7987:1;7984;7977:12;7938:53;8010:28;8028:9;8010:28;:::i;:::-;8000:38;;8089:2;8078:9;8074:18;8061:32;-1:-1:-1;;;;;8153:2:26;8145:6;8142:14;8139:34;;;8169:1;8166;8159:12;8139:34;8192:50;8234:7;8225:6;8214:9;8210:22;8192:50;:::i;:::-;8182:60;;8295:2;8284:9;8280:18;8267:32;8251:48;;8324:2;8314:8;8311:16;8308:36;;;8340:1;8337;8330:12;8308:36;-1:-1:-1;8363:24:26;;8418:4;8410:13;;8406:27;-1:-1:-1;8396:55:26;;8447:1;8444;8437:12;8396:55;8470:74;8536:7;8531:2;8518:16;8513:2;8509;8505:11;8470:74;:::i;:::-;8460:84;;;8594:2;8583:9;8579:18;8566:32;8607:28;8629:5;8607:28;:::i;8670:259::-;7117:12;;7105:25;;7179:4;7168:16;;;7162:23;7146:14;;;7139:47;8862:2;8847:18;;8874:49;7039:153;8934:235;9018:6;9071:2;9059:9;9050:7;9046:23;9042:32;9039:52;;;9087:1;9084;9077:12;9039:52;9110:53;9155:7;9144:9;9110:53;:::i;9442:380::-;9521:1;9517:12;;;;9564;;;9585:61;;9639:4;9631:6;9627:17;9617:27;;9585:61;9692:2;9684:6;9681:14;9661:18;9658:38;9655:161;;9738:10;9733:3;9729:20;9726:1;9719:31;9773:4;9770:1;9763:15;9801:4;9798:1;9791:15;10024:322;10093:6;10146:2;10134:9;10125:7;10121:23;10117:32;10114:52;;;10162:1;10159;10152:12;10114:52;10202:9;10189:23;-1:-1:-1;;;;;10227:6:26;10224:30;10221:50;;;10267:1;10264;10257:12;10221:50;10290;10332:7;10323:6;10312:9;10308:22;10290:50;:::i;:::-;10280:60;10024:322;-1:-1:-1;;;;10024:322:26:o;10477:543::-;10579:2;10574:3;10571:11;10568:446;;;10615:1;10639:5;10636:1;10629:16;10683:4;10680:1;10670:18;10753:2;10741:10;10737:19;10734:1;10730:27;10724:4;10720:38;10789:4;10777:10;10774:20;10771:47;;;-1:-1:-1;10812:4:26;10771:47;10867:2;10862:3;10858:12;10855:1;10851:20;10845:4;10841:31;10831:41;;10922:82;10940:2;10933:5;10930:13;10922:82;;;10985:17;;;10966:1;10955:13;10922:82;;;10926:3;;;10477:543;;;:::o;11196:1345::-;11322:3;11316:10;-1:-1:-1;;;;;11341:6:26;11338:30;11335:56;;;11371:18;;:::i;:::-;11400:97;11490:6;11450:38;11482:4;11476:11;11450:38;:::i;:::-;11444:4;11400:97;:::i;:::-;11552:4;;11609:2;11598:14;;11626:1;11621:663;;;;12328:1;12345:6;12342:89;;;-1:-1:-1;12397:19:26;;;12391:26;12342:89;-1:-1:-1;;11153:1:26;11149:11;;;11145:24;11141:29;11131:40;11177:1;11173:11;;;11128:57;12444:81;;11591:944;;11621:663;10424:1;10417:14;;;10461:4;10448:18;;-1:-1:-1;;11657:20:26;;;11775:236;11789:7;11786:1;11783:14;11775:236;;;11878:19;;;11872:26;11857:42;;11970:27;;;;11938:1;11926:14;;;;11805:19;;11775:236;;;11779:3;12039:6;12030:7;12027:19;12024:201;;;12100:19;;;12094:26;-1:-1:-1;;12183:1:26;12179:14;;;12195:3;12175:24;12171:37;12167:42;12152:58;12137:74;;12024:201;-1:-1:-1;;;;;12271:1:26;12255:14;;;12251:22;12238:36;;-1:-1:-1;11196:1345:26:o;12546:889::-;12767:2;12756:9;12749:21;12825:10;12816:6;12810:13;12806:30;12801:2;12790:9;12786:18;12779:58;12891:4;12883:6;12879:17;12873:24;12868:2;12857:9;12853:18;12846:52;12730:4;12945:2;12937:6;12933:15;12927:22;12986:4;12980:3;12969:9;12965:19;12958:33;13014:52;13061:3;13050:9;13046:19;13032:12;13014:52;:::i;:::-;13000:66;;13115:2;13107:6;13103:15;13097:22;13189:2;13185:7;13173:9;13165:6;13161:22;13157:36;13150:4;13139:9;13135:20;13128:66;13217:41;13251:6;13235:14;13217:41;:::i;:::-;13327:3;13315:16;;;;13309:23;13302:31;13295:39;13289:3;13274:19;;13267:68;-1:-1:-1;;;;;;;;13396:32:26;;;;13389:4;13374:20;;;13367:62;13203:55;12546:889::o;13440:478::-;13510:5;13558:4;13546:9;13541:3;13537:19;13533:30;13530:50;;;13576:1;13573;13566:12;13530:50;13609:4;13603:11;13653:4;13645:6;13641:17;13724:6;13712:10;13709:22;-1:-1:-1;;;;;13676:10:26;13673:34;13670:62;13667:88;;;13735:18;;:::i;:::-;13771:4;13764:24;13836:16;;13821:32;;13907:2;13892:18;;;13886:25;13869:15;;;13862:50;;;;-1:-1:-1;13806:6:26;13440:478;-1:-1:-1;13440:478:26:o;13923:726::-;14026:6;14079:3;14067:9;14058:7;14054:23;14050:33;14047:53;;;14096:1;14093;14086:12;14047:53;14129:2;14123:9;14171:4;14163:6;14159:17;-1:-1:-1;;;;;14263:6:26;14251:10;14248:22;14243:2;14231:10;14228:18;14225:46;14222:72;;;14274:18;;:::i;:::-;14314:10;14310:2;14303:22;14355:9;14349:16;14341:6;14334:32;14409:2;14398:9;14394:18;14388:25;14375:38;;14453:2;14446:5;14442:14;14435:5;14432:25;14422:53;;14471:1;14468;14461:12;14422:53;-1:-1:-1;14503:2:26;14491:15;;14484:30;14547:70;14609:7;14604:2;14589:18;;14547:70;:::i;:::-;14542:2;14530:15;;14523:95;14534:6;13923:726;-1:-1:-1;;;13923:726:26:o;14654:258::-;14753:6;14806:2;14794:9;14785:7;14781:23;14777:32;14774:52;;;14822:1;14819;14812:12;14774:52;14845:61;14898:7;14887:9;14845:61;:::i;15099:251::-;15169:6;15222:2;15210:9;15201:7;15197:23;15193:32;15190:52;;;15238:1;15235;15228:12;15190:52;15270:9;15264:16;15289:31;15314:5;15289:31;:::i;15735:245::-;15802:6;15855:2;15843:9;15834:7;15830:23;15826:32;15823:52;;;15871:1;15868;15861:12;15823:52;15903:9;15897:16;15922:28;15944:5;15922:28;:::i;15985:287::-;16114:3;16152:6;16146:13;16168:66;16227:6;16222:3;16215:4;16207:6;16203:17;16168:66;:::i;:::-;16250:16;;;;;15985:287;-1:-1:-1;;15985:287:26:o"},"gasEstimates":{"creation":{"codeDepositCost":"1065400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowInitializePath((uint32,bytes32,uint64))":"infinite","data()":"infinite","endpoint()":"infinite","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"764","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"infinite","nextNonce(uint32,bytes32)":"492","oAppVersion()":"230","owner()":"2376","peers(uint32)":"2574","quote(uint32,string,bytes,bool)":"infinite","renounceOwnership()":"infinite","send(uint32,string,bytes)":"infinite","setDelegate(address)":"infinite","setPeer(uint32,bytes32)":"26105","transferOwnership(address)":"infinite"},"internal":{"_lzReceive(struct Origin calldata,bytes32,bytes calldata,address,bytes calldata)":"infinite"}},"methodIdentifiers":{"allowInitializePath((uint32,bytes32,uint64))":"ff7bd03d","data()":"73d4a13a","endpoint()":"5e280f11","isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":"82413eac","lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)":"13137d65","nextNonce(uint32,bytes32)":"7d25a05e","oAppVersion()":"17442b70","owner()":"8da5cb5b","peers(uint32)":"bb0b6a53","quote(uint32,string,bytes,bool)":"f77e5dd3","renounceOwnership()":"715018a6","send(uint32,string,bytes)":"e0539e58","setDelegate(address)":"ca5eb5e1","setPeer(uint32,bytes32)":"3400288b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_endpoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDelegate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEndpointCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LzTokenUnavailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"NoPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"NotEnoughNative\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"OnlyEndpoint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"}],\"name\":\"OnlyPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"name\":\"PeerSet\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"origin\",\"type\":\"tuple\"}],\"name\":\"allowInitializePath\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endpoint\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpointV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"isComposeMsgSender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"srcEid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"internalType\":\"struct Origin\",\"name\":\"_origin\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_guid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"lzReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nextNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oAppVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"senderVersion\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"receiverVersion\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"eid\",\"type\":\"uint32\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"peer\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_payInLzToken\",\"type\":\"bool\"}],\"name\":\"quote\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_dstEid\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_options\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"guid\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nativeFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lzTokenFee\",\"type\":\"uint256\"}],\"internalType\":\"struct MessagingFee\",\"name\":\"fee\",\"type\":\"tuple\"}],\"internalType\":\"struct MessagingReceipt\",\"name\":\"receipt\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_eid\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_peer\",\"type\":\"bytes32\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"details\":\"This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.This defaults to assuming if a peer has been set, its initialized. Can be overridden by the OApp if there is other logic to determine this.\",\"params\":{\"origin\":\"The origin information containing the source endpoint and sender address.\"},\"returns\":{\"_0\":\"Whether the path has been initialized.\"}},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"details\":\"_origin The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message._message The lzReceive payload.Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.The default sender IS the OAppReceiver implementer.\",\"params\":{\"_sender\":\"The sender address.\"},\"returns\":{\"_0\":\"isSender Is a valid sender.\"}},\"lzReceive((uint32,bytes32,uint64),bytes32,bytes,address,bytes)\":{\"details\":\"Entry point for receiving messages or packets from the endpoint.Entry point for receiving msg/packet from the LayerZero endpoint.\",\"params\":{\"_executor\":\"The address of the executor for the received message.\",\"_extraData\":\"Additional arbitrary data provided by the corresponding executor.\",\"_guid\":\"The unique identifier for the received LayerZero message.\",\"_message\":\"The payload of the received message.\",\"_origin\":\"The origin information containing the source endpoint and sender address.  - srcEid: The source chain endpoint ID.  - sender: The sender address on the src chain.  - nonce: The nonce of the message.\"}},\"nextNonce(uint32,bytes32)\":{\"details\":\"_srcEid The source endpoint ID._sender The sender address.The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.Is required by the off-chain executor to determine the OApp expects msg execution is ordered.This is also enforced by the OApp.By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\",\"returns\":{\"nonce\":\"The next nonce.\"}},\"oAppVersion()\":{\"returns\":{\"receiverVersion\":\"The version of the OAppReceiver.sol implementation.\",\"senderVersion\":\"The version of the OAppSender.sol implementation.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"quote(uint32,string,bytes,bool)\":{\"params\":{\"_dstEid\":\"Destination chain's endpoint ID.\",\"_message\":\"The message.\",\"_options\":\"Message execution options (e.g., for sending gas to destination).\",\"_payInLzToken\":\"Whether to return fee in ZRO token.\"},\"returns\":{\"fee\":\"A `MessagingFee` struct containing the calculated gas fee in either the native token or ZRO token.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"send(uint32,string,bytes)\":{\"details\":\"Encodes the message as bytes and sends it using the `_lzSend` internal function.\",\"params\":{\"_dstEid\":\"The endpoint ID of the destination chain.\",\"_message\":\"The message string to be sent.\",\"_options\":\"Additional options for message execution.\"},\"returns\":{\"receipt\":\"A `MessagingReceipt` struct containing details of the message sent.\"}},\"setDelegate(address)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\",\"params\":{\"_delegate\":\"The address of the delegate to be set.\"}},\"setPeer(uint32,bytes32)\":{\"details\":\"Only the owner/admin of the OApp can call this function.Indicates that the peer is trusted to send LayerZero messages to this OApp.Set this to bytes32(0) to remove the peer address.Peer is a bytes32 to accommodate non-evm chains.\",\"params\":{\"_eid\":\"The endpoint ID.\",\"_peer\":\"The address of the peer to be associated with the corresponding endpoint.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowInitializePath((uint32,bytes32,uint64))\":{\"notice\":\"Checks if the path initialization is allowed based on the provided origin.\"},\"endpoint()\":{\"notice\":\"Retrieves the LayerZero endpoint associated with the OApp.\"},\"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)\":{\"notice\":\"Indicates whether an address is an approved composeMsg sender to the Endpoint.\"},\"nextNonce(uint32,bytes32)\":{\"notice\":\"Retrieves the next nonce for a given source endpoint and sender address.\"},\"oAppVersion()\":{\"notice\":\"Retrieves the OApp version information.\"},\"peers(uint32)\":{\"notice\":\"Retrieves the peer (OApp) associated with a corresponding endpoint.\"},\"quote(uint32,string,bytes,bool)\":{\"notice\":\"Quotes the gas needed to pay for the full omnichain transaction in native gas or ZRO token.\"},\"send(uint32,string,bytes)\":{\"notice\":\"Sends a message from the source chain to a destination chain.\"},\"setDelegate(address)\":{\"notice\":\"Sets the delegate address for the OApp.\"},\"setPeer(uint32,bytes32)\":{\"notice\":\"Sets the peer address (OApp instance) for a corresponding endpoint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyOApp.sol\":\"MyOApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\n// @dev Import the 'MessagingFee' and 'MessagingReceipt' so it's exposed to OApp implementers\\n// solhint-disable-next-line no-unused-import\\nimport { OAppSender, MessagingFee, MessagingReceipt } from \\\"./OAppSender.sol\\\";\\n// @dev Import the 'Origin' so it's exposed to OApp implementers\\n// solhint-disable-next-line no-unused-import\\nimport { OAppReceiver, Origin } from \\\"./OAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OApp\\n * @dev Abstract contract serving as the base for OApp implementation, combining OAppSender and OAppReceiver functionality.\\n */\\nabstract contract OApp is OAppSender, OAppReceiver {\\n    /**\\n     * @dev Constructor to initialize the OApp with the provided endpoint and owner.\\n     * @param _endpoint The address of the LOCAL LayerZero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     */\\n    constructor(address _endpoint, address _delegate) OAppCore(_endpoint, _delegate) {}\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol implementation.\\n     * @return receiverVersion The version of the OAppReceiver.sol implementation.\\n     */\\n    function oAppVersion()\\n        public\\n        pure\\n        virtual\\n        override(OAppSender, OAppReceiver)\\n        returns (uint64 senderVersion, uint64 receiverVersion)\\n    {\\n        return (SENDER_VERSION, RECEIVER_VERSION);\\n    }\\n}\\n\",\"keccak256\":\"0xac362c4c291fad2f1511a968424b2e78a5ad502d1c867bd31da04be742aca8c5\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IOAppCore, ILayerZeroEndpointV2 } from \\\"./interfaces/IOAppCore.sol\\\";\\n\\n/**\\n * @title OAppCore\\n * @dev Abstract contract implementing the IOAppCore interface with basic OApp configurations.\\n */\\nabstract contract OAppCore is IOAppCore, Ownable {\\n    // The LayerZero endpoint associated with the given OApp\\n    ILayerZeroEndpointV2 public immutable endpoint;\\n\\n    // Mapping to store peers associated with corresponding endpoints\\n    mapping(uint32 eid => bytes32 peer) public peers;\\n\\n    /**\\n     * @dev Constructor to initialize the OAppCore with the provided endpoint and delegate.\\n     * @param _endpoint The address of the LOCAL Layer Zero endpoint.\\n     * @param _delegate The delegate capable of making OApp configurations inside of the endpoint.\\n     *\\n     * @dev The delegate typically should be set as the owner of the contract.\\n     */\\n    constructor(address _endpoint, address _delegate) {\\n        endpoint = ILayerZeroEndpointV2(_endpoint);\\n\\n        if (_delegate == address(0)) revert InvalidDelegate();\\n        endpoint.setDelegate(_delegate);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\\n        _setPeer(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     *\\n     * @dev Indicates that the peer is trusted to send LayerZero messages to this OApp.\\n     * @dev Set this to bytes32(0) to remove the peer address.\\n     * @dev Peer is a bytes32 to accommodate non-evm chains.\\n     */\\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\\n        peers[_eid] = _peer;\\n        emit PeerSet(_eid, _peer);\\n    }\\n\\n    /**\\n     * @notice Internal function to get the peer address associated with a specific endpoint; reverts if NOT set.\\n     * ie. the peer is set to bytes32(0).\\n     * @param _eid The endpoint ID.\\n     * @return peer The address of the peer associated with the specified endpoint.\\n     */\\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\\n        bytes32 peer = peers[_eid];\\n        if (peer == bytes32(0)) revert NoPeer(_eid);\\n        return peer;\\n    }\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp.\\n     * @param _delegate The address of the delegate to be set.\\n     *\\n     * @dev Only the owner/admin of the OApp can call this function.\\n     * @dev Provides the ability for a delegate to set configs, on behalf of the OApp, directly on the Endpoint contract.\\n     */\\n    function setDelegate(address _delegate) public onlyOwner {\\n        endpoint.setDelegate(_delegate);\\n    }\\n}\\n\",\"keccak256\":\"0x13a9c2d1d2c1f086b8624f2e84c4a4702212daae36f701d92bb915b535cbe4cc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { IOAppReceiver, Origin } from \\\"./interfaces/IOAppReceiver.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppReceiver\\n * @dev Abstract contract implementing the ILayerZeroReceiver interface and extending OAppCore for OApp receivers.\\n */\\nabstract contract OAppReceiver is IOAppReceiver, OAppCore {\\n    // Custom error message for when the caller is not the registered endpoint/\\n    error OnlyEndpoint(address addr);\\n\\n    // @dev The version of the OAppReceiver implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant RECEIVER_VERSION = 2;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppSender version. Indicates that the OAppSender is not implemented.\\n     * ie. this is a RECEIVE only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions.\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (0, RECEIVER_VERSION);\\n    }\\n\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @dev _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @dev _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement separate composeMsg senders that are NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata /*_origin*/,\\n        bytes calldata /*_message*/,\\n        address _sender\\n    ) public view virtual returns (bool) {\\n        return _sender == address(this);\\n    }\\n\\n    /**\\n     * @notice Checks if the path initialization is allowed based on the provided origin.\\n     * @param origin The origin information containing the source endpoint and sender address.\\n     * @return Whether the path has been initialized.\\n     *\\n     * @dev This indicates to the endpoint that the OApp has enabled msgs for this particular path to be received.\\n     * @dev This defaults to assuming if a peer has been set, its initialized.\\n     * Can be overridden by the OApp if there is other logic to determine this.\\n     */\\n    function allowInitializePath(Origin calldata origin) public view virtual returns (bool) {\\n        return peers[origin.srcEid] == origin.sender;\\n    }\\n\\n    /**\\n     * @notice Retrieves the next nonce for a given source endpoint and sender address.\\n     * @dev _srcEid The source endpoint ID.\\n     * @dev _sender The sender address.\\n     * @return nonce The next nonce.\\n     *\\n     * @dev The path nonce starts from 1. If 0 is returned it means that there is NO nonce ordered enforcement.\\n     * @dev Is required by the off-chain executor to determine the OApp expects msg execution is ordered.\\n     * @dev This is also enforced by the OApp.\\n     * @dev By default this is NOT enabled. ie. nextNonce is hardcoded to return 0.\\n     */\\n    function nextNonce(uint32 /*_srcEid*/, bytes32 /*_sender*/) public view virtual returns (uint64 nonce) {\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Entry point for receiving messages or packets from the endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _guid The unique identifier for the received LayerZero message.\\n     * @param _message The payload of the received message.\\n     * @param _executor The address of the executor for the received message.\\n     * @param _extraData Additional arbitrary data provided by the corresponding executor.\\n     *\\n     * @dev Entry point for receiving msg/packet from the LayerZero endpoint.\\n     */\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) public payable virtual {\\n        // Ensures that only the endpoint can attempt to lzReceive() messages to this OApp.\\n        if (address(endpoint) != msg.sender) revert OnlyEndpoint(msg.sender);\\n\\n        // Ensure that the sender matches the expected peer for the source endpoint.\\n        if (_getPeerOrRevert(_origin.srcEid) != _origin.sender) revert OnlyPeer(_origin.srcEid, _origin.sender);\\n\\n        // Call the internal OApp implementation of lzReceive.\\n        _lzReceive(_origin, _guid, _message, _executor, _extraData);\\n    }\\n\\n    /**\\n     * @dev Internal function to implement lzReceive logic without needing to copy the basic parameter validation.\\n     */\\n    function _lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) internal virtual;\\n}\\n\",\"keccak256\":\"0x0174e9f1ec4cefe4b5adc26c392269c699b9ff75965364e5b7264426a462c70b\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { SafeERC20, IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport { MessagingParams, MessagingFee, MessagingReceipt } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\nimport { OAppCore } from \\\"./OAppCore.sol\\\";\\n\\n/**\\n * @title OAppSender\\n * @dev Abstract contract implementing the OAppSender functionality for sending messages to a LayerZero endpoint.\\n */\\nabstract contract OAppSender is OAppCore {\\n    using SafeERC20 for IERC20;\\n\\n    // Custom error messages\\n    error NotEnoughNative(uint256 msgValue);\\n    error LzTokenUnavailable();\\n\\n    // @dev The version of the OAppSender implementation.\\n    // @dev Version is bumped when changes are made to this contract.\\n    uint64 internal constant SENDER_VERSION = 1;\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     *\\n     * @dev Providing 0 as the default for OAppReceiver version. Indicates that the OAppReceiver is not implemented.\\n     * ie. this is a SEND only OApp.\\n     * @dev If the OApp uses both OAppSender and OAppReceiver, then this needs to be override returning the correct versions\\n     */\\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\\n        return (SENDER_VERSION, 0);\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.quote() for fee calculation.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _payInLzToken Flag indicating whether to pay the fee in LZ tokens.\\n     * @return fee The calculated MessagingFee for the message.\\n     *      - nativeFee: The native fee for the message.\\n     *      - lzTokenFee: The LZ token fee for the message.\\n     */\\n    function _quote(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) internal view virtual returns (MessagingFee memory fee) {\\n        return\\n            endpoint.quote(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\\n                address(this)\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to interact with the LayerZero EndpointV2.send() for sending a message.\\n     * @param _dstEid The destination endpoint ID.\\n     * @param _message The message payload.\\n     * @param _options Additional options for the message.\\n     * @param _fee The calculated LayerZero fee for the message.\\n     *      - nativeFee: The native fee.\\n     *      - lzTokenFee: The lzToken fee.\\n     * @param _refundAddress The address to receive any excess fee values sent to the endpoint.\\n     * @return receipt The receipt for the sent message.\\n     *      - guid: The unique identifier for the sent message.\\n     *      - nonce: The nonce of the sent message.\\n     *      - fee: The LayerZero fee incurred for the message.\\n     */\\n    function _lzSend(\\n        uint32 _dstEid,\\n        bytes memory _message,\\n        bytes memory _options,\\n        MessagingFee memory _fee,\\n        address _refundAddress\\n    ) internal virtual returns (MessagingReceipt memory receipt) {\\n        // @dev Push corresponding fees to the endpoint, any excess is sent back to the _refundAddress from the endpoint.\\n        uint256 messageValue = _payNative(_fee.nativeFee);\\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\\n\\n        return\\n            // solhint-disable-next-line check-send-result\\n            endpoint.send{ value: messageValue }(\\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\\n                _refundAddress\\n            );\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the native fee associated with the message.\\n     * @param _nativeFee The native fee to be paid.\\n     * @return nativeFee The amount of native currency paid.\\n     *\\n     * @dev If the OApp needs to initiate MULTIPLE LayerZero messages in a single transaction,\\n     * this will need to be overridden because msg.value would contain multiple lzFees.\\n     * @dev Should be overridden in the event the LayerZero endpoint requires a different native currency.\\n     * @dev Some EVMs use an ERC20 as a method for paying transactions/gasFees.\\n     * @dev The endpoint is EITHER/OR, ie. it will NOT support both types of native payment at a time.\\n     */\\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\\n        return _nativeFee;\\n    }\\n\\n    /**\\n     * @dev Internal function to pay the LZ token fee associated with the message.\\n     * @param _lzTokenFee The LZ token fee to be paid.\\n     *\\n     * @dev If the caller is trying to pay in the specified lzToken, then the lzTokenFee is passed to the endpoint.\\n     * @dev Any excess sent, is passed back to the specified _refundAddress in the _lzSend().\\n     */\\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\\n        // @dev Cannot cache the token because it is not immutable in the endpoint.\\n        address lzToken = endpoint.lzToken();\\n        if (lzToken == address(0)) revert LzTokenUnavailable();\\n\\n        // Pay LZ token fee by sending tokens to the endpoint.\\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\\n    }\\n}\\n\",\"keccak256\":\"0x518cf4adca601923ed4baa6619846a253ea32b8d8775f8bc1faa3dfac7f67c20\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroEndpointV2 } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\\\";\\n\\n/**\\n * @title IOAppCore\\n */\\ninterface IOAppCore {\\n    // Custom error messages\\n    error OnlyPeer(uint32 eid, bytes32 sender);\\n    error NoPeer(uint32 eid);\\n    error InvalidEndpointCall();\\n    error InvalidDelegate();\\n\\n    // Event emitted when a peer (OApp) is set for a corresponding endpoint\\n    event PeerSet(uint32 eid, bytes32 peer);\\n\\n    /**\\n     * @notice Retrieves the OApp version information.\\n     * @return senderVersion The version of the OAppSender.sol contract.\\n     * @return receiverVersion The version of the OAppReceiver.sol contract.\\n     */\\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\\n\\n    /**\\n     * @notice Retrieves the LayerZero endpoint associated with the OApp.\\n     * @return iEndpoint The LayerZero endpoint as an interface.\\n     */\\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\\n\\n    /**\\n     * @notice Retrieves the peer (OApp) associated with a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @return peer The peer address (OApp instance) associated with the corresponding endpoint.\\n     */\\n    function peers(uint32 _eid) external view returns (bytes32 peer);\\n\\n    /**\\n     * @notice Sets the peer address (OApp instance) for a corresponding endpoint.\\n     * @param _eid The endpoint ID.\\n     * @param _peer The address of the peer to be associated with the corresponding endpoint.\\n     */\\n    function setPeer(uint32 _eid, bytes32 _peer) external;\\n\\n    /**\\n     * @notice Sets the delegate address for the OApp Core.\\n     * @param _delegate The address of the delegate to be set.\\n     */\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0x40e49f2de74506e1da5dcaed53a39853f691647f4ceb0fccc8f49a68d3f47c58\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/interfaces/IOAppReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport { ILayerZeroReceiver, Origin } from \\\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\\\";\\n\\ninterface IOAppReceiver is ILayerZeroReceiver {\\n    /**\\n     * @notice Indicates whether an address is an approved composeMsg sender to the Endpoint.\\n     * @param _origin The origin information containing the source endpoint and sender address.\\n     *  - srcEid: The source chain endpoint ID.\\n     *  - sender: The sender address on the src chain.\\n     *  - nonce: The nonce of the message.\\n     * @param _message The lzReceive payload.\\n     * @param _sender The sender address.\\n     * @return isSender Is a valid sender.\\n     *\\n     * @dev Applications can optionally choose to implement a separate composeMsg sender that is NOT the bridging layer.\\n     * @dev The default sender IS the OAppReceiver implementer.\\n     */\\n    function isComposeMsgSender(\\n        Origin calldata _origin,\\n        bytes calldata _message,\\n        address _sender\\n    ) external view returns (bool isSender);\\n}\\n\",\"keccak256\":\"0xd26135185e19b3732746d4a9e2923e896f28dec8664bab161faea2ee26fcdc3d\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroEndpointV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { IMessageLibManager } from \\\"./IMessageLibManager.sol\\\";\\nimport { IMessagingComposer } from \\\"./IMessagingComposer.sol\\\";\\nimport { IMessagingChannel } from \\\"./IMessagingChannel.sol\\\";\\nimport { IMessagingContext } from \\\"./IMessagingContext.sol\\\";\\n\\nstruct MessagingParams {\\n    uint32 dstEid;\\n    bytes32 receiver;\\n    bytes message;\\n    bytes options;\\n    bool payInLzToken;\\n}\\n\\nstruct MessagingReceipt {\\n    bytes32 guid;\\n    uint64 nonce;\\n    MessagingFee fee;\\n}\\n\\nstruct MessagingFee {\\n    uint256 nativeFee;\\n    uint256 lzTokenFee;\\n}\\n\\nstruct Origin {\\n    uint32 srcEid;\\n    bytes32 sender;\\n    uint64 nonce;\\n}\\n\\ninterface ILayerZeroEndpointV2 is IMessageLibManager, IMessagingComposer, IMessagingChannel, IMessagingContext {\\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\\n\\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\\n\\n    event PacketDelivered(Origin origin, address receiver);\\n\\n    event LzReceiveAlert(\\n        address indexed receiver,\\n        address indexed executor,\\n        Origin origin,\\n        bytes32 guid,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    event LzTokenSet(address token);\\n\\n    event DelegateSet(address sender, address delegate);\\n\\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\\n\\n    function send(\\n        MessagingParams calldata _params,\\n        address _refundAddress\\n    ) external payable returns (MessagingReceipt memory);\\n\\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\\n\\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        address _receiver,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n\\n    // oapp can burn messages partially by calling this function with its own business logic if messages are verified in order\\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\\n\\n    function setLzToken(address _lzToken) external;\\n\\n    function lzToken() external view returns (address);\\n\\n    function nativeToken() external view returns (address);\\n\\n    function setDelegate(address _delegate) external;\\n}\\n\",\"keccak256\":\"0xf7f941bee89ea6369950fe54e8ac476ae6478b958b20fc0e8a83e8ff1364eac3\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/ILayerZeroReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport { Origin } from \\\"./ILayerZeroEndpointV2.sol\\\";\\n\\ninterface ILayerZeroReceiver {\\n    function allowInitializePath(Origin calldata _origin) external view returns (bool);\\n\\n    function nextNonce(uint32 _eid, bytes32 _sender) external view returns (uint64);\\n\\n    function lzReceive(\\n        Origin calldata _origin,\\n        bytes32 _guid,\\n        bytes calldata _message,\\n        address _executor,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9641abba8d53b08bb517d1b74801dd15ea7b84d77a6719085bd96c8ea94e3ca0\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessageLibManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nstruct SetConfigParam {\\n    uint32 eid;\\n    uint32 configType;\\n    bytes config;\\n}\\n\\ninterface IMessageLibManager {\\n    struct Timeout {\\n        address lib;\\n        uint256 expiry;\\n    }\\n\\n    event LibraryRegistered(address newLib);\\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\\n\\n    function registerLibrary(address _lib) external;\\n\\n    function isRegisteredLibrary(address _lib) external view returns (bool);\\n\\n    function getRegisteredLibraries() external view returns (address[] memory);\\n\\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\\n\\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\\n\\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function isSupportedEid(uint32 _eid) external view returns (bool);\\n\\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\\n\\n    /// ------------------- OApp interfaces -------------------\\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\\n\\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\\n\\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\\n\\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\\n\\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\\n\\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\\n\\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\\n\\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\\n\\n    function getConfig(\\n        address _oapp,\\n        address _lib,\\n        uint32 _eid,\\n        uint32 _configType\\n    ) external view returns (bytes memory config);\\n}\\n\",\"keccak256\":\"0x919b37133adff4dc528e3061deb2789c3149971b530c61e556fb3d09ab315dfc\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingChannel.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingChannel {\\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\\n\\n    function eid() external view returns (uint32);\\n\\n    // this is an emergency function if a message cannot be verified for some reasons\\n    // required to provide _nextNonce to avoid race condition\\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\\n\\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\\n\\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\\n\\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n\\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\\n\\n    function inboundPayloadHash(\\n        address _receiver,\\n        uint32 _srcEid,\\n        bytes32 _sender,\\n        uint64 _nonce\\n    ) external view returns (bytes32);\\n\\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\\n}\\n\",\"keccak256\":\"0x0878f64dffebf58c4165569416372f40860fab546b88cd926eba0d5cb6d8d972\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingComposer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingComposer {\\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\\n    event LzComposeAlert(\\n        address indexed from,\\n        address indexed to,\\n        address indexed executor,\\n        bytes32 guid,\\n        uint16 index,\\n        uint256 gas,\\n        uint256 value,\\n        bytes message,\\n        bytes extraData,\\n        bytes reason\\n    );\\n\\n    function composeQueue(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index\\n    ) external view returns (bytes32 messageHash);\\n\\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\\n\\n    function lzCompose(\\n        address _from,\\n        address _to,\\n        bytes32 _guid,\\n        uint16 _index,\\n        bytes calldata _message,\\n        bytes calldata _extraData\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x85bc7090134529ec474866dc4bb1c48692d518c756eb0a961c82574829c51901\",\"license\":\"MIT\"},\"@layerzerolabs/lz-evm-protocol-v2/contracts/interfaces/IMessagingContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\ninterface IMessagingContext {\\n    function isSendingMessage() external view returns (bool);\\n\\n    function getSendContext() external view returns (uint32 dstEid, address sender);\\n}\\n\",\"keccak256\":\"0xff0c546c2813dae3e440882f46b377375f7461b0714efd80bd3f0c6e5cb8da4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/MyOApp.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.22;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { OApp, MessagingFee, Origin } from \\\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OApp.sol\\\";\\nimport { MessagingReceipt } from \\\"@layerzerolabs/lz-evm-oapp-v2/contracts/oapp/OAppSender.sol\\\";\\n\\ncontract MyOApp is OApp {\\n    constructor(address _endpoint, address _delegate) OApp(_endpoint, _delegate) Ownable(_delegate) {}\\n\\n    string public data = \\\"Nothing received yet.\\\";\\n\\n    /**\\n     * @notice Sends a message from the source chain to a destination chain.\\n     * @param _dstEid The endpoint ID of the destination chain.\\n     * @param _message The message string to be sent.\\n     * @param _options Additional options for message execution.\\n     * @dev Encodes the message as bytes and sends it using the `_lzSend` internal function.\\n     * @return receipt A `MessagingReceipt` struct containing details of the message sent.\\n     */\\n    function send(\\n        uint32 _dstEid,\\n        string memory _message,\\n        bytes calldata _options\\n    ) external payable returns (MessagingReceipt memory receipt) {\\n        bytes memory _payload = abi.encode(_message);\\n        receipt = _lzSend(_dstEid, _payload, _options, MessagingFee(msg.value, 0), payable(msg.sender));\\n    }\\n\\n    /**\\n     * @notice Quotes the gas needed to pay for the full omnichain transaction in native gas or ZRO token.\\n     * @param _dstEid Destination chain's endpoint ID.\\n     * @param _message The message.\\n     * @param _options Message execution options (e.g., for sending gas to destination).\\n     * @param _payInLzToken Whether to return fee in ZRO token.\\n     * @return fee A `MessagingFee` struct containing the calculated gas fee in either the native token or ZRO token.\\n     */\\n    function quote(\\n        uint32 _dstEid,\\n        string memory _message,\\n        bytes memory _options,\\n        bool _payInLzToken\\n    ) public view returns (MessagingFee memory fee) {\\n        bytes memory payload = abi.encode(_message);\\n        fee = _quote(_dstEid, payload, _options, _payInLzToken);\\n    }\\n\\n    /**\\n     * @dev Internal function override to handle incoming messages from another chain.\\n     * @dev _origin A struct containing information about the message sender.\\n     * @dev _guid A unique global packet identifier for the message.\\n     * @param payload The encoded message payload being received.\\n     *\\n     * @dev The following params are unused in the current implementation of the OApp.\\n     * @dev _executor The address of the Executor responsible for processing the message.\\n     * @dev _extraData Arbitrary data appended by the Executor to the message.\\n     *\\n     * Decodes the received payload and processes it as per the business logic defined in the function.\\n     */\\n    function _lzReceive(\\n        Origin calldata /*_origin*/,\\n        bytes32 /*_guid*/,\\n        bytes calldata payload,\\n        address /*_executor*/,\\n        bytes calldata /*_extraData*/\\n    ) internal override {\\n        data = abi.decode(payload, (string));\\n    }\\n}\\n\",\"keccak256\":\"0xc62ecfb8d23e3c821914ae5cd25231f7063a5257e4aceb5c8305a7c4f9598b1e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1327,"contract":"contracts/MyOApp.sol:MyOApp","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":64,"contract":"contracts/MyOApp.sol:MyOApp","label":"peers","offset":0,"slot":"1","type":"t_mapping(t_uint32,t_bytes32)"},{"astId":4019,"contract":"contracts/MyOApp.sol:MyOApp","label":"data","offset":0,"slot":"2","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_uint32,t_bytes32)":{"encoding":"mapping","key":"t_uint32","label":"mapping(uint32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"allowInitializePath((uint32,bytes32,uint64))":{"notice":"Checks if the path initialization is allowed based on the provided origin."},"endpoint()":{"notice":"Retrieves the LayerZero endpoint associated with the OApp."},"isComposeMsgSender((uint32,bytes32,uint64),bytes,address)":{"notice":"Indicates whether an address is an approved composeMsg sender to the Endpoint."},"nextNonce(uint32,bytes32)":{"notice":"Retrieves the next nonce for a given source endpoint and sender address."},"oAppVersion()":{"notice":"Retrieves the OApp version information."},"peers(uint32)":{"notice":"Retrieves the peer (OApp) associated with a corresponding endpoint."},"quote(uint32,string,bytes,bool)":{"notice":"Quotes the gas needed to pay for the full omnichain transaction in native gas or ZRO token."},"send(uint32,string,bytes)":{"notice":"Sends a message from the source chain to a destination chain."},"setDelegate(address)":{"notice":"Sets the delegate address for the OApp."},"setPeer(uint32,bytes32)":{"notice":"Sets the peer address (OApp instance) for a corresponding endpoint."}},"version":1}}},"contracts/SettlementContract.sol":{"SettlementContract":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"components":[{"internalType":"address","name":"settlementContract","type":"address"},{"internalType":"address","name":"swapper","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"originChainId","type":"uint32"},{"internalType":"uint32","name":"initiateDeadline","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"bytes","name":"orderData","type":"bytes"}],"internalType":"struct CrossChainOrder","name":"order","type":"tuple"}],"name":"computeHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"settlementContract","type":"address"},{"internalType":"address","name":"swapper","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"originChainId","type":"uint32"},{"internalType":"uint32","name":"initiateDeadline","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"bytes","name":"orderData","type":"bytes"}],"internalType":"struct CrossChainOrder","name":"order","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"fillerData","type":"bytes"}],"name":"initiate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"nonceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"settlementContract","type":"address"},{"internalType":"address","name":"swapper","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"originChainId","type":"uint32"},{"internalType":"uint32","name":"initiateDeadline","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"bytes","name":"orderData","type":"bytes"}],"internalType":"struct CrossChainOrder","name":"order","type":"tuple"},{"internalType":"bytes","name":"fillerData","type":"bytes"}],"name":"resolve","outputs":[{"components":[{"internalType":"address","name":"settlementContract","type":"address"},{"internalType":"address","name":"swapper","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"originChainId","type":"uint32"},{"internalType":"uint32","name":"initiateDeadline","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Input[]","name":"swapperInputs","type":"tuple[]"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint32","name":"chainId","type":"uint32"}],"internalType":"struct Output[]","name":"swapperOutputs","type":"tuple[]"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint32","name":"chainId","type":"uint32"}],"internalType":"struct Output[]","name":"fillerOutputs","type":"tuple[]"}],"internalType":"struct ResolvedCrossChainOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"settlementContract","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"}],"name":"whitelistSettlementContract","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1369":{"entryPoint":null,"id":1369,"parameterSlots":1,"returnSlots":0},"@_4153":{"entryPoint":null,"id":4153,"parameterSlots":0,"returnSlots":0},"@_msgSender_2135":{"entryPoint":null,"id":2135,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1465":{"entryPoint":70,"id":1465,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:219:26","nodeType":"YulBlock","src":"0:219:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"115:102:26","nodeType":"YulBlock","src":"115:102:26","statements":[{"nativeSrc":"125:26:26","nodeType":"YulAssignment","src":"125:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:26","nodeType":"YulIdentifier","src":"137:9:26"},{"kind":"number","nativeSrc":"148:2:26","nodeType":"YulLiteral","src":"148:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:26","nodeType":"YulIdentifier","src":"133:3:26"},"nativeSrc":"133:18:26","nodeType":"YulFunctionCall","src":"133:18:26"},"variableNames":[{"name":"tail","nativeSrc":"125:4:26","nodeType":"YulIdentifier","src":"125:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:26","nodeType":"YulIdentifier","src":"167:9:26"},{"arguments":[{"name":"value0","nativeSrc":"182:6:26","nodeType":"YulIdentifier","src":"182:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"198:3:26","nodeType":"YulLiteral","src":"198:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"203:1:26","nodeType":"YulLiteral","src":"203:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"194:3:26","nodeType":"YulIdentifier","src":"194:3:26"},"nativeSrc":"194:11:26","nodeType":"YulFunctionCall","src":"194:11:26"},{"kind":"number","nativeSrc":"207:1:26","nodeType":"YulLiteral","src":"207:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"190:3:26","nodeType":"YulIdentifier","src":"190:3:26"},"nativeSrc":"190:19:26","nodeType":"YulFunctionCall","src":"190:19:26"}],"functionName":{"name":"and","nativeSrc":"178:3:26","nodeType":"YulIdentifier","src":"178:3:26"},"nativeSrc":"178:32:26","nodeType":"YulFunctionCall","src":"178:32:26"}],"functionName":{"name":"mstore","nativeSrc":"160:6:26","nodeType":"YulIdentifier","src":"160:6:26"},"nativeSrc":"160:51:26","nodeType":"YulFunctionCall","src":"160:51:26"},"nativeSrc":"160:51:26","nodeType":"YulExpressionStatement","src":"160:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"14:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:26","nodeType":"YulTypedName","src":"84:9:26","type":""},{"name":"value0","nativeSrc":"95:6:26","nodeType":"YulTypedName","src":"95:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:26","nodeType":"YulTypedName","src":"106:4:26","type":""}],"src":"14:203:26"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61092b806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806397b2b09f1161005b57806397b2b09f146100ed578063bf6d01d314610100578063ed2a2d6414610120578063f2fde38b1461014957600080fd5b806344b438a71461008d578063715018a6146100b35780638da5cb5b146100bd578063962fc2a3146100d8575b600080fd5b6100a061009b366004610344565b61015c565b6040519081526020015b60405180910390f35b6100bb610175565b005b6000546040516001600160a01b0390911681526020016100aa565b6100bb6100e63660046103ca565b5050505050565b6100bb6100fb36600461047b565b610189565b61011361010e3660046104a5565b6101c2565b6040516100aa91906105c3565b6100a061012e3660046106a2565b6001600160a01b031660009081526004602052604090205490565b6100bb6101573660046106a2565b61023c565b600061016f61016a8361079d565b61027f565b92915050565b61017d6102af565b61018760006102dc565b565b6101916102af565b6001600160a01b039091166000908152600160208181526040808420805460ff191690931790925560029052902055565b61023560405180610120016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016060815260200160608152602001606081525090565b9392505050565b6102446102af565b6001600160a01b03811661027357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61027c816102dc565b50565b6000816040516020016102929190610842565b604051602081830303815290604052805190602001209050919050565b6000546001600160a01b031633146101875760405163118cdaa760e01b815233600482015260240161026a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060e0828403121561033e57600080fd5b50919050565b60006020828403121561035657600080fd5b813567ffffffffffffffff81111561036d57600080fd5b6103798482850161032c565b949350505050565b60008083601f84011261039357600080fd5b50813567ffffffffffffffff8111156103ab57600080fd5b6020830191508360208285010111156103c357600080fd5b9250929050565b6000806000806000606086880312156103e257600080fd5b853567ffffffffffffffff808211156103fa57600080fd5b61040689838a0161032c565b9650602088013591508082111561041c57600080fd5b61042889838a01610381565b9096509450604088013591508082111561044157600080fd5b5061044e88828901610381565b969995985093965092949392505050565b80356001600160a01b038116811461047657600080fd5b919050565b6000806040838503121561048e57600080fd5b6104978361045f565b946020939093013593505050565b6000806000604084860312156104ba57600080fd5b833567ffffffffffffffff808211156104d257600080fd5b6104de8783880161032c565b945060208601359150808211156104f457600080fd5b5061050186828701610381565b9497909650939450505050565b60008151808452602080850194506020840160005b8381101561055357815180516001600160a01b031688528301518388015260409096019590820190600101610523565b509495945050505050565b60008151808452602080850194506020840160005b8381101561055357815180516001600160a01b03908116895284820151858a01526040808301519091169089015260609081015163ffffffff169088015260809096019590820190600101610573565b602081526105dd6020820183516001600160a01b03169052565b600060208301516105f960408401826001600160a01b03169052565b5060408301516060830152606083015161061b608084018263ffffffff169052565b50608083015163ffffffff811660a08401525060a083015163ffffffff811660c08401525060c08301516101208060e085015261065c61014085018361050e565b915060e0850151601f1961010081878603018188015261067c858461055e565b908801518782039092018488015293509050610698838261055e565b9695505050505050565b6000602082840312156106b457600080fd5b6102358261045f565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156106f6576106f66106bd565b60405290565b803563ffffffff8116811461047657600080fd5b600082601f83011261072157600080fd5b813567ffffffffffffffff8082111561073c5761073c6106bd565b604051601f8301601f19908116603f01168101908282118183101715610764576107646106bd565b8160405283815286602085880101111561077d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060e082360312156107af57600080fd5b6107b76106d3565b6107c08361045f565b81526107ce6020840161045f565b6020820152604083013560408201526107e9606084016106fc565b60608201526107fa608084016106fc565b608082015261080b60a084016106fc565b60a082015260c083013567ffffffffffffffff81111561082a57600080fd5b61083636828601610710565b60c08301525092915050565b6000602080835260018060a01b038085511660208501528060208601511660408501525060408401516060840152606084015163ffffffff80821660808601528060808701511660a08601528060a08701511660c0860152505060c084015160e08085015280518061010086015260005b818110156108d057828101840151868201610120015283016108b3565b506101209250600083828701015282601f19601f83011686010193505050509291505056fea2646970667358221220aadd3233edf3b820b96df9fea60b8912b271ed340f70967028aa023724d23c8864736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40 DUP2 PUSH2 0x46 JUMP JUMPDEST POP PUSH2 0x96 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x92B DUP1 PUSH2 0xA5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97B2B09F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x97B2B09F EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF6D01D3 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xED2A2D64 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44B438A7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x962FC2A3 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x344 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0xBB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBB PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F PUSH2 0x16A DUP4 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x27F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x187 PUSH1 0x0 PUSH2 0x2DC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x191 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 SWAP1 MSTORE SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x235 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27C DUP2 PUSH2 0x2DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x26A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x379 DUP5 DUP3 DUP6 ADD PUSH2 0x32C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x406 DUP10 DUP4 DUP11 ADD PUSH2 0x32C JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x428 DUP10 DUP4 DUP11 ADD PUSH2 0x381 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E DUP9 DUP3 DUP10 ADD PUSH2 0x381 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x497 DUP4 PUSH2 0x45F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4DE DUP8 DUP4 DUP9 ADD PUSH2 0x32C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x501 DUP7 DUP3 DUP8 ADD PUSH2 0x381 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x553 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP4 ADD MLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x40 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x523 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x553 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP10 MSTORE DUP5 DUP3 ADD MLOAD DUP6 DUP11 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP10 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x573 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH2 0x5DD PUSH1 0x20 DUP3 ADD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x5F9 PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x61B PUSH1 0x80 DUP5 ADD DUP3 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xC0 DUP5 ADD MSTORE POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x120 DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x65C PUSH2 0x140 DUP6 ADD DUP4 PUSH2 0x50E JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x1F NOT PUSH2 0x100 DUP2 DUP8 DUP7 SUB ADD DUP2 DUP9 ADD MSTORE PUSH2 0x67C DUP6 DUP5 PUSH2 0x55E JUMP JUMPDEST SWAP1 DUP9 ADD MLOAD DUP8 DUP3 SUB SWAP1 SWAP3 ADD DUP5 DUP9 ADD MSTORE SWAP4 POP SWAP1 POP PUSH2 0x698 DUP4 DUP3 PUSH2 0x55E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x235 DUP3 PUSH2 0x45F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x6F6 JUMPI PUSH2 0x6F6 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x764 JUMPI PUSH2 0x764 PUSH2 0x6BD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B7 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x7C0 DUP4 PUSH2 0x45F JUMP JUMPDEST DUP2 MSTORE PUSH2 0x7CE PUSH1 0x20 DUP5 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7E9 PUSH1 0x60 DUP5 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x7FA PUSH1 0x80 DUP5 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x80B PUSH1 0xA0 DUP5 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x836 CALLDATASIZE DUP3 DUP7 ADD PUSH2 0x710 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP6 MLOAD AND PUSH1 0x20 DUP6 ADD MSTORE DUP1 PUSH1 0x20 DUP7 ADD MLOAD AND PUSH1 0x40 DUP6 ADD MSTORE POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x80 DUP7 ADD MSTORE DUP1 PUSH1 0x80 DUP8 ADD MLOAD AND PUSH1 0xA0 DUP7 ADD MSTORE DUP1 PUSH1 0xA0 DUP8 ADD MLOAD AND PUSH1 0xC0 DUP7 ADD MSTORE POP POP PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0xE0 DUP1 DUP6 ADD MSTORE DUP1 MLOAD DUP1 PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8D0 JUMPI DUP3 DUP2 ADD DUP5 ADD MLOAD DUP7 DUP3 ADD PUSH2 0x120 ADD MSTORE DUP4 ADD PUSH2 0x8B3 JUMP JUMPDEST POP PUSH2 0x120 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP8 ADD ADD MSTORE DUP3 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xDD ORIGIN CALLER 0xED RETURN 0xB8 KECCAK256 0xB9 PUSH14 0xF9FEA60B8912B271ED340F709670 0x28 0xAA MUL CALLDATACOPY 0x24 0xD2 EXTCODECOPY DUP9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"473:1766:24:-:0;;;667:38;;;;;;;;;-1:-1:-1;735:10:17;;1269:95:12;;1322:31;;-1:-1:-1;;;1322:31:12;;1350:1;1322:31;;;160:51:26;133:18;;1322:31:12;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;473:1766:24;;2912:187:12;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:12;;;-1:-1:-1;;;;;;3020:17:12;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:26:-;473:1766:24;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_1403":{"entryPoint":687,"id":1403,"parameterSlots":0,"returnSlots":0},"@_hashOrder_4183":{"entryPoint":639,"id":4183,"parameterSlots":1,"returnSlots":1},"@_msgSender_2135":{"entryPoint":null,"id":2135,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1465":{"entryPoint":732,"id":1465,"parameterSlots":1,"returnSlots":0},"@computeHash_4167":{"entryPoint":348,"id":4167,"parameterSlots":1,"returnSlots":1},"@initiate_4258":{"entryPoint":null,"id":4258,"parameterSlots":5,"returnSlots":0},"@nonceOf_4270":{"entryPoint":null,"id":4270,"parameterSlots":1,"returnSlots":1},"@owner_1386":{"entryPoint":null,"id":1386,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_1417":{"entryPoint":373,"id":1417,"parameterSlots":0,"returnSlots":0},"@resolve_4283":{"entryPoint":450,"id":4283,"parameterSlots":3,"returnSlots":1},"@transferOwnership_1445":{"entryPoint":572,"id":1445,"parameterSlots":1,"returnSlots":0},"@whitelistSettlementContract_4237":{"entryPoint":393,"id":4237,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":1119,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1808,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":897,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_struct_CrossChainOrder_calldata":{"entryPoint":812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_CrossChainOrder_$4309_calldata_ptr":{"entryPoint":836,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_CrossChainOrder_$4309_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_CrossChainOrder_$4309_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":970,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_uint32":{"entryPoint":1788,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_struct_Input_dyn":{"entryPoint":1294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_struct_Output_dyn":{"entryPoint":1374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_CrossChainOrder_$4309_memory_ptr__to_t_struct$_CrossChainOrder_$4309_memory_ptr__fromStack_reversed":{"entryPoint":2114,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_ResolvedCrossChainOrder_$4344_memory_ptr__to_t_struct$_ResolvedCrossChainOrder_$4344_memory_ptr__fromStack_reversed":{"entryPoint":1475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":1747,"id":null,"parameterSlots":0,"returnSlots":1},"convert_t_struct$_CrossChainOrder_$4309_calldata_ptr_to_t_struct$_CrossChainOrder_$4309_memory_ptr":{"entryPoint":1949,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":1725,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:10162:26","nodeType":"YulBlock","src":"0:10162:26","statements":[{"nativeSrc":"6:3:26","nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nativeSrc":"92:86:26","nodeType":"YulBlock","src":"92:86:26","statements":[{"body":{"nativeSrc":"132:16:26","nodeType":"YulBlock","src":"132:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"141:1:26","nodeType":"YulLiteral","src":"141:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"144:1:26","nodeType":"YulLiteral","src":"144:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"134:6:26","nodeType":"YulIdentifier","src":"134:6:26"},"nativeSrc":"134:12:26","nodeType":"YulFunctionCall","src":"134:12:26"},"nativeSrc":"134:12:26","nodeType":"YulExpressionStatement","src":"134:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"113:3:26","nodeType":"YulIdentifier","src":"113:3:26"},{"name":"offset","nativeSrc":"118:6:26","nodeType":"YulIdentifier","src":"118:6:26"}],"functionName":{"name":"sub","nativeSrc":"109:3:26","nodeType":"YulIdentifier","src":"109:3:26"},"nativeSrc":"109:16:26","nodeType":"YulFunctionCall","src":"109:16:26"},{"kind":"number","nativeSrc":"127:3:26","nodeType":"YulLiteral","src":"127:3:26","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"105:3:26","nodeType":"YulIdentifier","src":"105:3:26"},"nativeSrc":"105:26:26","nodeType":"YulFunctionCall","src":"105:26:26"},"nativeSrc":"102:46:26","nodeType":"YulIf","src":"102:46:26"},{"nativeSrc":"157:15:26","nodeType":"YulAssignment","src":"157:15:26","value":{"name":"offset","nativeSrc":"166:6:26","nodeType":"YulIdentifier","src":"166:6:26"},"variableNames":[{"name":"value","nativeSrc":"157:5:26","nodeType":"YulIdentifier","src":"157:5:26"}]}]},"name":"abi_decode_struct_CrossChainOrder_calldata","nativeSrc":"14:164:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"66:6:26","nodeType":"YulTypedName","src":"66:6:26","type":""},{"name":"end","nativeSrc":"74:3:26","nodeType":"YulTypedName","src":"74:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"82:5:26","nodeType":"YulTypedName","src":"82:5:26","type":""}],"src":"14:164:26"},{"body":{"nativeSrc":"288:267:26","nodeType":"YulBlock","src":"288:267:26","statements":[{"body":{"nativeSrc":"334:16:26","nodeType":"YulBlock","src":"334:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:26","nodeType":"YulLiteral","src":"343:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"346:1:26","nodeType":"YulLiteral","src":"346:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"336:6:26","nodeType":"YulIdentifier","src":"336:6:26"},"nativeSrc":"336:12:26","nodeType":"YulFunctionCall","src":"336:12:26"},"nativeSrc":"336:12:26","nodeType":"YulExpressionStatement","src":"336:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"309:7:26","nodeType":"YulIdentifier","src":"309:7:26"},{"name":"headStart","nativeSrc":"318:9:26","nodeType":"YulIdentifier","src":"318:9:26"}],"functionName":{"name":"sub","nativeSrc":"305:3:26","nodeType":"YulIdentifier","src":"305:3:26"},"nativeSrc":"305:23:26","nodeType":"YulFunctionCall","src":"305:23:26"},{"kind":"number","nativeSrc":"330:2:26","nodeType":"YulLiteral","src":"330:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"301:3:26","nodeType":"YulIdentifier","src":"301:3:26"},"nativeSrc":"301:32:26","nodeType":"YulFunctionCall","src":"301:32:26"},"nativeSrc":"298:52:26","nodeType":"YulIf","src":"298:52:26"},{"nativeSrc":"359:37:26","nodeType":"YulVariableDeclaration","src":"359:37:26","value":{"arguments":[{"name":"headStart","nativeSrc":"386:9:26","nodeType":"YulIdentifier","src":"386:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"373:12:26","nodeType":"YulIdentifier","src":"373:12:26"},"nativeSrc":"373:23:26","nodeType":"YulFunctionCall","src":"373:23:26"},"variables":[{"name":"offset","nativeSrc":"363:6:26","nodeType":"YulTypedName","src":"363:6:26","type":""}]},{"body":{"nativeSrc":"439:16:26","nodeType":"YulBlock","src":"439:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"448:1:26","nodeType":"YulLiteral","src":"448:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"451:1:26","nodeType":"YulLiteral","src":"451:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"441:6:26","nodeType":"YulIdentifier","src":"441:6:26"},"nativeSrc":"441:12:26","nodeType":"YulFunctionCall","src":"441:12:26"},"nativeSrc":"441:12:26","nodeType":"YulExpressionStatement","src":"441:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"411:6:26","nodeType":"YulIdentifier","src":"411:6:26"},{"kind":"number","nativeSrc":"419:18:26","nodeType":"YulLiteral","src":"419:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"408:2:26","nodeType":"YulIdentifier","src":"408:2:26"},"nativeSrc":"408:30:26","nodeType":"YulFunctionCall","src":"408:30:26"},"nativeSrc":"405:50:26","nodeType":"YulIf","src":"405:50:26"},{"nativeSrc":"464:85:26","nodeType":"YulAssignment","src":"464:85:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"521:9:26","nodeType":"YulIdentifier","src":"521:9:26"},{"name":"offset","nativeSrc":"532:6:26","nodeType":"YulIdentifier","src":"532:6:26"}],"functionName":{"name":"add","nativeSrc":"517:3:26","nodeType":"YulIdentifier","src":"517:3:26"},"nativeSrc":"517:22:26","nodeType":"YulFunctionCall","src":"517:22:26"},{"name":"dataEnd","nativeSrc":"541:7:26","nodeType":"YulIdentifier","src":"541:7:26"}],"functionName":{"name":"abi_decode_struct_CrossChainOrder_calldata","nativeSrc":"474:42:26","nodeType":"YulIdentifier","src":"474:42:26"},"nativeSrc":"474:75:26","nodeType":"YulFunctionCall","src":"474:75:26"},"variableNames":[{"name":"value0","nativeSrc":"464:6:26","nodeType":"YulIdentifier","src":"464:6:26"}]}]},"name":"abi_decode_tuple_t_struct$_CrossChainOrder_$4309_calldata_ptr","nativeSrc":"183:372:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"254:9:26","nodeType":"YulTypedName","src":"254:9:26","type":""},{"name":"dataEnd","nativeSrc":"265:7:26","nodeType":"YulTypedName","src":"265:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"277:6:26","nodeType":"YulTypedName","src":"277:6:26","type":""}],"src":"183:372:26"},{"body":{"nativeSrc":"661:76:26","nodeType":"YulBlock","src":"661:76:26","statements":[{"nativeSrc":"671:26:26","nodeType":"YulAssignment","src":"671:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"683:9:26","nodeType":"YulIdentifier","src":"683:9:26"},{"kind":"number","nativeSrc":"694:2:26","nodeType":"YulLiteral","src":"694:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"679:3:26","nodeType":"YulIdentifier","src":"679:3:26"},"nativeSrc":"679:18:26","nodeType":"YulFunctionCall","src":"679:18:26"},"variableNames":[{"name":"tail","nativeSrc":"671:4:26","nodeType":"YulIdentifier","src":"671:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"713:9:26","nodeType":"YulIdentifier","src":"713:9:26"},{"name":"value0","nativeSrc":"724:6:26","nodeType":"YulIdentifier","src":"724:6:26"}],"functionName":{"name":"mstore","nativeSrc":"706:6:26","nodeType":"YulIdentifier","src":"706:6:26"},"nativeSrc":"706:25:26","nodeType":"YulFunctionCall","src":"706:25:26"},"nativeSrc":"706:25:26","nodeType":"YulExpressionStatement","src":"706:25:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"560:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"630:9:26","nodeType":"YulTypedName","src":"630:9:26","type":""},{"name":"value0","nativeSrc":"641:6:26","nodeType":"YulTypedName","src":"641:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"652:4:26","nodeType":"YulTypedName","src":"652:4:26","type":""}],"src":"560:177:26"},{"body":{"nativeSrc":"786:60:26","nodeType":"YulBlock","src":"786:60:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"803:3:26","nodeType":"YulIdentifier","src":"803:3:26"},{"arguments":[{"name":"value","nativeSrc":"812:5:26","nodeType":"YulIdentifier","src":"812:5:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"827:3:26","nodeType":"YulLiteral","src":"827:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"832:1:26","nodeType":"YulLiteral","src":"832:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"823:3:26","nodeType":"YulIdentifier","src":"823:3:26"},"nativeSrc":"823:11:26","nodeType":"YulFunctionCall","src":"823:11:26"},{"kind":"number","nativeSrc":"836:1:26","nodeType":"YulLiteral","src":"836:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"819:3:26","nodeType":"YulIdentifier","src":"819:3:26"},"nativeSrc":"819:19:26","nodeType":"YulFunctionCall","src":"819:19:26"}],"functionName":{"name":"and","nativeSrc":"808:3:26","nodeType":"YulIdentifier","src":"808:3:26"},"nativeSrc":"808:31:26","nodeType":"YulFunctionCall","src":"808:31:26"}],"functionName":{"name":"mstore","nativeSrc":"796:6:26","nodeType":"YulIdentifier","src":"796:6:26"},"nativeSrc":"796:44:26","nodeType":"YulFunctionCall","src":"796:44:26"},"nativeSrc":"796:44:26","nodeType":"YulExpressionStatement","src":"796:44:26"}]},"name":"abi_encode_address","nativeSrc":"742:104:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"770:5:26","nodeType":"YulTypedName","src":"770:5:26","type":""},{"name":"pos","nativeSrc":"777:3:26","nodeType":"YulTypedName","src":"777:3:26","type":""}],"src":"742:104:26"},{"body":{"nativeSrc":"952:102:26","nodeType":"YulBlock","src":"952:102:26","statements":[{"nativeSrc":"962:26:26","nodeType":"YulAssignment","src":"962:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"974:9:26","nodeType":"YulIdentifier","src":"974:9:26"},{"kind":"number","nativeSrc":"985:2:26","nodeType":"YulLiteral","src":"985:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"970:3:26","nodeType":"YulIdentifier","src":"970:3:26"},"nativeSrc":"970:18:26","nodeType":"YulFunctionCall","src":"970:18:26"},"variableNames":[{"name":"tail","nativeSrc":"962:4:26","nodeType":"YulIdentifier","src":"962:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1004:9:26","nodeType":"YulIdentifier","src":"1004:9:26"},{"arguments":[{"name":"value0","nativeSrc":"1019:6:26","nodeType":"YulIdentifier","src":"1019:6:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1035:3:26","nodeType":"YulLiteral","src":"1035:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"1040:1:26","nodeType":"YulLiteral","src":"1040:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1031:3:26","nodeType":"YulIdentifier","src":"1031:3:26"},"nativeSrc":"1031:11:26","nodeType":"YulFunctionCall","src":"1031:11:26"},{"kind":"number","nativeSrc":"1044:1:26","nodeType":"YulLiteral","src":"1044:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1027:3:26","nodeType":"YulIdentifier","src":"1027:3:26"},"nativeSrc":"1027:19:26","nodeType":"YulFunctionCall","src":"1027:19:26"}],"functionName":{"name":"and","nativeSrc":"1015:3:26","nodeType":"YulIdentifier","src":"1015:3:26"},"nativeSrc":"1015:32:26","nodeType":"YulFunctionCall","src":"1015:32:26"}],"functionName":{"name":"mstore","nativeSrc":"997:6:26","nodeType":"YulIdentifier","src":"997:6:26"},"nativeSrc":"997:51:26","nodeType":"YulFunctionCall","src":"997:51:26"},"nativeSrc":"997:51:26","nodeType":"YulExpressionStatement","src":"997:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"851:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"921:9:26","nodeType":"YulTypedName","src":"921:9:26","type":""},{"name":"value0","nativeSrc":"932:6:26","nodeType":"YulTypedName","src":"932:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"943:4:26","nodeType":"YulTypedName","src":"943:4:26","type":""}],"src":"851:203:26"},{"body":{"nativeSrc":"1131:275:26","nodeType":"YulBlock","src":"1131:275:26","statements":[{"body":{"nativeSrc":"1180:16:26","nodeType":"YulBlock","src":"1180:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1189:1:26","nodeType":"YulLiteral","src":"1189:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1192:1:26","nodeType":"YulLiteral","src":"1192:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1182:6:26","nodeType":"YulIdentifier","src":"1182:6:26"},"nativeSrc":"1182:12:26","nodeType":"YulFunctionCall","src":"1182:12:26"},"nativeSrc":"1182:12:26","nodeType":"YulExpressionStatement","src":"1182:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1159:6:26","nodeType":"YulIdentifier","src":"1159:6:26"},{"kind":"number","nativeSrc":"1167:4:26","nodeType":"YulLiteral","src":"1167:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1155:3:26","nodeType":"YulIdentifier","src":"1155:3:26"},"nativeSrc":"1155:17:26","nodeType":"YulFunctionCall","src":"1155:17:26"},{"name":"end","nativeSrc":"1174:3:26","nodeType":"YulIdentifier","src":"1174:3:26"}],"functionName":{"name":"slt","nativeSrc":"1151:3:26","nodeType":"YulIdentifier","src":"1151:3:26"},"nativeSrc":"1151:27:26","nodeType":"YulFunctionCall","src":"1151:27:26"}],"functionName":{"name":"iszero","nativeSrc":"1144:6:26","nodeType":"YulIdentifier","src":"1144:6:26"},"nativeSrc":"1144:35:26","nodeType":"YulFunctionCall","src":"1144:35:26"},"nativeSrc":"1141:55:26","nodeType":"YulIf","src":"1141:55:26"},{"nativeSrc":"1205:30:26","nodeType":"YulAssignment","src":"1205:30:26","value":{"arguments":[{"name":"offset","nativeSrc":"1228:6:26","nodeType":"YulIdentifier","src":"1228:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"1215:12:26","nodeType":"YulIdentifier","src":"1215:12:26"},"nativeSrc":"1215:20:26","nodeType":"YulFunctionCall","src":"1215:20:26"},"variableNames":[{"name":"length","nativeSrc":"1205:6:26","nodeType":"YulIdentifier","src":"1205:6:26"}]},{"body":{"nativeSrc":"1278:16:26","nodeType":"YulBlock","src":"1278:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1287:1:26","nodeType":"YulLiteral","src":"1287:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1290:1:26","nodeType":"YulLiteral","src":"1290:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1280:6:26","nodeType":"YulIdentifier","src":"1280:6:26"},"nativeSrc":"1280:12:26","nodeType":"YulFunctionCall","src":"1280:12:26"},"nativeSrc":"1280:12:26","nodeType":"YulExpressionStatement","src":"1280:12:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1250:6:26","nodeType":"YulIdentifier","src":"1250:6:26"},{"kind":"number","nativeSrc":"1258:18:26","nodeType":"YulLiteral","src":"1258:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1247:2:26","nodeType":"YulIdentifier","src":"1247:2:26"},"nativeSrc":"1247:30:26","nodeType":"YulFunctionCall","src":"1247:30:26"},"nativeSrc":"1244:50:26","nodeType":"YulIf","src":"1244:50:26"},{"nativeSrc":"1303:29:26","nodeType":"YulAssignment","src":"1303:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"1319:6:26","nodeType":"YulIdentifier","src":"1319:6:26"},{"kind":"number","nativeSrc":"1327:4:26","nodeType":"YulLiteral","src":"1327:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1315:3:26","nodeType":"YulIdentifier","src":"1315:3:26"},"nativeSrc":"1315:17:26","nodeType":"YulFunctionCall","src":"1315:17:26"},"variableNames":[{"name":"arrayPos","nativeSrc":"1303:8:26","nodeType":"YulIdentifier","src":"1303:8:26"}]},{"body":{"nativeSrc":"1384:16:26","nodeType":"YulBlock","src":"1384:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1393:1:26","nodeType":"YulLiteral","src":"1393:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1396:1:26","nodeType":"YulLiteral","src":"1396:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1386:6:26","nodeType":"YulIdentifier","src":"1386:6:26"},"nativeSrc":"1386:12:26","nodeType":"YulFunctionCall","src":"1386:12:26"},"nativeSrc":"1386:12:26","nodeType":"YulExpressionStatement","src":"1386:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1355:6:26","nodeType":"YulIdentifier","src":"1355:6:26"},{"name":"length","nativeSrc":"1363:6:26","nodeType":"YulIdentifier","src":"1363:6:26"}],"functionName":{"name":"add","nativeSrc":"1351:3:26","nodeType":"YulIdentifier","src":"1351:3:26"},"nativeSrc":"1351:19:26","nodeType":"YulFunctionCall","src":"1351:19:26"},{"kind":"number","nativeSrc":"1372:4:26","nodeType":"YulLiteral","src":"1372:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1347:3:26","nodeType":"YulIdentifier","src":"1347:3:26"},"nativeSrc":"1347:30:26","nodeType":"YulFunctionCall","src":"1347:30:26"},{"name":"end","nativeSrc":"1379:3:26","nodeType":"YulIdentifier","src":"1379:3:26"}],"functionName":{"name":"gt","nativeSrc":"1344:2:26","nodeType":"YulIdentifier","src":"1344:2:26"},"nativeSrc":"1344:39:26","nodeType":"YulFunctionCall","src":"1344:39:26"},"nativeSrc":"1341:59:26","nodeType":"YulIf","src":"1341:59:26"}]},"name":"abi_decode_bytes_calldata","nativeSrc":"1059:347:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1094:6:26","nodeType":"YulTypedName","src":"1094:6:26","type":""},{"name":"end","nativeSrc":"1102:3:26","nodeType":"YulTypedName","src":"1102:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"1110:8:26","nodeType":"YulTypedName","src":"1110:8:26","type":""},{"name":"length","nativeSrc":"1120:6:26","nodeType":"YulTypedName","src":"1120:6:26","type":""}],"src":"1059:347:26"},{"body":{"nativeSrc":"1588:790:26","nodeType":"YulBlock","src":"1588:790:26","statements":[{"body":{"nativeSrc":"1634:16:26","nodeType":"YulBlock","src":"1634:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1643:1:26","nodeType":"YulLiteral","src":"1643:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1646:1:26","nodeType":"YulLiteral","src":"1646:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1636:6:26","nodeType":"YulIdentifier","src":"1636:6:26"},"nativeSrc":"1636:12:26","nodeType":"YulFunctionCall","src":"1636:12:26"},"nativeSrc":"1636:12:26","nodeType":"YulExpressionStatement","src":"1636:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1609:7:26","nodeType":"YulIdentifier","src":"1609:7:26"},{"name":"headStart","nativeSrc":"1618:9:26","nodeType":"YulIdentifier","src":"1618:9:26"}],"functionName":{"name":"sub","nativeSrc":"1605:3:26","nodeType":"YulIdentifier","src":"1605:3:26"},"nativeSrc":"1605:23:26","nodeType":"YulFunctionCall","src":"1605:23:26"},{"kind":"number","nativeSrc":"1630:2:26","nodeType":"YulLiteral","src":"1630:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1601:3:26","nodeType":"YulIdentifier","src":"1601:3:26"},"nativeSrc":"1601:32:26","nodeType":"YulFunctionCall","src":"1601:32:26"},"nativeSrc":"1598:52:26","nodeType":"YulIf","src":"1598:52:26"},{"nativeSrc":"1659:37:26","nodeType":"YulVariableDeclaration","src":"1659:37:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1686:9:26","nodeType":"YulIdentifier","src":"1686:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"1673:12:26","nodeType":"YulIdentifier","src":"1673:12:26"},"nativeSrc":"1673:23:26","nodeType":"YulFunctionCall","src":"1673:23:26"},"variables":[{"name":"offset","nativeSrc":"1663:6:26","nodeType":"YulTypedName","src":"1663:6:26","type":""}]},{"nativeSrc":"1705:28:26","nodeType":"YulVariableDeclaration","src":"1705:28:26","value":{"kind":"number","nativeSrc":"1715:18:26","nodeType":"YulLiteral","src":"1715:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1709:2:26","nodeType":"YulTypedName","src":"1709:2:26","type":""}]},{"body":{"nativeSrc":"1760:16:26","nodeType":"YulBlock","src":"1760:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1769:1:26","nodeType":"YulLiteral","src":"1769:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1772:1:26","nodeType":"YulLiteral","src":"1772:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1762:6:26","nodeType":"YulIdentifier","src":"1762:6:26"},"nativeSrc":"1762:12:26","nodeType":"YulFunctionCall","src":"1762:12:26"},"nativeSrc":"1762:12:26","nodeType":"YulExpressionStatement","src":"1762:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1748:6:26","nodeType":"YulIdentifier","src":"1748:6:26"},{"name":"_1","nativeSrc":"1756:2:26","nodeType":"YulIdentifier","src":"1756:2:26"}],"functionName":{"name":"gt","nativeSrc":"1745:2:26","nodeType":"YulIdentifier","src":"1745:2:26"},"nativeSrc":"1745:14:26","nodeType":"YulFunctionCall","src":"1745:14:26"},"nativeSrc":"1742:34:26","nodeType":"YulIf","src":"1742:34:26"},{"nativeSrc":"1785:85:26","nodeType":"YulAssignment","src":"1785:85:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1842:9:26","nodeType":"YulIdentifier","src":"1842:9:26"},{"name":"offset","nativeSrc":"1853:6:26","nodeType":"YulIdentifier","src":"1853:6:26"}],"functionName":{"name":"add","nativeSrc":"1838:3:26","nodeType":"YulIdentifier","src":"1838:3:26"},"nativeSrc":"1838:22:26","nodeType":"YulFunctionCall","src":"1838:22:26"},{"name":"dataEnd","nativeSrc":"1862:7:26","nodeType":"YulIdentifier","src":"1862:7:26"}],"functionName":{"name":"abi_decode_struct_CrossChainOrder_calldata","nativeSrc":"1795:42:26","nodeType":"YulIdentifier","src":"1795:42:26"},"nativeSrc":"1795:75:26","nodeType":"YulFunctionCall","src":"1795:75:26"},"variableNames":[{"name":"value0","nativeSrc":"1785:6:26","nodeType":"YulIdentifier","src":"1785:6:26"}]},{"nativeSrc":"1879:48:26","nodeType":"YulVariableDeclaration","src":"1879:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1912:9:26","nodeType":"YulIdentifier","src":"1912:9:26"},{"kind":"number","nativeSrc":"1923:2:26","nodeType":"YulLiteral","src":"1923:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1908:3:26","nodeType":"YulIdentifier","src":"1908:3:26"},"nativeSrc":"1908:18:26","nodeType":"YulFunctionCall","src":"1908:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"1895:12:26","nodeType":"YulIdentifier","src":"1895:12:26"},"nativeSrc":"1895:32:26","nodeType":"YulFunctionCall","src":"1895:32:26"},"variables":[{"name":"offset_1","nativeSrc":"1883:8:26","nodeType":"YulTypedName","src":"1883:8:26","type":""}]},{"body":{"nativeSrc":"1956:16:26","nodeType":"YulBlock","src":"1956:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1965:1:26","nodeType":"YulLiteral","src":"1965:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1968:1:26","nodeType":"YulLiteral","src":"1968:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1958:6:26","nodeType":"YulIdentifier","src":"1958:6:26"},"nativeSrc":"1958:12:26","nodeType":"YulFunctionCall","src":"1958:12:26"},"nativeSrc":"1958:12:26","nodeType":"YulExpressionStatement","src":"1958:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"1942:8:26","nodeType":"YulIdentifier","src":"1942:8:26"},{"name":"_1","nativeSrc":"1952:2:26","nodeType":"YulIdentifier","src":"1952:2:26"}],"functionName":{"name":"gt","nativeSrc":"1939:2:26","nodeType":"YulIdentifier","src":"1939:2:26"},"nativeSrc":"1939:16:26","nodeType":"YulFunctionCall","src":"1939:16:26"},"nativeSrc":"1936:36:26","nodeType":"YulIf","src":"1936:36:26"},{"nativeSrc":"1981:86:26","nodeType":"YulVariableDeclaration","src":"1981:86:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2037:9:26","nodeType":"YulIdentifier","src":"2037:9:26"},{"name":"offset_1","nativeSrc":"2048:8:26","nodeType":"YulIdentifier","src":"2048:8:26"}],"functionName":{"name":"add","nativeSrc":"2033:3:26","nodeType":"YulIdentifier","src":"2033:3:26"},"nativeSrc":"2033:24:26","nodeType":"YulFunctionCall","src":"2033:24:26"},{"name":"dataEnd","nativeSrc":"2059:7:26","nodeType":"YulIdentifier","src":"2059:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"2007:25:26","nodeType":"YulIdentifier","src":"2007:25:26"},"nativeSrc":"2007:60:26","nodeType":"YulFunctionCall","src":"2007:60:26"},"variables":[{"name":"value1_1","nativeSrc":"1985:8:26","nodeType":"YulTypedName","src":"1985:8:26","type":""},{"name":"value2_1","nativeSrc":"1995:8:26","nodeType":"YulTypedName","src":"1995:8:26","type":""}]},{"nativeSrc":"2076:18:26","nodeType":"YulAssignment","src":"2076:18:26","value":{"name":"value1_1","nativeSrc":"2086:8:26","nodeType":"YulIdentifier","src":"2086:8:26"},"variableNames":[{"name":"value1","nativeSrc":"2076:6:26","nodeType":"YulIdentifier","src":"2076:6:26"}]},{"nativeSrc":"2103:18:26","nodeType":"YulAssignment","src":"2103:18:26","value":{"name":"value2_1","nativeSrc":"2113:8:26","nodeType":"YulIdentifier","src":"2113:8:26"},"variableNames":[{"name":"value2","nativeSrc":"2103:6:26","nodeType":"YulIdentifier","src":"2103:6:26"}]},{"nativeSrc":"2130:48:26","nodeType":"YulVariableDeclaration","src":"2130:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2163:9:26","nodeType":"YulIdentifier","src":"2163:9:26"},{"kind":"number","nativeSrc":"2174:2:26","nodeType":"YulLiteral","src":"2174:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2159:3:26","nodeType":"YulIdentifier","src":"2159:3:26"},"nativeSrc":"2159:18:26","nodeType":"YulFunctionCall","src":"2159:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"2146:12:26","nodeType":"YulIdentifier","src":"2146:12:26"},"nativeSrc":"2146:32:26","nodeType":"YulFunctionCall","src":"2146:32:26"},"variables":[{"name":"offset_2","nativeSrc":"2134:8:26","nodeType":"YulTypedName","src":"2134:8:26","type":""}]},{"body":{"nativeSrc":"2207:16:26","nodeType":"YulBlock","src":"2207:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2216:1:26","nodeType":"YulLiteral","src":"2216:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2219:1:26","nodeType":"YulLiteral","src":"2219:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2209:6:26","nodeType":"YulIdentifier","src":"2209:6:26"},"nativeSrc":"2209:12:26","nodeType":"YulFunctionCall","src":"2209:12:26"},"nativeSrc":"2209:12:26","nodeType":"YulExpressionStatement","src":"2209:12:26"}]},"condition":{"arguments":[{"name":"offset_2","nativeSrc":"2193:8:26","nodeType":"YulIdentifier","src":"2193:8:26"},{"name":"_1","nativeSrc":"2203:2:26","nodeType":"YulIdentifier","src":"2203:2:26"}],"functionName":{"name":"gt","nativeSrc":"2190:2:26","nodeType":"YulIdentifier","src":"2190:2:26"},"nativeSrc":"2190:16:26","nodeType":"YulFunctionCall","src":"2190:16:26"},"nativeSrc":"2187:36:26","nodeType":"YulIf","src":"2187:36:26"},{"nativeSrc":"2232:86:26","nodeType":"YulVariableDeclaration","src":"2232:86:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2288:9:26","nodeType":"YulIdentifier","src":"2288:9:26"},{"name":"offset_2","nativeSrc":"2299:8:26","nodeType":"YulIdentifier","src":"2299:8:26"}],"functionName":{"name":"add","nativeSrc":"2284:3:26","nodeType":"YulIdentifier","src":"2284:3:26"},"nativeSrc":"2284:24:26","nodeType":"YulFunctionCall","src":"2284:24:26"},{"name":"dataEnd","nativeSrc":"2310:7:26","nodeType":"YulIdentifier","src":"2310:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"2258:25:26","nodeType":"YulIdentifier","src":"2258:25:26"},"nativeSrc":"2258:60:26","nodeType":"YulFunctionCall","src":"2258:60:26"},"variables":[{"name":"value3_1","nativeSrc":"2236:8:26","nodeType":"YulTypedName","src":"2236:8:26","type":""},{"name":"value4_1","nativeSrc":"2246:8:26","nodeType":"YulTypedName","src":"2246:8:26","type":""}]},{"nativeSrc":"2327:18:26","nodeType":"YulAssignment","src":"2327:18:26","value":{"name":"value3_1","nativeSrc":"2337:8:26","nodeType":"YulIdentifier","src":"2337:8:26"},"variableNames":[{"name":"value3","nativeSrc":"2327:6:26","nodeType":"YulIdentifier","src":"2327:6:26"}]},{"nativeSrc":"2354:18:26","nodeType":"YulAssignment","src":"2354:18:26","value":{"name":"value4_1","nativeSrc":"2364:8:26","nodeType":"YulIdentifier","src":"2364:8:26"},"variableNames":[{"name":"value4","nativeSrc":"2354:6:26","nodeType":"YulIdentifier","src":"2354:6:26"}]}]},"name":"abi_decode_tuple_t_struct$_CrossChainOrder_$4309_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptr","nativeSrc":"1411:967:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1522:9:26","nodeType":"YulTypedName","src":"1522:9:26","type":""},{"name":"dataEnd","nativeSrc":"1533:7:26","nodeType":"YulTypedName","src":"1533:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1545:6:26","nodeType":"YulTypedName","src":"1545:6:26","type":""},{"name":"value1","nativeSrc":"1553:6:26","nodeType":"YulTypedName","src":"1553:6:26","type":""},{"name":"value2","nativeSrc":"1561:6:26","nodeType":"YulTypedName","src":"1561:6:26","type":""},{"name":"value3","nativeSrc":"1569:6:26","nodeType":"YulTypedName","src":"1569:6:26","type":""},{"name":"value4","nativeSrc":"1577:6:26","nodeType":"YulTypedName","src":"1577:6:26","type":""}],"src":"1411:967:26"},{"body":{"nativeSrc":"2432:124:26","nodeType":"YulBlock","src":"2432:124:26","statements":[{"nativeSrc":"2442:29:26","nodeType":"YulAssignment","src":"2442:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"2464:6:26","nodeType":"YulIdentifier","src":"2464:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"2451:12:26","nodeType":"YulIdentifier","src":"2451:12:26"},"nativeSrc":"2451:20:26","nodeType":"YulFunctionCall","src":"2451:20:26"},"variableNames":[{"name":"value","nativeSrc":"2442:5:26","nodeType":"YulIdentifier","src":"2442:5:26"}]},{"body":{"nativeSrc":"2534:16:26","nodeType":"YulBlock","src":"2534:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2543:1:26","nodeType":"YulLiteral","src":"2543:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2546:1:26","nodeType":"YulLiteral","src":"2546:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2536:6:26","nodeType":"YulIdentifier","src":"2536:6:26"},"nativeSrc":"2536:12:26","nodeType":"YulFunctionCall","src":"2536:12:26"},"nativeSrc":"2536:12:26","nodeType":"YulExpressionStatement","src":"2536:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2493:5:26","nodeType":"YulIdentifier","src":"2493:5:26"},{"arguments":[{"name":"value","nativeSrc":"2504:5:26","nodeType":"YulIdentifier","src":"2504:5:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2519:3:26","nodeType":"YulLiteral","src":"2519:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"2524:1:26","nodeType":"YulLiteral","src":"2524:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2515:3:26","nodeType":"YulIdentifier","src":"2515:3:26"},"nativeSrc":"2515:11:26","nodeType":"YulFunctionCall","src":"2515:11:26"},{"kind":"number","nativeSrc":"2528:1:26","nodeType":"YulLiteral","src":"2528:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2511:3:26","nodeType":"YulIdentifier","src":"2511:3:26"},"nativeSrc":"2511:19:26","nodeType":"YulFunctionCall","src":"2511:19:26"}],"functionName":{"name":"and","nativeSrc":"2500:3:26","nodeType":"YulIdentifier","src":"2500:3:26"},"nativeSrc":"2500:31:26","nodeType":"YulFunctionCall","src":"2500:31:26"}],"functionName":{"name":"eq","nativeSrc":"2490:2:26","nodeType":"YulIdentifier","src":"2490:2:26"},"nativeSrc":"2490:42:26","nodeType":"YulFunctionCall","src":"2490:42:26"}],"functionName":{"name":"iszero","nativeSrc":"2483:6:26","nodeType":"YulIdentifier","src":"2483:6:26"},"nativeSrc":"2483:50:26","nodeType":"YulFunctionCall","src":"2483:50:26"},"nativeSrc":"2480:70:26","nodeType":"YulIf","src":"2480:70:26"}]},"name":"abi_decode_address","nativeSrc":"2383:173:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2411:6:26","nodeType":"YulTypedName","src":"2411:6:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2422:5:26","nodeType":"YulTypedName","src":"2422:5:26","type":""}],"src":"2383:173:26"},{"body":{"nativeSrc":"2648:167:26","nodeType":"YulBlock","src":"2648:167:26","statements":[{"body":{"nativeSrc":"2694:16:26","nodeType":"YulBlock","src":"2694:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2703:1:26","nodeType":"YulLiteral","src":"2703:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2706:1:26","nodeType":"YulLiteral","src":"2706:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2696:6:26","nodeType":"YulIdentifier","src":"2696:6:26"},"nativeSrc":"2696:12:26","nodeType":"YulFunctionCall","src":"2696:12:26"},"nativeSrc":"2696:12:26","nodeType":"YulExpressionStatement","src":"2696:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2669:7:26","nodeType":"YulIdentifier","src":"2669:7:26"},{"name":"headStart","nativeSrc":"2678:9:26","nodeType":"YulIdentifier","src":"2678:9:26"}],"functionName":{"name":"sub","nativeSrc":"2665:3:26","nodeType":"YulIdentifier","src":"2665:3:26"},"nativeSrc":"2665:23:26","nodeType":"YulFunctionCall","src":"2665:23:26"},{"kind":"number","nativeSrc":"2690:2:26","nodeType":"YulLiteral","src":"2690:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2661:3:26","nodeType":"YulIdentifier","src":"2661:3:26"},"nativeSrc":"2661:32:26","nodeType":"YulFunctionCall","src":"2661:32:26"},"nativeSrc":"2658:52:26","nodeType":"YulIf","src":"2658:52:26"},{"nativeSrc":"2719:39:26","nodeType":"YulAssignment","src":"2719:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2748:9:26","nodeType":"YulIdentifier","src":"2748:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2729:18:26","nodeType":"YulIdentifier","src":"2729:18:26"},"nativeSrc":"2729:29:26","nodeType":"YulFunctionCall","src":"2729:29:26"},"variableNames":[{"name":"value0","nativeSrc":"2719:6:26","nodeType":"YulIdentifier","src":"2719:6:26"}]},{"nativeSrc":"2767:42:26","nodeType":"YulAssignment","src":"2767:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2794:9:26","nodeType":"YulIdentifier","src":"2794:9:26"},{"kind":"number","nativeSrc":"2805:2:26","nodeType":"YulLiteral","src":"2805:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2790:3:26","nodeType":"YulIdentifier","src":"2790:3:26"},"nativeSrc":"2790:18:26","nodeType":"YulFunctionCall","src":"2790:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"2777:12:26","nodeType":"YulIdentifier","src":"2777:12:26"},"nativeSrc":"2777:32:26","nodeType":"YulFunctionCall","src":"2777:32:26"},"variableNames":[{"name":"value1","nativeSrc":"2767:6:26","nodeType":"YulIdentifier","src":"2767:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2561:254:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2606:9:26","nodeType":"YulTypedName","src":"2606:9:26","type":""},{"name":"dataEnd","nativeSrc":"2617:7:26","nodeType":"YulTypedName","src":"2617:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2629:6:26","nodeType":"YulTypedName","src":"2629:6:26","type":""},{"name":"value1","nativeSrc":"2637:6:26","nodeType":"YulTypedName","src":"2637:6:26","type":""}],"src":"2561:254:26"},{"body":{"nativeSrc":"2961:539:26","nodeType":"YulBlock","src":"2961:539:26","statements":[{"body":{"nativeSrc":"3007:16:26","nodeType":"YulBlock","src":"3007:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3016:1:26","nodeType":"YulLiteral","src":"3016:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3019:1:26","nodeType":"YulLiteral","src":"3019:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3009:6:26","nodeType":"YulIdentifier","src":"3009:6:26"},"nativeSrc":"3009:12:26","nodeType":"YulFunctionCall","src":"3009:12:26"},"nativeSrc":"3009:12:26","nodeType":"YulExpressionStatement","src":"3009:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2982:7:26","nodeType":"YulIdentifier","src":"2982:7:26"},{"name":"headStart","nativeSrc":"2991:9:26","nodeType":"YulIdentifier","src":"2991:9:26"}],"functionName":{"name":"sub","nativeSrc":"2978:3:26","nodeType":"YulIdentifier","src":"2978:3:26"},"nativeSrc":"2978:23:26","nodeType":"YulFunctionCall","src":"2978:23:26"},{"kind":"number","nativeSrc":"3003:2:26","nodeType":"YulLiteral","src":"3003:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2974:3:26","nodeType":"YulIdentifier","src":"2974:3:26"},"nativeSrc":"2974:32:26","nodeType":"YulFunctionCall","src":"2974:32:26"},"nativeSrc":"2971:52:26","nodeType":"YulIf","src":"2971:52:26"},{"nativeSrc":"3032:37:26","nodeType":"YulVariableDeclaration","src":"3032:37:26","value":{"arguments":[{"name":"headStart","nativeSrc":"3059:9:26","nodeType":"YulIdentifier","src":"3059:9:26"}],"functionName":{"name":"calldataload","nativeSrc":"3046:12:26","nodeType":"YulIdentifier","src":"3046:12:26"},"nativeSrc":"3046:23:26","nodeType":"YulFunctionCall","src":"3046:23:26"},"variables":[{"name":"offset","nativeSrc":"3036:6:26","nodeType":"YulTypedName","src":"3036:6:26","type":""}]},{"nativeSrc":"3078:28:26","nodeType":"YulVariableDeclaration","src":"3078:28:26","value":{"kind":"number","nativeSrc":"3088:18:26","nodeType":"YulLiteral","src":"3088:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"3082:2:26","nodeType":"YulTypedName","src":"3082:2:26","type":""}]},{"body":{"nativeSrc":"3133:16:26","nodeType":"YulBlock","src":"3133:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3142:1:26","nodeType":"YulLiteral","src":"3142:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3145:1:26","nodeType":"YulLiteral","src":"3145:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3135:6:26","nodeType":"YulIdentifier","src":"3135:6:26"},"nativeSrc":"3135:12:26","nodeType":"YulFunctionCall","src":"3135:12:26"},"nativeSrc":"3135:12:26","nodeType":"YulExpressionStatement","src":"3135:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3121:6:26","nodeType":"YulIdentifier","src":"3121:6:26"},{"name":"_1","nativeSrc":"3129:2:26","nodeType":"YulIdentifier","src":"3129:2:26"}],"functionName":{"name":"gt","nativeSrc":"3118:2:26","nodeType":"YulIdentifier","src":"3118:2:26"},"nativeSrc":"3118:14:26","nodeType":"YulFunctionCall","src":"3118:14:26"},"nativeSrc":"3115:34:26","nodeType":"YulIf","src":"3115:34:26"},{"nativeSrc":"3158:85:26","nodeType":"YulAssignment","src":"3158:85:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3215:9:26","nodeType":"YulIdentifier","src":"3215:9:26"},{"name":"offset","nativeSrc":"3226:6:26","nodeType":"YulIdentifier","src":"3226:6:26"}],"functionName":{"name":"add","nativeSrc":"3211:3:26","nodeType":"YulIdentifier","src":"3211:3:26"},"nativeSrc":"3211:22:26","nodeType":"YulFunctionCall","src":"3211:22:26"},{"name":"dataEnd","nativeSrc":"3235:7:26","nodeType":"YulIdentifier","src":"3235:7:26"}],"functionName":{"name":"abi_decode_struct_CrossChainOrder_calldata","nativeSrc":"3168:42:26","nodeType":"YulIdentifier","src":"3168:42:26"},"nativeSrc":"3168:75:26","nodeType":"YulFunctionCall","src":"3168:75:26"},"variableNames":[{"name":"value0","nativeSrc":"3158:6:26","nodeType":"YulIdentifier","src":"3158:6:26"}]},{"nativeSrc":"3252:48:26","nodeType":"YulVariableDeclaration","src":"3252:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3285:9:26","nodeType":"YulIdentifier","src":"3285:9:26"},{"kind":"number","nativeSrc":"3296:2:26","nodeType":"YulLiteral","src":"3296:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3281:3:26","nodeType":"YulIdentifier","src":"3281:3:26"},"nativeSrc":"3281:18:26","nodeType":"YulFunctionCall","src":"3281:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"3268:12:26","nodeType":"YulIdentifier","src":"3268:12:26"},"nativeSrc":"3268:32:26","nodeType":"YulFunctionCall","src":"3268:32:26"},"variables":[{"name":"offset_1","nativeSrc":"3256:8:26","nodeType":"YulTypedName","src":"3256:8:26","type":""}]},{"body":{"nativeSrc":"3329:16:26","nodeType":"YulBlock","src":"3329:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3338:1:26","nodeType":"YulLiteral","src":"3338:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3341:1:26","nodeType":"YulLiteral","src":"3341:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3331:6:26","nodeType":"YulIdentifier","src":"3331:6:26"},"nativeSrc":"3331:12:26","nodeType":"YulFunctionCall","src":"3331:12:26"},"nativeSrc":"3331:12:26","nodeType":"YulExpressionStatement","src":"3331:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"3315:8:26","nodeType":"YulIdentifier","src":"3315:8:26"},{"name":"_1","nativeSrc":"3325:2:26","nodeType":"YulIdentifier","src":"3325:2:26"}],"functionName":{"name":"gt","nativeSrc":"3312:2:26","nodeType":"YulIdentifier","src":"3312:2:26"},"nativeSrc":"3312:16:26","nodeType":"YulFunctionCall","src":"3312:16:26"},"nativeSrc":"3309:36:26","nodeType":"YulIf","src":"3309:36:26"},{"nativeSrc":"3354:86:26","nodeType":"YulVariableDeclaration","src":"3354:86:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3410:9:26","nodeType":"YulIdentifier","src":"3410:9:26"},{"name":"offset_1","nativeSrc":"3421:8:26","nodeType":"YulIdentifier","src":"3421:8:26"}],"functionName":{"name":"add","nativeSrc":"3406:3:26","nodeType":"YulIdentifier","src":"3406:3:26"},"nativeSrc":"3406:24:26","nodeType":"YulFunctionCall","src":"3406:24:26"},{"name":"dataEnd","nativeSrc":"3432:7:26","nodeType":"YulIdentifier","src":"3432:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nativeSrc":"3380:25:26","nodeType":"YulIdentifier","src":"3380:25:26"},"nativeSrc":"3380:60:26","nodeType":"YulFunctionCall","src":"3380:60:26"},"variables":[{"name":"value1_1","nativeSrc":"3358:8:26","nodeType":"YulTypedName","src":"3358:8:26","type":""},{"name":"value2_1","nativeSrc":"3368:8:26","nodeType":"YulTypedName","src":"3368:8:26","type":""}]},{"nativeSrc":"3449:18:26","nodeType":"YulAssignment","src":"3449:18:26","value":{"name":"value1_1","nativeSrc":"3459:8:26","nodeType":"YulIdentifier","src":"3459:8:26"},"variableNames":[{"name":"value1","nativeSrc":"3449:6:26","nodeType":"YulIdentifier","src":"3449:6:26"}]},{"nativeSrc":"3476:18:26","nodeType":"YulAssignment","src":"3476:18:26","value":{"name":"value2_1","nativeSrc":"3486:8:26","nodeType":"YulIdentifier","src":"3486:8:26"},"variableNames":[{"name":"value2","nativeSrc":"3476:6:26","nodeType":"YulIdentifier","src":"3476:6:26"}]}]},"name":"abi_decode_tuple_t_struct$_CrossChainOrder_$4309_calldata_ptrt_bytes_calldata_ptr","nativeSrc":"2820:680:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2911:9:26","nodeType":"YulTypedName","src":"2911:9:26","type":""},{"name":"dataEnd","nativeSrc":"2922:7:26","nodeType":"YulTypedName","src":"2922:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2934:6:26","nodeType":"YulTypedName","src":"2934:6:26","type":""},{"name":"value1","nativeSrc":"2942:6:26","nodeType":"YulTypedName","src":"2942:6:26","type":""},{"name":"value2","nativeSrc":"2950:6:26","nodeType":"YulTypedName","src":"2950:6:26","type":""}],"src":"2820:680:26"},{"body":{"nativeSrc":"3548:51:26","nodeType":"YulBlock","src":"3548:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3565:3:26","nodeType":"YulIdentifier","src":"3565:3:26"},{"arguments":[{"name":"value","nativeSrc":"3574:5:26","nodeType":"YulIdentifier","src":"3574:5:26"},{"kind":"number","nativeSrc":"3581:10:26","nodeType":"YulLiteral","src":"3581:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"3570:3:26","nodeType":"YulIdentifier","src":"3570:3:26"},"nativeSrc":"3570:22:26","nodeType":"YulFunctionCall","src":"3570:22:26"}],"functionName":{"name":"mstore","nativeSrc":"3558:6:26","nodeType":"YulIdentifier","src":"3558:6:26"},"nativeSrc":"3558:35:26","nodeType":"YulFunctionCall","src":"3558:35:26"},"nativeSrc":"3558:35:26","nodeType":"YulExpressionStatement","src":"3558:35:26"}]},"name":"abi_encode_uint32","nativeSrc":"3505:94:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3532:5:26","nodeType":"YulTypedName","src":"3532:5:26","type":""},{"name":"pos","nativeSrc":"3539:3:26","nodeType":"YulTypedName","src":"3539:3:26","type":""}],"src":"3505:94:26"},{"body":{"nativeSrc":"3670:491:26","nodeType":"YulBlock","src":"3670:491:26","statements":[{"nativeSrc":"3680:26:26","nodeType":"YulVariableDeclaration","src":"3680:26:26","value":{"arguments":[{"name":"value","nativeSrc":"3700:5:26","nodeType":"YulIdentifier","src":"3700:5:26"}],"functionName":{"name":"mload","nativeSrc":"3694:5:26","nodeType":"YulIdentifier","src":"3694:5:26"},"nativeSrc":"3694:12:26","nodeType":"YulFunctionCall","src":"3694:12:26"},"variables":[{"name":"length","nativeSrc":"3684:6:26","nodeType":"YulTypedName","src":"3684:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3722:3:26","nodeType":"YulIdentifier","src":"3722:3:26"},{"name":"length","nativeSrc":"3727:6:26","nodeType":"YulIdentifier","src":"3727:6:26"}],"functionName":{"name":"mstore","nativeSrc":"3715:6:26","nodeType":"YulIdentifier","src":"3715:6:26"},"nativeSrc":"3715:19:26","nodeType":"YulFunctionCall","src":"3715:19:26"},"nativeSrc":"3715:19:26","nodeType":"YulExpressionStatement","src":"3715:19:26"},{"nativeSrc":"3743:14:26","nodeType":"YulVariableDeclaration","src":"3743:14:26","value":{"kind":"number","nativeSrc":"3753:4:26","nodeType":"YulLiteral","src":"3753:4:26","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"3747:2:26","nodeType":"YulTypedName","src":"3747:2:26","type":""}]},{"nativeSrc":"3766:21:26","nodeType":"YulAssignment","src":"3766:21:26","value":{"arguments":[{"name":"pos","nativeSrc":"3777:3:26","nodeType":"YulIdentifier","src":"3777:3:26"},{"kind":"number","nativeSrc":"3782:4:26","nodeType":"YulLiteral","src":"3782:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3773:3:26","nodeType":"YulIdentifier","src":"3773:3:26"},"nativeSrc":"3773:14:26","nodeType":"YulFunctionCall","src":"3773:14:26"},"variableNames":[{"name":"pos","nativeSrc":"3766:3:26","nodeType":"YulIdentifier","src":"3766:3:26"}]},{"nativeSrc":"3796:30:26","nodeType":"YulVariableDeclaration","src":"3796:30:26","value":{"arguments":[{"name":"value","nativeSrc":"3814:5:26","nodeType":"YulIdentifier","src":"3814:5:26"},{"kind":"number","nativeSrc":"3821:4:26","nodeType":"YulLiteral","src":"3821:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3810:3:26","nodeType":"YulIdentifier","src":"3810:3:26"},"nativeSrc":"3810:16:26","nodeType":"YulFunctionCall","src":"3810:16:26"},"variables":[{"name":"srcPtr","nativeSrc":"3800:6:26","nodeType":"YulTypedName","src":"3800:6:26","type":""}]},{"nativeSrc":"3835:10:26","nodeType":"YulVariableDeclaration","src":"3835:10:26","value":{"kind":"number","nativeSrc":"3844:1:26","nodeType":"YulLiteral","src":"3844:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3839:1:26","nodeType":"YulTypedName","src":"3839:1:26","type":""}]},{"body":{"nativeSrc":"3903:233:26","nodeType":"YulBlock","src":"3903:233:26","statements":[{"nativeSrc":"3917:23:26","nodeType":"YulVariableDeclaration","src":"3917:23:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"3933:6:26","nodeType":"YulIdentifier","src":"3933:6:26"}],"functionName":{"name":"mload","nativeSrc":"3927:5:26","nodeType":"YulIdentifier","src":"3927:5:26"},"nativeSrc":"3927:13:26","nodeType":"YulFunctionCall","src":"3927:13:26"},"variables":[{"name":"_2","nativeSrc":"3921:2:26","nodeType":"YulTypedName","src":"3921:2:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3960:3:26","nodeType":"YulIdentifier","src":"3960:3:26"},{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"3975:2:26","nodeType":"YulIdentifier","src":"3975:2:26"}],"functionName":{"name":"mload","nativeSrc":"3969:5:26","nodeType":"YulIdentifier","src":"3969:5:26"},"nativeSrc":"3969:9:26","nodeType":"YulFunctionCall","src":"3969:9:26"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3988:3:26","nodeType":"YulLiteral","src":"3988:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"3993:1:26","nodeType":"YulLiteral","src":"3993:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3984:3:26","nodeType":"YulIdentifier","src":"3984:3:26"},"nativeSrc":"3984:11:26","nodeType":"YulFunctionCall","src":"3984:11:26"},{"kind":"number","nativeSrc":"3997:1:26","nodeType":"YulLiteral","src":"3997:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3980:3:26","nodeType":"YulIdentifier","src":"3980:3:26"},"nativeSrc":"3980:19:26","nodeType":"YulFunctionCall","src":"3980:19:26"}],"functionName":{"name":"and","nativeSrc":"3965:3:26","nodeType":"YulIdentifier","src":"3965:3:26"},"nativeSrc":"3965:35:26","nodeType":"YulFunctionCall","src":"3965:35:26"}],"functionName":{"name":"mstore","nativeSrc":"3953:6:26","nodeType":"YulIdentifier","src":"3953:6:26"},"nativeSrc":"3953:48:26","nodeType":"YulFunctionCall","src":"3953:48:26"},"nativeSrc":"3953:48:26","nodeType":"YulExpressionStatement","src":"3953:48:26"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4025:3:26","nodeType":"YulIdentifier","src":"4025:3:26"},{"name":"_1","nativeSrc":"4030:2:26","nodeType":"YulIdentifier","src":"4030:2:26"}],"functionName":{"name":"add","nativeSrc":"4021:3:26","nodeType":"YulIdentifier","src":"4021:3:26"},"nativeSrc":"4021:12:26","nodeType":"YulFunctionCall","src":"4021:12:26"},{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4045:2:26","nodeType":"YulIdentifier","src":"4045:2:26"},{"name":"_1","nativeSrc":"4049:2:26","nodeType":"YulIdentifier","src":"4049:2:26"}],"functionName":{"name":"add","nativeSrc":"4041:3:26","nodeType":"YulIdentifier","src":"4041:3:26"},"nativeSrc":"4041:11:26","nodeType":"YulFunctionCall","src":"4041:11:26"}],"functionName":{"name":"mload","nativeSrc":"4035:5:26","nodeType":"YulIdentifier","src":"4035:5:26"},"nativeSrc":"4035:18:26","nodeType":"YulFunctionCall","src":"4035:18:26"}],"functionName":{"name":"mstore","nativeSrc":"4014:6:26","nodeType":"YulIdentifier","src":"4014:6:26"},"nativeSrc":"4014:40:26","nodeType":"YulFunctionCall","src":"4014:40:26"},"nativeSrc":"4014:40:26","nodeType":"YulExpressionStatement","src":"4014:40:26"},{"nativeSrc":"4067:21:26","nodeType":"YulAssignment","src":"4067:21:26","value":{"arguments":[{"name":"pos","nativeSrc":"4078:3:26","nodeType":"YulIdentifier","src":"4078:3:26"},{"kind":"number","nativeSrc":"4083:4:26","nodeType":"YulLiteral","src":"4083:4:26","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4074:3:26","nodeType":"YulIdentifier","src":"4074:3:26"},"nativeSrc":"4074:14:26","nodeType":"YulFunctionCall","src":"4074:14:26"},"variableNames":[{"name":"pos","nativeSrc":"4067:3:26","nodeType":"YulIdentifier","src":"4067:3:26"}]},{"nativeSrc":"4101:25:26","nodeType":"YulAssignment","src":"4101:25:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4115:6:26","nodeType":"YulIdentifier","src":"4115:6:26"},{"name":"_1","nativeSrc":"4123:2:26","nodeType":"YulIdentifier","src":"4123:2:26"}],"functionName":{"name":"add","nativeSrc":"4111:3:26","nodeType":"YulIdentifier","src":"4111:3:26"},"nativeSrc":"4111:15:26","nodeType":"YulFunctionCall","src":"4111:15:26"},"variableNames":[{"name":"srcPtr","nativeSrc":"4101:6:26","nodeType":"YulIdentifier","src":"4101:6:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3865:1:26","nodeType":"YulIdentifier","src":"3865:1:26"},{"name":"length","nativeSrc":"3868:6:26","nodeType":"YulIdentifier","src":"3868:6:26"}],"functionName":{"name":"lt","nativeSrc":"3862:2:26","nodeType":"YulIdentifier","src":"3862:2:26"},"nativeSrc":"3862:13:26","nodeType":"YulFunctionCall","src":"3862:13:26"},"nativeSrc":"3854:282:26","nodeType":"YulForLoop","post":{"nativeSrc":"3876:18:26","nodeType":"YulBlock","src":"3876:18:26","statements":[{"nativeSrc":"3878:14:26","nodeType":"YulAssignment","src":"3878:14:26","value":{"arguments":[{"name":"i","nativeSrc":"3887:1:26","nodeType":"YulIdentifier","src":"3887:1:26"},{"kind":"number","nativeSrc":"3890:1:26","nodeType":"YulLiteral","src":"3890:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3883:3:26","nodeType":"YulIdentifier","src":"3883:3:26"},"nativeSrc":"3883:9:26","nodeType":"YulFunctionCall","src":"3883:9:26"},"variableNames":[{"name":"i","nativeSrc":"3878:1:26","nodeType":"YulIdentifier","src":"3878:1:26"}]}]},"pre":{"nativeSrc":"3858:3:26","nodeType":"YulBlock","src":"3858:3:26","statements":[]},"src":"3854:282:26"},{"nativeSrc":"4145:10:26","nodeType":"YulAssignment","src":"4145:10:26","value":{"name":"pos","nativeSrc":"4152:3:26","nodeType":"YulIdentifier","src":"4152:3:26"},"variableNames":[{"name":"end","nativeSrc":"4145:3:26","nodeType":"YulIdentifier","src":"4145:3:26"}]}]},"name":"abi_encode_array_struct_Input_dyn","nativeSrc":"3604:557:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3647:5:26","nodeType":"YulTypedName","src":"3647:5:26","type":""},{"name":"pos","nativeSrc":"3654:3:26","nodeType":"YulTypedName","src":"3654:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3662:3:26","nodeType":"YulTypedName","src":"3662:3:26","type":""}],"src":"3604:557:26"},{"body":{"nativeSrc":"4233:702:26","nodeType":"YulBlock","src":"4233:702:26","statements":[{"nativeSrc":"4243:26:26","nodeType":"YulVariableDeclaration","src":"4243:26:26","value":{"arguments":[{"name":"value","nativeSrc":"4263:5:26","nodeType":"YulIdentifier","src":"4263:5:26"}],"functionName":{"name":"mload","nativeSrc":"4257:5:26","nodeType":"YulIdentifier","src":"4257:5:26"},"nativeSrc":"4257:12:26","nodeType":"YulFunctionCall","src":"4257:12:26"},"variables":[{"name":"length","nativeSrc":"4247:6:26","nodeType":"YulTypedName","src":"4247:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4285:3:26","nodeType":"YulIdentifier","src":"4285:3:26"},{"name":"length","nativeSrc":"4290:6:26","nodeType":"YulIdentifier","src":"4290:6:26"}],"functionName":{"name":"mstore","nativeSrc":"4278:6:26","nodeType":"YulIdentifier","src":"4278:6:26"},"nativeSrc":"4278:19:26","nodeType":"YulFunctionCall","src":"4278:19:26"},"nativeSrc":"4278:19:26","nodeType":"YulExpressionStatement","src":"4278:19:26"},{"nativeSrc":"4306:14:26","nodeType":"YulVariableDeclaration","src":"4306:14:26","value":{"kind":"number","nativeSrc":"4316:4:26","nodeType":"YulLiteral","src":"4316:4:26","type":"","value":"0x20"},"variables":[{"name":"_1","nativeSrc":"4310:2:26","nodeType":"YulTypedName","src":"4310:2:26","type":""}]},{"nativeSrc":"4329:21:26","nodeType":"YulAssignment","src":"4329:21:26","value":{"arguments":[{"name":"pos","nativeSrc":"4340:3:26","nodeType":"YulIdentifier","src":"4340:3:26"},{"kind":"number","nativeSrc":"4345:4:26","nodeType":"YulLiteral","src":"4345:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4336:3:26","nodeType":"YulIdentifier","src":"4336:3:26"},"nativeSrc":"4336:14:26","nodeType":"YulFunctionCall","src":"4336:14:26"},"variableNames":[{"name":"pos","nativeSrc":"4329:3:26","nodeType":"YulIdentifier","src":"4329:3:26"}]},{"nativeSrc":"4359:30:26","nodeType":"YulVariableDeclaration","src":"4359:30:26","value":{"arguments":[{"name":"value","nativeSrc":"4377:5:26","nodeType":"YulIdentifier","src":"4377:5:26"},{"kind":"number","nativeSrc":"4384:4:26","nodeType":"YulLiteral","src":"4384:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4373:3:26","nodeType":"YulIdentifier","src":"4373:3:26"},"nativeSrc":"4373:16:26","nodeType":"YulFunctionCall","src":"4373:16:26"},"variables":[{"name":"srcPtr","nativeSrc":"4363:6:26","nodeType":"YulTypedName","src":"4363:6:26","type":""}]},{"nativeSrc":"4398:10:26","nodeType":"YulVariableDeclaration","src":"4398:10:26","value":{"kind":"number","nativeSrc":"4407:1:26","nodeType":"YulLiteral","src":"4407:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4402:1:26","nodeType":"YulTypedName","src":"4402:1:26","type":""}]},{"body":{"nativeSrc":"4466:444:26","nodeType":"YulBlock","src":"4466:444:26","statements":[{"nativeSrc":"4480:23:26","nodeType":"YulVariableDeclaration","src":"4480:23:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4496:6:26","nodeType":"YulIdentifier","src":"4496:6:26"}],"functionName":{"name":"mload","nativeSrc":"4490:5:26","nodeType":"YulIdentifier","src":"4490:5:26"},"nativeSrc":"4490:13:26","nodeType":"YulFunctionCall","src":"4490:13:26"},"variables":[{"name":"_2","nativeSrc":"4484:2:26","nodeType":"YulTypedName","src":"4484:2:26","type":""}]},{"nativeSrc":"4516:29:26","nodeType":"YulVariableDeclaration","src":"4516:29:26","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4534:3:26","nodeType":"YulLiteral","src":"4534:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"4539:1:26","nodeType":"YulLiteral","src":"4539:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4530:3:26","nodeType":"YulIdentifier","src":"4530:3:26"},"nativeSrc":"4530:11:26","nodeType":"YulFunctionCall","src":"4530:11:26"},{"kind":"number","nativeSrc":"4543:1:26","nodeType":"YulLiteral","src":"4543:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4526:3:26","nodeType":"YulIdentifier","src":"4526:3:26"},"nativeSrc":"4526:19:26","nodeType":"YulFunctionCall","src":"4526:19:26"},"variables":[{"name":"_3","nativeSrc":"4520:2:26","nodeType":"YulTypedName","src":"4520:2:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4565:3:26","nodeType":"YulIdentifier","src":"4565:3:26"},{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4580:2:26","nodeType":"YulIdentifier","src":"4580:2:26"}],"functionName":{"name":"mload","nativeSrc":"4574:5:26","nodeType":"YulIdentifier","src":"4574:5:26"},"nativeSrc":"4574:9:26","nodeType":"YulFunctionCall","src":"4574:9:26"},{"name":"_3","nativeSrc":"4585:2:26","nodeType":"YulIdentifier","src":"4585:2:26"}],"functionName":{"name":"and","nativeSrc":"4570:3:26","nodeType":"YulIdentifier","src":"4570:3:26"},"nativeSrc":"4570:18:26","nodeType":"YulFunctionCall","src":"4570:18:26"}],"functionName":{"name":"mstore","nativeSrc":"4558:6:26","nodeType":"YulIdentifier","src":"4558:6:26"},"nativeSrc":"4558:31:26","nodeType":"YulFunctionCall","src":"4558:31:26"},"nativeSrc":"4558:31:26","nodeType":"YulExpressionStatement","src":"4558:31:26"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4613:3:26","nodeType":"YulIdentifier","src":"4613:3:26"},{"name":"_1","nativeSrc":"4618:2:26","nodeType":"YulIdentifier","src":"4618:2:26"}],"functionName":{"name":"add","nativeSrc":"4609:3:26","nodeType":"YulIdentifier","src":"4609:3:26"},"nativeSrc":"4609:12:26","nodeType":"YulFunctionCall","src":"4609:12:26"},{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4633:2:26","nodeType":"YulIdentifier","src":"4633:2:26"},{"name":"_1","nativeSrc":"4637:2:26","nodeType":"YulIdentifier","src":"4637:2:26"}],"functionName":{"name":"add","nativeSrc":"4629:3:26","nodeType":"YulIdentifier","src":"4629:3:26"},"nativeSrc":"4629:11:26","nodeType":"YulFunctionCall","src":"4629:11:26"}],"functionName":{"name":"mload","nativeSrc":"4623:5:26","nodeType":"YulIdentifier","src":"4623:5:26"},"nativeSrc":"4623:18:26","nodeType":"YulFunctionCall","src":"4623:18:26"}],"functionName":{"name":"mstore","nativeSrc":"4602:6:26","nodeType":"YulIdentifier","src":"4602:6:26"},"nativeSrc":"4602:40:26","nodeType":"YulFunctionCall","src":"4602:40:26"},"nativeSrc":"4602:40:26","nodeType":"YulExpressionStatement","src":"4602:40:26"},{"nativeSrc":"4655:14:26","nodeType":"YulVariableDeclaration","src":"4655:14:26","value":{"kind":"number","nativeSrc":"4665:4:26","nodeType":"YulLiteral","src":"4665:4:26","type":"","value":"0x40"},"variables":[{"name":"_4","nativeSrc":"4659:2:26","nodeType":"YulTypedName","src":"4659:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4693:3:26","nodeType":"YulIdentifier","src":"4693:3:26"},{"name":"_4","nativeSrc":"4698:2:26","nodeType":"YulIdentifier","src":"4698:2:26"}],"functionName":{"name":"add","nativeSrc":"4689:3:26","nodeType":"YulIdentifier","src":"4689:3:26"},"nativeSrc":"4689:12:26","nodeType":"YulFunctionCall","src":"4689:12:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4717:2:26","nodeType":"YulIdentifier","src":"4717:2:26"},{"name":"_4","nativeSrc":"4721:2:26","nodeType":"YulIdentifier","src":"4721:2:26"}],"functionName":{"name":"add","nativeSrc":"4713:3:26","nodeType":"YulIdentifier","src":"4713:3:26"},"nativeSrc":"4713:11:26","nodeType":"YulFunctionCall","src":"4713:11:26"}],"functionName":{"name":"mload","nativeSrc":"4707:5:26","nodeType":"YulIdentifier","src":"4707:5:26"},"nativeSrc":"4707:18:26","nodeType":"YulFunctionCall","src":"4707:18:26"},{"name":"_3","nativeSrc":"4727:2:26","nodeType":"YulIdentifier","src":"4727:2:26"}],"functionName":{"name":"and","nativeSrc":"4703:3:26","nodeType":"YulIdentifier","src":"4703:3:26"},"nativeSrc":"4703:27:26","nodeType":"YulFunctionCall","src":"4703:27:26"}],"functionName":{"name":"mstore","nativeSrc":"4682:6:26","nodeType":"YulIdentifier","src":"4682:6:26"},"nativeSrc":"4682:49:26","nodeType":"YulFunctionCall","src":"4682:49:26"},"nativeSrc":"4682:49:26","nodeType":"YulExpressionStatement","src":"4682:49:26"},{"nativeSrc":"4744:14:26","nodeType":"YulVariableDeclaration","src":"4744:14:26","value":{"kind":"number","nativeSrc":"4754:4:26","nodeType":"YulLiteral","src":"4754:4:26","type":"","value":"0x60"},"variables":[{"name":"_5","nativeSrc":"4748:2:26","nodeType":"YulTypedName","src":"4748:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"4782:3:26","nodeType":"YulIdentifier","src":"4782:3:26"},{"name":"_5","nativeSrc":"4787:2:26","nodeType":"YulIdentifier","src":"4787:2:26"}],"functionName":{"name":"add","nativeSrc":"4778:3:26","nodeType":"YulIdentifier","src":"4778:3:26"},"nativeSrc":"4778:12:26","nodeType":"YulFunctionCall","src":"4778:12:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"4806:2:26","nodeType":"YulIdentifier","src":"4806:2:26"},{"name":"_5","nativeSrc":"4810:2:26","nodeType":"YulIdentifier","src":"4810:2:26"}],"functionName":{"name":"add","nativeSrc":"4802:3:26","nodeType":"YulIdentifier","src":"4802:3:26"},"nativeSrc":"4802:11:26","nodeType":"YulFunctionCall","src":"4802:11:26"}],"functionName":{"name":"mload","nativeSrc":"4796:5:26","nodeType":"YulIdentifier","src":"4796:5:26"},"nativeSrc":"4796:18:26","nodeType":"YulFunctionCall","src":"4796:18:26"},{"kind":"number","nativeSrc":"4816:10:26","nodeType":"YulLiteral","src":"4816:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"4792:3:26","nodeType":"YulIdentifier","src":"4792:3:26"},"nativeSrc":"4792:35:26","nodeType":"YulFunctionCall","src":"4792:35:26"}],"functionName":{"name":"mstore","nativeSrc":"4771:6:26","nodeType":"YulIdentifier","src":"4771:6:26"},"nativeSrc":"4771:57:26","nodeType":"YulFunctionCall","src":"4771:57:26"},"nativeSrc":"4771:57:26","nodeType":"YulExpressionStatement","src":"4771:57:26"},{"nativeSrc":"4841:21:26","nodeType":"YulAssignment","src":"4841:21:26","value":{"arguments":[{"name":"pos","nativeSrc":"4852:3:26","nodeType":"YulIdentifier","src":"4852:3:26"},{"kind":"number","nativeSrc":"4857:4:26","nodeType":"YulLiteral","src":"4857:4:26","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"4848:3:26","nodeType":"YulIdentifier","src":"4848:3:26"},"nativeSrc":"4848:14:26","nodeType":"YulFunctionCall","src":"4848:14:26"},"variableNames":[{"name":"pos","nativeSrc":"4841:3:26","nodeType":"YulIdentifier","src":"4841:3:26"}]},{"nativeSrc":"4875:25:26","nodeType":"YulAssignment","src":"4875:25:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4889:6:26","nodeType":"YulIdentifier","src":"4889:6:26"},{"name":"_1","nativeSrc":"4897:2:26","nodeType":"YulIdentifier","src":"4897:2:26"}],"functionName":{"name":"add","nativeSrc":"4885:3:26","nodeType":"YulIdentifier","src":"4885:3:26"},"nativeSrc":"4885:15:26","nodeType":"YulFunctionCall","src":"4885:15:26"},"variableNames":[{"name":"srcPtr","nativeSrc":"4875:6:26","nodeType":"YulIdentifier","src":"4875:6:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4428:1:26","nodeType":"YulIdentifier","src":"4428:1:26"},{"name":"length","nativeSrc":"4431:6:26","nodeType":"YulIdentifier","src":"4431:6:26"}],"functionName":{"name":"lt","nativeSrc":"4425:2:26","nodeType":"YulIdentifier","src":"4425:2:26"},"nativeSrc":"4425:13:26","nodeType":"YulFunctionCall","src":"4425:13:26"},"nativeSrc":"4417:493:26","nodeType":"YulForLoop","post":{"nativeSrc":"4439:18:26","nodeType":"YulBlock","src":"4439:18:26","statements":[{"nativeSrc":"4441:14:26","nodeType":"YulAssignment","src":"4441:14:26","value":{"arguments":[{"name":"i","nativeSrc":"4450:1:26","nodeType":"YulIdentifier","src":"4450:1:26"},{"kind":"number","nativeSrc":"4453:1:26","nodeType":"YulLiteral","src":"4453:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4446:3:26","nodeType":"YulIdentifier","src":"4446:3:26"},"nativeSrc":"4446:9:26","nodeType":"YulFunctionCall","src":"4446:9:26"},"variableNames":[{"name":"i","nativeSrc":"4441:1:26","nodeType":"YulIdentifier","src":"4441:1:26"}]}]},"pre":{"nativeSrc":"4421:3:26","nodeType":"YulBlock","src":"4421:3:26","statements":[]},"src":"4417:493:26"},{"nativeSrc":"4919:10:26","nodeType":"YulAssignment","src":"4919:10:26","value":{"name":"pos","nativeSrc":"4926:3:26","nodeType":"YulIdentifier","src":"4926:3:26"},"variableNames":[{"name":"end","nativeSrc":"4919:3:26","nodeType":"YulIdentifier","src":"4919:3:26"}]}]},"name":"abi_encode_array_struct_Output_dyn","nativeSrc":"4166:769:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4210:5:26","nodeType":"YulTypedName","src":"4210:5:26","type":""},{"name":"pos","nativeSrc":"4217:3:26","nodeType":"YulTypedName","src":"4217:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4225:3:26","nodeType":"YulTypedName","src":"4225:3:26","type":""}],"src":"4166:769:26"},{"body":{"nativeSrc":"5123:1279:26","nodeType":"YulBlock","src":"5123:1279:26","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5140:9:26","nodeType":"YulIdentifier","src":"5140:9:26"},{"kind":"number","nativeSrc":"5151:2:26","nodeType":"YulLiteral","src":"5151:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5133:6:26","nodeType":"YulIdentifier","src":"5133:6:26"},"nativeSrc":"5133:21:26","nodeType":"YulFunctionCall","src":"5133:21:26"},"nativeSrc":"5133:21:26","nodeType":"YulExpressionStatement","src":"5133:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5188:6:26","nodeType":"YulIdentifier","src":"5188:6:26"}],"functionName":{"name":"mload","nativeSrc":"5182:5:26","nodeType":"YulIdentifier","src":"5182:5:26"},"nativeSrc":"5182:13:26","nodeType":"YulFunctionCall","src":"5182:13:26"},{"arguments":[{"name":"headStart","nativeSrc":"5201:9:26","nodeType":"YulIdentifier","src":"5201:9:26"},{"kind":"number","nativeSrc":"5212:2:26","nodeType":"YulLiteral","src":"5212:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5197:3:26","nodeType":"YulIdentifier","src":"5197:3:26"},"nativeSrc":"5197:18:26","nodeType":"YulFunctionCall","src":"5197:18:26"}],"functionName":{"name":"abi_encode_address","nativeSrc":"5163:18:26","nodeType":"YulIdentifier","src":"5163:18:26"},"nativeSrc":"5163:53:26","nodeType":"YulFunctionCall","src":"5163:53:26"},"nativeSrc":"5163:53:26","nodeType":"YulExpressionStatement","src":"5163:53:26"},{"nativeSrc":"5225:42:26","nodeType":"YulVariableDeclaration","src":"5225:42:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5255:6:26","nodeType":"YulIdentifier","src":"5255:6:26"},{"kind":"number","nativeSrc":"5263:2:26","nodeType":"YulLiteral","src":"5263:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5251:3:26","nodeType":"YulIdentifier","src":"5251:3:26"},"nativeSrc":"5251:15:26","nodeType":"YulFunctionCall","src":"5251:15:26"}],"functionName":{"name":"mload","nativeSrc":"5245:5:26","nodeType":"YulIdentifier","src":"5245:5:26"},"nativeSrc":"5245:22:26","nodeType":"YulFunctionCall","src":"5245:22:26"},"variables":[{"name":"memberValue0","nativeSrc":"5229:12:26","nodeType":"YulTypedName","src":"5229:12:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"5295:12:26","nodeType":"YulIdentifier","src":"5295:12:26"},{"arguments":[{"name":"headStart","nativeSrc":"5313:9:26","nodeType":"YulIdentifier","src":"5313:9:26"},{"kind":"number","nativeSrc":"5324:2:26","nodeType":"YulLiteral","src":"5324:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5309:3:26","nodeType":"YulIdentifier","src":"5309:3:26"},"nativeSrc":"5309:18:26","nodeType":"YulFunctionCall","src":"5309:18:26"}],"functionName":{"name":"abi_encode_address","nativeSrc":"5276:18:26","nodeType":"YulIdentifier","src":"5276:18:26"},"nativeSrc":"5276:52:26","nodeType":"YulFunctionCall","src":"5276:52:26"},"nativeSrc":"5276:52:26","nodeType":"YulExpressionStatement","src":"5276:52:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5348:9:26","nodeType":"YulIdentifier","src":"5348:9:26"},{"kind":"number","nativeSrc":"5359:2:26","nodeType":"YulLiteral","src":"5359:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5344:3:26","nodeType":"YulIdentifier","src":"5344:3:26"},"nativeSrc":"5344:18:26","nodeType":"YulFunctionCall","src":"5344:18:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5374:6:26","nodeType":"YulIdentifier","src":"5374:6:26"},{"kind":"number","nativeSrc":"5382:2:26","nodeType":"YulLiteral","src":"5382:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5370:3:26","nodeType":"YulIdentifier","src":"5370:3:26"},"nativeSrc":"5370:15:26","nodeType":"YulFunctionCall","src":"5370:15:26"}],"functionName":{"name":"mload","nativeSrc":"5364:5:26","nodeType":"YulIdentifier","src":"5364:5:26"},"nativeSrc":"5364:22:26","nodeType":"YulFunctionCall","src":"5364:22:26"}],"functionName":{"name":"mstore","nativeSrc":"5337:6:26","nodeType":"YulIdentifier","src":"5337:6:26"},"nativeSrc":"5337:50:26","nodeType":"YulFunctionCall","src":"5337:50:26"},"nativeSrc":"5337:50:26","nodeType":"YulExpressionStatement","src":"5337:50:26"},{"nativeSrc":"5396:44:26","nodeType":"YulVariableDeclaration","src":"5396:44:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5428:6:26","nodeType":"YulIdentifier","src":"5428:6:26"},{"kind":"number","nativeSrc":"5436:2:26","nodeType":"YulLiteral","src":"5436:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5424:3:26","nodeType":"YulIdentifier","src":"5424:3:26"},"nativeSrc":"5424:15:26","nodeType":"YulFunctionCall","src":"5424:15:26"}],"functionName":{"name":"mload","nativeSrc":"5418:5:26","nodeType":"YulIdentifier","src":"5418:5:26"},"nativeSrc":"5418:22:26","nodeType":"YulFunctionCall","src":"5418:22:26"},"variables":[{"name":"memberValue0_1","nativeSrc":"5400:14:26","nodeType":"YulTypedName","src":"5400:14:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nativeSrc":"5467:14:26","nodeType":"YulIdentifier","src":"5467:14:26"},{"arguments":[{"name":"headStart","nativeSrc":"5487:9:26","nodeType":"YulIdentifier","src":"5487:9:26"},{"kind":"number","nativeSrc":"5498:3:26","nodeType":"YulLiteral","src":"5498:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5483:3:26","nodeType":"YulIdentifier","src":"5483:3:26"},"nativeSrc":"5483:19:26","nodeType":"YulFunctionCall","src":"5483:19:26"}],"functionName":{"name":"abi_encode_uint32","nativeSrc":"5449:17:26","nodeType":"YulIdentifier","src":"5449:17:26"},"nativeSrc":"5449:54:26","nodeType":"YulFunctionCall","src":"5449:54:26"},"nativeSrc":"5449:54:26","nodeType":"YulExpressionStatement","src":"5449:54:26"},{"nativeSrc":"5512:45:26","nodeType":"YulVariableDeclaration","src":"5512:45:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5544:6:26","nodeType":"YulIdentifier","src":"5544:6:26"},{"kind":"number","nativeSrc":"5552:3:26","nodeType":"YulLiteral","src":"5552:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5540:3:26","nodeType":"YulIdentifier","src":"5540:3:26"},"nativeSrc":"5540:16:26","nodeType":"YulFunctionCall","src":"5540:16:26"}],"functionName":{"name":"mload","nativeSrc":"5534:5:26","nodeType":"YulIdentifier","src":"5534:5:26"},"nativeSrc":"5534:23:26","nodeType":"YulFunctionCall","src":"5534:23:26"},"variables":[{"name":"memberValue0_2","nativeSrc":"5516:14:26","nodeType":"YulTypedName","src":"5516:14:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nativeSrc":"5584:14:26","nodeType":"YulIdentifier","src":"5584:14:26"},{"arguments":[{"name":"headStart","nativeSrc":"5604:9:26","nodeType":"YulIdentifier","src":"5604:9:26"},{"kind":"number","nativeSrc":"5615:3:26","nodeType":"YulLiteral","src":"5615:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5600:3:26","nodeType":"YulIdentifier","src":"5600:3:26"},"nativeSrc":"5600:19:26","nodeType":"YulFunctionCall","src":"5600:19:26"}],"functionName":{"name":"abi_encode_uint32","nativeSrc":"5566:17:26","nodeType":"YulIdentifier","src":"5566:17:26"},"nativeSrc":"5566:54:26","nodeType":"YulFunctionCall","src":"5566:54:26"},"nativeSrc":"5566:54:26","nodeType":"YulExpressionStatement","src":"5566:54:26"},{"nativeSrc":"5629:45:26","nodeType":"YulVariableDeclaration","src":"5629:45:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5661:6:26","nodeType":"YulIdentifier","src":"5661:6:26"},{"kind":"number","nativeSrc":"5669:3:26","nodeType":"YulLiteral","src":"5669:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5657:3:26","nodeType":"YulIdentifier","src":"5657:3:26"},"nativeSrc":"5657:16:26","nodeType":"YulFunctionCall","src":"5657:16:26"}],"functionName":{"name":"mload","nativeSrc":"5651:5:26","nodeType":"YulIdentifier","src":"5651:5:26"},"nativeSrc":"5651:23:26","nodeType":"YulFunctionCall","src":"5651:23:26"},"variables":[{"name":"memberValue0_3","nativeSrc":"5633:14:26","nodeType":"YulTypedName","src":"5633:14:26","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nativeSrc":"5701:14:26","nodeType":"YulIdentifier","src":"5701:14:26"},{"arguments":[{"name":"headStart","nativeSrc":"5721:9:26","nodeType":"YulIdentifier","src":"5721:9:26"},{"kind":"number","nativeSrc":"5732:3:26","nodeType":"YulLiteral","src":"5732:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5717:3:26","nodeType":"YulIdentifier","src":"5717:3:26"},"nativeSrc":"5717:19:26","nodeType":"YulFunctionCall","src":"5717:19:26"}],"functionName":{"name":"abi_encode_uint32","nativeSrc":"5683:17:26","nodeType":"YulIdentifier","src":"5683:17:26"},"nativeSrc":"5683:54:26","nodeType":"YulFunctionCall","src":"5683:54:26"},"nativeSrc":"5683:54:26","nodeType":"YulExpressionStatement","src":"5683:54:26"},{"nativeSrc":"5746:45:26","nodeType":"YulVariableDeclaration","src":"5746:45:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5778:6:26","nodeType":"YulIdentifier","src":"5778:6:26"},{"kind":"number","nativeSrc":"5786:3:26","nodeType":"YulLiteral","src":"5786:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5774:3:26","nodeType":"YulIdentifier","src":"5774:3:26"},"nativeSrc":"5774:16:26","nodeType":"YulFunctionCall","src":"5774:16:26"}],"functionName":{"name":"mload","nativeSrc":"5768:5:26","nodeType":"YulIdentifier","src":"5768:5:26"},"nativeSrc":"5768:23:26","nodeType":"YulFunctionCall","src":"5768:23:26"},"variables":[{"name":"memberValue0_4","nativeSrc":"5750:14:26","nodeType":"YulTypedName","src":"5750:14:26","type":""}]},{"nativeSrc":"5800:16:26","nodeType":"YulVariableDeclaration","src":"5800:16:26","value":{"kind":"number","nativeSrc":"5810:6:26","nodeType":"YulLiteral","src":"5810:6:26","type":"","value":"0x0120"},"variables":[{"name":"_1","nativeSrc":"5804:2:26","nodeType":"YulTypedName","src":"5804:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5836:9:26","nodeType":"YulIdentifier","src":"5836:9:26"},{"kind":"number","nativeSrc":"5847:3:26","nodeType":"YulLiteral","src":"5847:3:26","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"5832:3:26","nodeType":"YulIdentifier","src":"5832:3:26"},"nativeSrc":"5832:19:26","nodeType":"YulFunctionCall","src":"5832:19:26"},{"name":"_1","nativeSrc":"5853:2:26","nodeType":"YulIdentifier","src":"5853:2:26"}],"functionName":{"name":"mstore","nativeSrc":"5825:6:26","nodeType":"YulIdentifier","src":"5825:6:26"},"nativeSrc":"5825:31:26","nodeType":"YulFunctionCall","src":"5825:31:26"},"nativeSrc":"5825:31:26","nodeType":"YulExpressionStatement","src":"5825:31:26"},{"nativeSrc":"5865:84:26","nodeType":"YulVariableDeclaration","src":"5865:84:26","value":{"arguments":[{"name":"memberValue0_4","nativeSrc":"5913:14:26","nodeType":"YulIdentifier","src":"5913:14:26"},{"arguments":[{"name":"headStart","nativeSrc":"5933:9:26","nodeType":"YulIdentifier","src":"5933:9:26"},{"kind":"number","nativeSrc":"5944:3:26","nodeType":"YulLiteral","src":"5944:3:26","type":"","value":"320"}],"functionName":{"name":"add","nativeSrc":"5929:3:26","nodeType":"YulIdentifier","src":"5929:3:26"},"nativeSrc":"5929:19:26","nodeType":"YulFunctionCall","src":"5929:19:26"}],"functionName":{"name":"abi_encode_array_struct_Input_dyn","nativeSrc":"5879:33:26","nodeType":"YulIdentifier","src":"5879:33:26"},"nativeSrc":"5879:70:26","nodeType":"YulFunctionCall","src":"5879:70:26"},"variables":[{"name":"tail_1","nativeSrc":"5869:6:26","nodeType":"YulTypedName","src":"5869:6:26","type":""}]},{"nativeSrc":"5958:45:26","nodeType":"YulVariableDeclaration","src":"5958:45:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5990:6:26","nodeType":"YulIdentifier","src":"5990:6:26"},{"kind":"number","nativeSrc":"5998:3:26","nodeType":"YulLiteral","src":"5998:3:26","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"5986:3:26","nodeType":"YulIdentifier","src":"5986:3:26"},"nativeSrc":"5986:16:26","nodeType":"YulFunctionCall","src":"5986:16:26"}],"functionName":{"name":"mload","nativeSrc":"5980:5:26","nodeType":"YulIdentifier","src":"5980:5:26"},"nativeSrc":"5980:23:26","nodeType":"YulFunctionCall","src":"5980:23:26"},"variables":[{"name":"memberValue0_5","nativeSrc":"5962:14:26","nodeType":"YulTypedName","src":"5962:14:26","type":""}]},{"nativeSrc":"6012:17:26","nodeType":"YulVariableDeclaration","src":"6012:17:26","value":{"arguments":[{"kind":"number","nativeSrc":"6026:2:26","nodeType":"YulLiteral","src":"6026:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6022:3:26","nodeType":"YulIdentifier","src":"6022:3:26"},"nativeSrc":"6022:7:26","nodeType":"YulFunctionCall","src":"6022:7:26"},"variables":[{"name":"_2","nativeSrc":"6016:2:26","nodeType":"YulTypedName","src":"6016:2:26","type":""}]},{"nativeSrc":"6038:13:26","nodeType":"YulVariableDeclaration","src":"6038:13:26","value":{"kind":"number","nativeSrc":"6048:3:26","nodeType":"YulLiteral","src":"6048:3:26","type":"","value":"256"},"variables":[{"name":"_3","nativeSrc":"6042:2:26","nodeType":"YulTypedName","src":"6042:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6071:9:26","nodeType":"YulIdentifier","src":"6071:9:26"},{"name":"_3","nativeSrc":"6082:2:26","nodeType":"YulIdentifier","src":"6082:2:26"}],"functionName":{"name":"add","nativeSrc":"6067:3:26","nodeType":"YulIdentifier","src":"6067:3:26"},"nativeSrc":"6067:18:26","nodeType":"YulFunctionCall","src":"6067:18:26"},{"arguments":[{"arguments":[{"name":"tail_1","nativeSrc":"6095:6:26","nodeType":"YulIdentifier","src":"6095:6:26"},{"name":"headStart","nativeSrc":"6103:9:26","nodeType":"YulIdentifier","src":"6103:9:26"}],"functionName":{"name":"sub","nativeSrc":"6091:3:26","nodeType":"YulIdentifier","src":"6091:3:26"},"nativeSrc":"6091:22:26","nodeType":"YulFunctionCall","src":"6091:22:26"},{"name":"_2","nativeSrc":"6115:2:26","nodeType":"YulIdentifier","src":"6115:2:26"}],"functionName":{"name":"add","nativeSrc":"6087:3:26","nodeType":"YulIdentifier","src":"6087:3:26"},"nativeSrc":"6087:31:26","nodeType":"YulFunctionCall","src":"6087:31:26"}],"functionName":{"name":"mstore","nativeSrc":"6060:6:26","nodeType":"YulIdentifier","src":"6060:6:26"},"nativeSrc":"6060:59:26","nodeType":"YulFunctionCall","src":"6060:59:26"},"nativeSrc":"6060:59:26","nodeType":"YulExpressionStatement","src":"6060:59:26"},{"nativeSrc":"6128:72:26","nodeType":"YulVariableDeclaration","src":"6128:72:26","value":{"arguments":[{"name":"memberValue0_5","nativeSrc":"6177:14:26","nodeType":"YulIdentifier","src":"6177:14:26"},{"name":"tail_1","nativeSrc":"6193:6:26","nodeType":"YulIdentifier","src":"6193:6:26"}],"functionName":{"name":"abi_encode_array_struct_Output_dyn","nativeSrc":"6142:34:26","nodeType":"YulIdentifier","src":"6142:34:26"},"nativeSrc":"6142:58:26","nodeType":"YulFunctionCall","src":"6142:58:26"},"variables":[{"name":"tail_2","nativeSrc":"6132:6:26","nodeType":"YulTypedName","src":"6132:6:26","type":""}]},{"nativeSrc":"6209:44:26","nodeType":"YulVariableDeclaration","src":"6209:44:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"6241:6:26","nodeType":"YulIdentifier","src":"6241:6:26"},{"name":"_3","nativeSrc":"6249:2:26","nodeType":"YulIdentifier","src":"6249:2:26"}],"functionName":{"name":"add","nativeSrc":"6237:3:26","nodeType":"YulIdentifier","src":"6237:3:26"},"nativeSrc":"6237:15:26","nodeType":"YulFunctionCall","src":"6237:15:26"}],"functionName":{"name":"mload","nativeSrc":"6231:5:26","nodeType":"YulIdentifier","src":"6231:5:26"},"nativeSrc":"6231:22:26","nodeType":"YulFunctionCall","src":"6231:22:26"},"variables":[{"name":"memberValue0_6","nativeSrc":"6213:14:26","nodeType":"YulTypedName","src":"6213:14:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6273:9:26","nodeType":"YulIdentifier","src":"6273:9:26"},{"name":"_1","nativeSrc":"6284:2:26","nodeType":"YulIdentifier","src":"6284:2:26"}],"functionName":{"name":"add","nativeSrc":"6269:3:26","nodeType":"YulIdentifier","src":"6269:3:26"},"nativeSrc":"6269:18:26","nodeType":"YulFunctionCall","src":"6269:18:26"},{"arguments":[{"arguments":[{"name":"tail_2","nativeSrc":"6297:6:26","nodeType":"YulIdentifier","src":"6297:6:26"},{"name":"headStart","nativeSrc":"6305:9:26","nodeType":"YulIdentifier","src":"6305:9:26"}],"functionName":{"name":"sub","nativeSrc":"6293:3:26","nodeType":"YulIdentifier","src":"6293:3:26"},"nativeSrc":"6293:22:26","nodeType":"YulFunctionCall","src":"6293:22:26"},{"name":"_2","nativeSrc":"6317:2:26","nodeType":"YulIdentifier","src":"6317:2:26"}],"functionName":{"name":"add","nativeSrc":"6289:3:26","nodeType":"YulIdentifier","src":"6289:3:26"},"nativeSrc":"6289:31:26","nodeType":"YulFunctionCall","src":"6289:31:26"}],"functionName":{"name":"mstore","nativeSrc":"6262:6:26","nodeType":"YulIdentifier","src":"6262:6:26"},"nativeSrc":"6262:59:26","nodeType":"YulFunctionCall","src":"6262:59:26"},"nativeSrc":"6262:59:26","nodeType":"YulExpressionStatement","src":"6262:59:26"},{"nativeSrc":"6330:66:26","nodeType":"YulAssignment","src":"6330:66:26","value":{"arguments":[{"name":"memberValue0_6","nativeSrc":"6373:14:26","nodeType":"YulIdentifier","src":"6373:14:26"},{"name":"tail_2","nativeSrc":"6389:6:26","nodeType":"YulIdentifier","src":"6389:6:26"}],"functionName":{"name":"abi_encode_array_struct_Output_dyn","nativeSrc":"6338:34:26","nodeType":"YulIdentifier","src":"6338:34:26"},"nativeSrc":"6338:58:26","nodeType":"YulFunctionCall","src":"6338:58:26"},"variableNames":[{"name":"tail","nativeSrc":"6330:4:26","nodeType":"YulIdentifier","src":"6330:4:26"}]}]},"name":"abi_encode_tuple_t_struct$_ResolvedCrossChainOrder_$4344_memory_ptr__to_t_struct$_ResolvedCrossChainOrder_$4344_memory_ptr__fromStack_reversed","nativeSrc":"4940:1462:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5092:9:26","nodeType":"YulTypedName","src":"5092:9:26","type":""},{"name":"value0","nativeSrc":"5103:6:26","nodeType":"YulTypedName","src":"5103:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5114:4:26","nodeType":"YulTypedName","src":"5114:4:26","type":""}],"src":"4940:1462:26"},{"body":{"nativeSrc":"6477:116:26","nodeType":"YulBlock","src":"6477:116:26","statements":[{"body":{"nativeSrc":"6523:16:26","nodeType":"YulBlock","src":"6523:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6532:1:26","nodeType":"YulLiteral","src":"6532:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6535:1:26","nodeType":"YulLiteral","src":"6535:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6525:6:26","nodeType":"YulIdentifier","src":"6525:6:26"},"nativeSrc":"6525:12:26","nodeType":"YulFunctionCall","src":"6525:12:26"},"nativeSrc":"6525:12:26","nodeType":"YulExpressionStatement","src":"6525:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6498:7:26","nodeType":"YulIdentifier","src":"6498:7:26"},{"name":"headStart","nativeSrc":"6507:9:26","nodeType":"YulIdentifier","src":"6507:9:26"}],"functionName":{"name":"sub","nativeSrc":"6494:3:26","nodeType":"YulIdentifier","src":"6494:3:26"},"nativeSrc":"6494:23:26","nodeType":"YulFunctionCall","src":"6494:23:26"},{"kind":"number","nativeSrc":"6519:2:26","nodeType":"YulLiteral","src":"6519:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6490:3:26","nodeType":"YulIdentifier","src":"6490:3:26"},"nativeSrc":"6490:32:26","nodeType":"YulFunctionCall","src":"6490:32:26"},"nativeSrc":"6487:52:26","nodeType":"YulIf","src":"6487:52:26"},{"nativeSrc":"6548:39:26","nodeType":"YulAssignment","src":"6548:39:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6577:9:26","nodeType":"YulIdentifier","src":"6577:9:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6558:18:26","nodeType":"YulIdentifier","src":"6558:18:26"},"nativeSrc":"6558:29:26","nodeType":"YulFunctionCall","src":"6558:29:26"},"variableNames":[{"name":"value0","nativeSrc":"6548:6:26","nodeType":"YulIdentifier","src":"6548:6:26"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"6407:186:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6443:9:26","nodeType":"YulTypedName","src":"6443:9:26","type":""},{"name":"dataEnd","nativeSrc":"6454:7:26","nodeType":"YulTypedName","src":"6454:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6466:6:26","nodeType":"YulTypedName","src":"6466:6:26","type":""}],"src":"6407:186:26"},{"body":{"nativeSrc":"6699:76:26","nodeType":"YulBlock","src":"6699:76:26","statements":[{"nativeSrc":"6709:26:26","nodeType":"YulAssignment","src":"6709:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6721:9:26","nodeType":"YulIdentifier","src":"6721:9:26"},{"kind":"number","nativeSrc":"6732:2:26","nodeType":"YulLiteral","src":"6732:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6717:3:26","nodeType":"YulIdentifier","src":"6717:3:26"},"nativeSrc":"6717:18:26","nodeType":"YulFunctionCall","src":"6717:18:26"},"variableNames":[{"name":"tail","nativeSrc":"6709:4:26","nodeType":"YulIdentifier","src":"6709:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6751:9:26","nodeType":"YulIdentifier","src":"6751:9:26"},{"name":"value0","nativeSrc":"6762:6:26","nodeType":"YulIdentifier","src":"6762:6:26"}],"functionName":{"name":"mstore","nativeSrc":"6744:6:26","nodeType":"YulIdentifier","src":"6744:6:26"},"nativeSrc":"6744:25:26","nodeType":"YulFunctionCall","src":"6744:25:26"},"nativeSrc":"6744:25:26","nodeType":"YulExpressionStatement","src":"6744:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"6598:177:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6668:9:26","nodeType":"YulTypedName","src":"6668:9:26","type":""},{"name":"value0","nativeSrc":"6679:6:26","nodeType":"YulTypedName","src":"6679:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6690:4:26","nodeType":"YulTypedName","src":"6690:4:26","type":""}],"src":"6598:177:26"},{"body":{"nativeSrc":"6812:95:26","nodeType":"YulBlock","src":"6812:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6829:1:26","nodeType":"YulLiteral","src":"6829:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6836:3:26","nodeType":"YulLiteral","src":"6836:3:26","type":"","value":"224"},{"kind":"number","nativeSrc":"6841:10:26","nodeType":"YulLiteral","src":"6841:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6832:3:26","nodeType":"YulIdentifier","src":"6832:3:26"},"nativeSrc":"6832:20:26","nodeType":"YulFunctionCall","src":"6832:20:26"}],"functionName":{"name":"mstore","nativeSrc":"6822:6:26","nodeType":"YulIdentifier","src":"6822:6:26"},"nativeSrc":"6822:31:26","nodeType":"YulFunctionCall","src":"6822:31:26"},"nativeSrc":"6822:31:26","nodeType":"YulExpressionStatement","src":"6822:31:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6869:1:26","nodeType":"YulLiteral","src":"6869:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"6872:4:26","nodeType":"YulLiteral","src":"6872:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"6862:6:26","nodeType":"YulIdentifier","src":"6862:6:26"},"nativeSrc":"6862:15:26","nodeType":"YulFunctionCall","src":"6862:15:26"},"nativeSrc":"6862:15:26","nodeType":"YulExpressionStatement","src":"6862:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6893:1:26","nodeType":"YulLiteral","src":"6893:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"6896:4:26","nodeType":"YulLiteral","src":"6896:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6886:6:26","nodeType":"YulIdentifier","src":"6886:6:26"},"nativeSrc":"6886:15:26","nodeType":"YulFunctionCall","src":"6886:15:26"},"nativeSrc":"6886:15:26","nodeType":"YulExpressionStatement","src":"6886:15:26"}]},"name":"panic_error_0x41","nativeSrc":"6780:127:26","nodeType":"YulFunctionDefinition","src":"6780:127:26"},{"body":{"nativeSrc":"6953:207:26","nodeType":"YulBlock","src":"6953:207:26","statements":[{"nativeSrc":"6963:19:26","nodeType":"YulAssignment","src":"6963:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"6979:2:26","nodeType":"YulLiteral","src":"6979:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"6973:5:26","nodeType":"YulIdentifier","src":"6973:5:26"},"nativeSrc":"6973:9:26","nodeType":"YulFunctionCall","src":"6973:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"6963:6:26","nodeType":"YulIdentifier","src":"6963:6:26"}]},{"nativeSrc":"6991:35:26","nodeType":"YulVariableDeclaration","src":"6991:35:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"7013:6:26","nodeType":"YulIdentifier","src":"7013:6:26"},{"kind":"number","nativeSrc":"7021:4:26","nodeType":"YulLiteral","src":"7021:4:26","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"7009:3:26","nodeType":"YulIdentifier","src":"7009:3:26"},"nativeSrc":"7009:17:26","nodeType":"YulFunctionCall","src":"7009:17:26"},"variables":[{"name":"newFreePtr","nativeSrc":"6995:10:26","nodeType":"YulTypedName","src":"6995:10:26","type":""}]},{"body":{"nativeSrc":"7101:22:26","nodeType":"YulBlock","src":"7101:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7103:16:26","nodeType":"YulIdentifier","src":"7103:16:26"},"nativeSrc":"7103:18:26","nodeType":"YulFunctionCall","src":"7103:18:26"},"nativeSrc":"7103:18:26","nodeType":"YulExpressionStatement","src":"7103:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7044:10:26","nodeType":"YulIdentifier","src":"7044:10:26"},{"kind":"number","nativeSrc":"7056:18:26","nodeType":"YulLiteral","src":"7056:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7041:2:26","nodeType":"YulIdentifier","src":"7041:2:26"},"nativeSrc":"7041:34:26","nodeType":"YulFunctionCall","src":"7041:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7080:10:26","nodeType":"YulIdentifier","src":"7080:10:26"},{"name":"memPtr","nativeSrc":"7092:6:26","nodeType":"YulIdentifier","src":"7092:6:26"}],"functionName":{"name":"lt","nativeSrc":"7077:2:26","nodeType":"YulIdentifier","src":"7077:2:26"},"nativeSrc":"7077:22:26","nodeType":"YulFunctionCall","src":"7077:22:26"}],"functionName":{"name":"or","nativeSrc":"7038:2:26","nodeType":"YulIdentifier","src":"7038:2:26"},"nativeSrc":"7038:62:26","nodeType":"YulFunctionCall","src":"7038:62:26"},"nativeSrc":"7035:88:26","nodeType":"YulIf","src":"7035:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7139:2:26","nodeType":"YulLiteral","src":"7139:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7143:10:26","nodeType":"YulIdentifier","src":"7143:10:26"}],"functionName":{"name":"mstore","nativeSrc":"7132:6:26","nodeType":"YulIdentifier","src":"7132:6:26"},"nativeSrc":"7132:22:26","nodeType":"YulFunctionCall","src":"7132:22:26"},"nativeSrc":"7132:22:26","nodeType":"YulExpressionStatement","src":"7132:22:26"}]},"name":"allocate_memory","nativeSrc":"6912:248:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"6942:6:26","nodeType":"YulTypedName","src":"6942:6:26","type":""}],"src":"6912:248:26"},{"body":{"nativeSrc":"7213:115:26","nodeType":"YulBlock","src":"7213:115:26","statements":[{"nativeSrc":"7223:29:26","nodeType":"YulAssignment","src":"7223:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"7245:6:26","nodeType":"YulIdentifier","src":"7245:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"7232:12:26","nodeType":"YulIdentifier","src":"7232:12:26"},"nativeSrc":"7232:20:26","nodeType":"YulFunctionCall","src":"7232:20:26"},"variableNames":[{"name":"value","nativeSrc":"7223:5:26","nodeType":"YulIdentifier","src":"7223:5:26"}]},{"body":{"nativeSrc":"7306:16:26","nodeType":"YulBlock","src":"7306:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7315:1:26","nodeType":"YulLiteral","src":"7315:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"7318:1:26","nodeType":"YulLiteral","src":"7318:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7308:6:26","nodeType":"YulIdentifier","src":"7308:6:26"},"nativeSrc":"7308:12:26","nodeType":"YulFunctionCall","src":"7308:12:26"},"nativeSrc":"7308:12:26","nodeType":"YulExpressionStatement","src":"7308:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7274:5:26","nodeType":"YulIdentifier","src":"7274:5:26"},{"arguments":[{"name":"value","nativeSrc":"7285:5:26","nodeType":"YulIdentifier","src":"7285:5:26"},{"kind":"number","nativeSrc":"7292:10:26","nodeType":"YulLiteral","src":"7292:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"7281:3:26","nodeType":"YulIdentifier","src":"7281:3:26"},"nativeSrc":"7281:22:26","nodeType":"YulFunctionCall","src":"7281:22:26"}],"functionName":{"name":"eq","nativeSrc":"7271:2:26","nodeType":"YulIdentifier","src":"7271:2:26"},"nativeSrc":"7271:33:26","nodeType":"YulFunctionCall","src":"7271:33:26"}],"functionName":{"name":"iszero","nativeSrc":"7264:6:26","nodeType":"YulIdentifier","src":"7264:6:26"},"nativeSrc":"7264:41:26","nodeType":"YulFunctionCall","src":"7264:41:26"},"nativeSrc":"7261:61:26","nodeType":"YulIf","src":"7261:61:26"}]},"name":"abi_decode_uint32","nativeSrc":"7165:163:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7192:6:26","nodeType":"YulTypedName","src":"7192:6:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7203:5:26","nodeType":"YulTypedName","src":"7203:5:26","type":""}],"src":"7165:163:26"},{"body":{"nativeSrc":"7385:666:26","nodeType":"YulBlock","src":"7385:666:26","statements":[{"body":{"nativeSrc":"7434:16:26","nodeType":"YulBlock","src":"7434:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7443:1:26","nodeType":"YulLiteral","src":"7443:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"7446:1:26","nodeType":"YulLiteral","src":"7446:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7436:6:26","nodeType":"YulIdentifier","src":"7436:6:26"},"nativeSrc":"7436:12:26","nodeType":"YulFunctionCall","src":"7436:12:26"},"nativeSrc":"7436:12:26","nodeType":"YulExpressionStatement","src":"7436:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7413:6:26","nodeType":"YulIdentifier","src":"7413:6:26"},{"kind":"number","nativeSrc":"7421:4:26","nodeType":"YulLiteral","src":"7421:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7409:3:26","nodeType":"YulIdentifier","src":"7409:3:26"},"nativeSrc":"7409:17:26","nodeType":"YulFunctionCall","src":"7409:17:26"},{"name":"end","nativeSrc":"7428:3:26","nodeType":"YulIdentifier","src":"7428:3:26"}],"functionName":{"name":"slt","nativeSrc":"7405:3:26","nodeType":"YulIdentifier","src":"7405:3:26"},"nativeSrc":"7405:27:26","nodeType":"YulFunctionCall","src":"7405:27:26"}],"functionName":{"name":"iszero","nativeSrc":"7398:6:26","nodeType":"YulIdentifier","src":"7398:6:26"},"nativeSrc":"7398:35:26","nodeType":"YulFunctionCall","src":"7398:35:26"},"nativeSrc":"7395:55:26","nodeType":"YulIf","src":"7395:55:26"},{"nativeSrc":"7459:30:26","nodeType":"YulVariableDeclaration","src":"7459:30:26","value":{"arguments":[{"name":"offset","nativeSrc":"7482:6:26","nodeType":"YulIdentifier","src":"7482:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"7469:12:26","nodeType":"YulIdentifier","src":"7469:12:26"},"nativeSrc":"7469:20:26","nodeType":"YulFunctionCall","src":"7469:20:26"},"variables":[{"name":"_1","nativeSrc":"7463:2:26","nodeType":"YulTypedName","src":"7463:2:26","type":""}]},{"nativeSrc":"7498:28:26","nodeType":"YulVariableDeclaration","src":"7498:28:26","value":{"kind":"number","nativeSrc":"7508:18:26","nodeType":"YulLiteral","src":"7508:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"7502:2:26","nodeType":"YulTypedName","src":"7502:2:26","type":""}]},{"body":{"nativeSrc":"7549:22:26","nodeType":"YulBlock","src":"7549:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7551:16:26","nodeType":"YulIdentifier","src":"7551:16:26"},"nativeSrc":"7551:18:26","nodeType":"YulFunctionCall","src":"7551:18:26"},"nativeSrc":"7551:18:26","nodeType":"YulExpressionStatement","src":"7551:18:26"}]},"condition":{"arguments":[{"name":"_1","nativeSrc":"7541:2:26","nodeType":"YulIdentifier","src":"7541:2:26"},{"name":"_2","nativeSrc":"7545:2:26","nodeType":"YulIdentifier","src":"7545:2:26"}],"functionName":{"name":"gt","nativeSrc":"7538:2:26","nodeType":"YulIdentifier","src":"7538:2:26"},"nativeSrc":"7538:10:26","nodeType":"YulFunctionCall","src":"7538:10:26"},"nativeSrc":"7535:36:26","nodeType":"YulIf","src":"7535:36:26"},{"nativeSrc":"7580:17:26","nodeType":"YulVariableDeclaration","src":"7580:17:26","value":{"arguments":[{"kind":"number","nativeSrc":"7594:2:26","nodeType":"YulLiteral","src":"7594:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"7590:3:26","nodeType":"YulIdentifier","src":"7590:3:26"},"nativeSrc":"7590:7:26","nodeType":"YulFunctionCall","src":"7590:7:26"},"variables":[{"name":"_3","nativeSrc":"7584:2:26","nodeType":"YulTypedName","src":"7584:2:26","type":""}]},{"nativeSrc":"7606:23:26","nodeType":"YulVariableDeclaration","src":"7606:23:26","value":{"arguments":[{"kind":"number","nativeSrc":"7626:2:26","nodeType":"YulLiteral","src":"7626:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"7620:5:26","nodeType":"YulIdentifier","src":"7620:5:26"},"nativeSrc":"7620:9:26","nodeType":"YulFunctionCall","src":"7620:9:26"},"variables":[{"name":"memPtr","nativeSrc":"7610:6:26","nodeType":"YulTypedName","src":"7610:6:26","type":""}]},{"nativeSrc":"7638:71:26","nodeType":"YulVariableDeclaration","src":"7638:71:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"7660:6:26","nodeType":"YulIdentifier","src":"7660:6:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"7684:2:26","nodeType":"YulIdentifier","src":"7684:2:26"},{"kind":"number","nativeSrc":"7688:4:26","nodeType":"YulLiteral","src":"7688:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7680:3:26","nodeType":"YulIdentifier","src":"7680:3:26"},"nativeSrc":"7680:13:26","nodeType":"YulFunctionCall","src":"7680:13:26"},{"name":"_3","nativeSrc":"7695:2:26","nodeType":"YulIdentifier","src":"7695:2:26"}],"functionName":{"name":"and","nativeSrc":"7676:3:26","nodeType":"YulIdentifier","src":"7676:3:26"},"nativeSrc":"7676:22:26","nodeType":"YulFunctionCall","src":"7676:22:26"},{"kind":"number","nativeSrc":"7700:2:26","nodeType":"YulLiteral","src":"7700:2:26","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"7672:3:26","nodeType":"YulIdentifier","src":"7672:3:26"},"nativeSrc":"7672:31:26","nodeType":"YulFunctionCall","src":"7672:31:26"},{"name":"_3","nativeSrc":"7705:2:26","nodeType":"YulIdentifier","src":"7705:2:26"}],"functionName":{"name":"and","nativeSrc":"7668:3:26","nodeType":"YulIdentifier","src":"7668:3:26"},"nativeSrc":"7668:40:26","nodeType":"YulFunctionCall","src":"7668:40:26"}],"functionName":{"name":"add","nativeSrc":"7656:3:26","nodeType":"YulIdentifier","src":"7656:3:26"},"nativeSrc":"7656:53:26","nodeType":"YulFunctionCall","src":"7656:53:26"},"variables":[{"name":"newFreePtr","nativeSrc":"7642:10:26","nodeType":"YulTypedName","src":"7642:10:26","type":""}]},{"body":{"nativeSrc":"7768:22:26","nodeType":"YulBlock","src":"7768:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7770:16:26","nodeType":"YulIdentifier","src":"7770:16:26"},"nativeSrc":"7770:18:26","nodeType":"YulFunctionCall","src":"7770:18:26"},"nativeSrc":"7770:18:26","nodeType":"YulExpressionStatement","src":"7770:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7727:10:26","nodeType":"YulIdentifier","src":"7727:10:26"},{"name":"_2","nativeSrc":"7739:2:26","nodeType":"YulIdentifier","src":"7739:2:26"}],"functionName":{"name":"gt","nativeSrc":"7724:2:26","nodeType":"YulIdentifier","src":"7724:2:26"},"nativeSrc":"7724:18:26","nodeType":"YulFunctionCall","src":"7724:18:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7747:10:26","nodeType":"YulIdentifier","src":"7747:10:26"},{"name":"memPtr","nativeSrc":"7759:6:26","nodeType":"YulIdentifier","src":"7759:6:26"}],"functionName":{"name":"lt","nativeSrc":"7744:2:26","nodeType":"YulIdentifier","src":"7744:2:26"},"nativeSrc":"7744:22:26","nodeType":"YulFunctionCall","src":"7744:22:26"}],"functionName":{"name":"or","nativeSrc":"7721:2:26","nodeType":"YulIdentifier","src":"7721:2:26"},"nativeSrc":"7721:46:26","nodeType":"YulFunctionCall","src":"7721:46:26"},"nativeSrc":"7718:72:26","nodeType":"YulIf","src":"7718:72:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7806:2:26","nodeType":"YulLiteral","src":"7806:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7810:10:26","nodeType":"YulIdentifier","src":"7810:10:26"}],"functionName":{"name":"mstore","nativeSrc":"7799:6:26","nodeType":"YulIdentifier","src":"7799:6:26"},"nativeSrc":"7799:22:26","nodeType":"YulFunctionCall","src":"7799:22:26"},"nativeSrc":"7799:22:26","nodeType":"YulExpressionStatement","src":"7799:22:26"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"7837:6:26","nodeType":"YulIdentifier","src":"7837:6:26"},{"name":"_1","nativeSrc":"7845:2:26","nodeType":"YulIdentifier","src":"7845:2:26"}],"functionName":{"name":"mstore","nativeSrc":"7830:6:26","nodeType":"YulIdentifier","src":"7830:6:26"},"nativeSrc":"7830:18:26","nodeType":"YulFunctionCall","src":"7830:18:26"},"nativeSrc":"7830:18:26","nodeType":"YulExpressionStatement","src":"7830:18:26"},{"body":{"nativeSrc":"7896:16:26","nodeType":"YulBlock","src":"7896:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7905:1:26","nodeType":"YulLiteral","src":"7905:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"7908:1:26","nodeType":"YulLiteral","src":"7908:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7898:6:26","nodeType":"YulIdentifier","src":"7898:6:26"},"nativeSrc":"7898:12:26","nodeType":"YulFunctionCall","src":"7898:12:26"},"nativeSrc":"7898:12:26","nodeType":"YulExpressionStatement","src":"7898:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7871:6:26","nodeType":"YulIdentifier","src":"7871:6:26"},{"name":"_1","nativeSrc":"7879:2:26","nodeType":"YulIdentifier","src":"7879:2:26"}],"functionName":{"name":"add","nativeSrc":"7867:3:26","nodeType":"YulIdentifier","src":"7867:3:26"},"nativeSrc":"7867:15:26","nodeType":"YulFunctionCall","src":"7867:15:26"},{"kind":"number","nativeSrc":"7884:4:26","nodeType":"YulLiteral","src":"7884:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7863:3:26","nodeType":"YulIdentifier","src":"7863:3:26"},"nativeSrc":"7863:26:26","nodeType":"YulFunctionCall","src":"7863:26:26"},{"name":"end","nativeSrc":"7891:3:26","nodeType":"YulIdentifier","src":"7891:3:26"}],"functionName":{"name":"gt","nativeSrc":"7860:2:26","nodeType":"YulIdentifier","src":"7860:2:26"},"nativeSrc":"7860:35:26","nodeType":"YulFunctionCall","src":"7860:35:26"},"nativeSrc":"7857:55:26","nodeType":"YulIf","src":"7857:55:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7938:6:26","nodeType":"YulIdentifier","src":"7938:6:26"},{"kind":"number","nativeSrc":"7946:4:26","nodeType":"YulLiteral","src":"7946:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7934:3:26","nodeType":"YulIdentifier","src":"7934:3:26"},"nativeSrc":"7934:17:26","nodeType":"YulFunctionCall","src":"7934:17:26"},{"arguments":[{"name":"offset","nativeSrc":"7957:6:26","nodeType":"YulIdentifier","src":"7957:6:26"},{"kind":"number","nativeSrc":"7965:4:26","nodeType":"YulLiteral","src":"7965:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7953:3:26","nodeType":"YulIdentifier","src":"7953:3:26"},"nativeSrc":"7953:17:26","nodeType":"YulFunctionCall","src":"7953:17:26"},{"name":"_1","nativeSrc":"7972:2:26","nodeType":"YulIdentifier","src":"7972:2:26"}],"functionName":{"name":"calldatacopy","nativeSrc":"7921:12:26","nodeType":"YulIdentifier","src":"7921:12:26"},"nativeSrc":"7921:54:26","nodeType":"YulFunctionCall","src":"7921:54:26"},"nativeSrc":"7921:54:26","nodeType":"YulExpressionStatement","src":"7921:54:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7999:6:26","nodeType":"YulIdentifier","src":"7999:6:26"},{"name":"_1","nativeSrc":"8007:2:26","nodeType":"YulIdentifier","src":"8007:2:26"}],"functionName":{"name":"add","nativeSrc":"7995:3:26","nodeType":"YulIdentifier","src":"7995:3:26"},"nativeSrc":"7995:15:26","nodeType":"YulFunctionCall","src":"7995:15:26"},{"kind":"number","nativeSrc":"8012:4:26","nodeType":"YulLiteral","src":"8012:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7991:3:26","nodeType":"YulIdentifier","src":"7991:3:26"},"nativeSrc":"7991:26:26","nodeType":"YulFunctionCall","src":"7991:26:26"},{"kind":"number","nativeSrc":"8019:1:26","nodeType":"YulLiteral","src":"8019:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7984:6:26","nodeType":"YulIdentifier","src":"7984:6:26"},"nativeSrc":"7984:37:26","nodeType":"YulFunctionCall","src":"7984:37:26"},"nativeSrc":"7984:37:26","nodeType":"YulExpressionStatement","src":"7984:37:26"},{"nativeSrc":"8030:15:26","nodeType":"YulAssignment","src":"8030:15:26","value":{"name":"memPtr","nativeSrc":"8039:6:26","nodeType":"YulIdentifier","src":"8039:6:26"},"variableNames":[{"name":"array","nativeSrc":"8030:5:26","nodeType":"YulIdentifier","src":"8030:5:26"}]}]},"name":"abi_decode_bytes","nativeSrc":"7333:718:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7359:6:26","nodeType":"YulTypedName","src":"7359:6:26","type":""},{"name":"end","nativeSrc":"7367:3:26","nodeType":"YulTypedName","src":"7367:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7375:5:26","nodeType":"YulTypedName","src":"7375:5:26","type":""}],"src":"7333:718:26"},{"body":{"nativeSrc":"8188:733:26","nodeType":"YulBlock","src":"8188:733:26","statements":[{"body":{"nativeSrc":"8239:16:26","nodeType":"YulBlock","src":"8239:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8248:1:26","nodeType":"YulLiteral","src":"8248:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"8251:1:26","nodeType":"YulLiteral","src":"8251:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8241:6:26","nodeType":"YulIdentifier","src":"8241:6:26"},"nativeSrc":"8241:12:26","nodeType":"YulFunctionCall","src":"8241:12:26"},"nativeSrc":"8241:12:26","nodeType":"YulExpressionStatement","src":"8241:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"8209:12:26","nodeType":"YulIdentifier","src":"8209:12:26"},"nativeSrc":"8209:14:26","nodeType":"YulFunctionCall","src":"8209:14:26"},{"name":"value","nativeSrc":"8225:5:26","nodeType":"YulIdentifier","src":"8225:5:26"}],"functionName":{"name":"sub","nativeSrc":"8205:3:26","nodeType":"YulIdentifier","src":"8205:3:26"},"nativeSrc":"8205:26:26","nodeType":"YulFunctionCall","src":"8205:26:26"},{"kind":"number","nativeSrc":"8233:4:26","nodeType":"YulLiteral","src":"8233:4:26","type":"","value":"0xe0"}],"functionName":{"name":"slt","nativeSrc":"8201:3:26","nodeType":"YulIdentifier","src":"8201:3:26"},"nativeSrc":"8201:37:26","nodeType":"YulFunctionCall","src":"8201:37:26"},"nativeSrc":"8198:57:26","nodeType":"YulIf","src":"8198:57:26"},{"nativeSrc":"8264:32:26","nodeType":"YulVariableDeclaration","src":"8264:32:26","value":{"arguments":[],"functionName":{"name":"allocate_memory","nativeSrc":"8279:15:26","nodeType":"YulIdentifier","src":"8279:15:26"},"nativeSrc":"8279:17:26","nodeType":"YulFunctionCall","src":"8279:17:26"},"variables":[{"name":"value_1","nativeSrc":"8268:7:26","nodeType":"YulTypedName","src":"8268:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"8312:7:26","nodeType":"YulIdentifier","src":"8312:7:26"},{"arguments":[{"name":"value","nativeSrc":"8340:5:26","nodeType":"YulIdentifier","src":"8340:5:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8321:18:26","nodeType":"YulIdentifier","src":"8321:18:26"},"nativeSrc":"8321:25:26","nodeType":"YulFunctionCall","src":"8321:25:26"}],"functionName":{"name":"mstore","nativeSrc":"8305:6:26","nodeType":"YulIdentifier","src":"8305:6:26"},"nativeSrc":"8305:42:26","nodeType":"YulFunctionCall","src":"8305:42:26"},"nativeSrc":"8305:42:26","nodeType":"YulExpressionStatement","src":"8305:42:26"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"8367:7:26","nodeType":"YulIdentifier","src":"8367:7:26"},{"kind":"number","nativeSrc":"8376:2:26","nodeType":"YulLiteral","src":"8376:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8363:3:26","nodeType":"YulIdentifier","src":"8363:3:26"},"nativeSrc":"8363:16:26","nodeType":"YulFunctionCall","src":"8363:16:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8404:5:26","nodeType":"YulIdentifier","src":"8404:5:26"},{"kind":"number","nativeSrc":"8411:2:26","nodeType":"YulLiteral","src":"8411:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8400:3:26","nodeType":"YulIdentifier","src":"8400:3:26"},"nativeSrc":"8400:14:26","nodeType":"YulFunctionCall","src":"8400:14:26"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8381:18:26","nodeType":"YulIdentifier","src":"8381:18:26"},"nativeSrc":"8381:34:26","nodeType":"YulFunctionCall","src":"8381:34:26"}],"functionName":{"name":"mstore","nativeSrc":"8356:6:26","nodeType":"YulIdentifier","src":"8356:6:26"},"nativeSrc":"8356:60:26","nodeType":"YulFunctionCall","src":"8356:60:26"},"nativeSrc":"8356:60:26","nodeType":"YulExpressionStatement","src":"8356:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"8436:7:26","nodeType":"YulIdentifier","src":"8436:7:26"},{"kind":"number","nativeSrc":"8445:2:26","nodeType":"YulLiteral","src":"8445:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8432:3:26","nodeType":"YulIdentifier","src":"8432:3:26"},"nativeSrc":"8432:16:26","nodeType":"YulFunctionCall","src":"8432:16:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8467:5:26","nodeType":"YulIdentifier","src":"8467:5:26"},{"kind":"number","nativeSrc":"8474:2:26","nodeType":"YulLiteral","src":"8474:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8463:3:26","nodeType":"YulIdentifier","src":"8463:3:26"},"nativeSrc":"8463:14:26","nodeType":"YulFunctionCall","src":"8463:14:26"}],"functionName":{"name":"calldataload","nativeSrc":"8450:12:26","nodeType":"YulIdentifier","src":"8450:12:26"},"nativeSrc":"8450:28:26","nodeType":"YulFunctionCall","src":"8450:28:26"}],"functionName":{"name":"mstore","nativeSrc":"8425:6:26","nodeType":"YulIdentifier","src":"8425:6:26"},"nativeSrc":"8425:54:26","nodeType":"YulFunctionCall","src":"8425:54:26"},"nativeSrc":"8425:54:26","nodeType":"YulExpressionStatement","src":"8425:54:26"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"8499:7:26","nodeType":"YulIdentifier","src":"8499:7:26"},{"kind":"number","nativeSrc":"8508:2:26","nodeType":"YulLiteral","src":"8508:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8495:3:26","nodeType":"YulIdentifier","src":"8495:3:26"},"nativeSrc":"8495:16:26","nodeType":"YulFunctionCall","src":"8495:16:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8535:5:26","nodeType":"YulIdentifier","src":"8535:5:26"},{"kind":"number","nativeSrc":"8542:2:26","nodeType":"YulLiteral","src":"8542:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8531:3:26","nodeType":"YulIdentifier","src":"8531:3:26"},"nativeSrc":"8531:14:26","nodeType":"YulFunctionCall","src":"8531:14:26"}],"functionName":{"name":"abi_decode_uint32","nativeSrc":"8513:17:26","nodeType":"YulIdentifier","src":"8513:17:26"},"nativeSrc":"8513:33:26","nodeType":"YulFunctionCall","src":"8513:33:26"}],"functionName":{"name":"mstore","nativeSrc":"8488:6:26","nodeType":"YulIdentifier","src":"8488:6:26"},"nativeSrc":"8488:59:26","nodeType":"YulFunctionCall","src":"8488:59:26"},"nativeSrc":"8488:59:26","nodeType":"YulExpressionStatement","src":"8488:59:26"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"8567:7:26","nodeType":"YulIdentifier","src":"8567:7:26"},{"kind":"number","nativeSrc":"8576:3:26","nodeType":"YulLiteral","src":"8576:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8563:3:26","nodeType":"YulIdentifier","src":"8563:3:26"},"nativeSrc":"8563:17:26","nodeType":"YulFunctionCall","src":"8563:17:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8604:5:26","nodeType":"YulIdentifier","src":"8604:5:26"},{"kind":"number","nativeSrc":"8611:3:26","nodeType":"YulLiteral","src":"8611:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8600:3:26","nodeType":"YulIdentifier","src":"8600:3:26"},"nativeSrc":"8600:15:26","nodeType":"YulFunctionCall","src":"8600:15:26"}],"functionName":{"name":"abi_decode_uint32","nativeSrc":"8582:17:26","nodeType":"YulIdentifier","src":"8582:17:26"},"nativeSrc":"8582:34:26","nodeType":"YulFunctionCall","src":"8582:34:26"}],"functionName":{"name":"mstore","nativeSrc":"8556:6:26","nodeType":"YulIdentifier","src":"8556:6:26"},"nativeSrc":"8556:61:26","nodeType":"YulFunctionCall","src":"8556:61:26"},"nativeSrc":"8556:61:26","nodeType":"YulExpressionStatement","src":"8556:61:26"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"8637:7:26","nodeType":"YulIdentifier","src":"8637:7:26"},{"kind":"number","nativeSrc":"8646:3:26","nodeType":"YulLiteral","src":"8646:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8633:3:26","nodeType":"YulIdentifier","src":"8633:3:26"},"nativeSrc":"8633:17:26","nodeType":"YulFunctionCall","src":"8633:17:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8674:5:26","nodeType":"YulIdentifier","src":"8674:5:26"},{"kind":"number","nativeSrc":"8681:3:26","nodeType":"YulLiteral","src":"8681:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8670:3:26","nodeType":"YulIdentifier","src":"8670:3:26"},"nativeSrc":"8670:15:26","nodeType":"YulFunctionCall","src":"8670:15:26"}],"functionName":{"name":"abi_decode_uint32","nativeSrc":"8652:17:26","nodeType":"YulIdentifier","src":"8652:17:26"},"nativeSrc":"8652:34:26","nodeType":"YulFunctionCall","src":"8652:34:26"}],"functionName":{"name":"mstore","nativeSrc":"8626:6:26","nodeType":"YulIdentifier","src":"8626:6:26"},"nativeSrc":"8626:61:26","nodeType":"YulFunctionCall","src":"8626:61:26"},"nativeSrc":"8626:61:26","nodeType":"YulExpressionStatement","src":"8626:61:26"},{"nativeSrc":"8696:43:26","nodeType":"YulVariableDeclaration","src":"8696:43:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8727:5:26","nodeType":"YulIdentifier","src":"8727:5:26"},{"kind":"number","nativeSrc":"8734:3:26","nodeType":"YulLiteral","src":"8734:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8723:3:26","nodeType":"YulIdentifier","src":"8723:3:26"},"nativeSrc":"8723:15:26","nodeType":"YulFunctionCall","src":"8723:15:26"}],"functionName":{"name":"calldataload","nativeSrc":"8710:12:26","nodeType":"YulIdentifier","src":"8710:12:26"},"nativeSrc":"8710:29:26","nodeType":"YulFunctionCall","src":"8710:29:26"},"variables":[{"name":"offset","nativeSrc":"8700:6:26","nodeType":"YulTypedName","src":"8700:6:26","type":""}]},{"body":{"nativeSrc":"8782:16:26","nodeType":"YulBlock","src":"8782:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8791:1:26","nodeType":"YulLiteral","src":"8791:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"8794:1:26","nodeType":"YulLiteral","src":"8794:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8784:6:26","nodeType":"YulIdentifier","src":"8784:6:26"},"nativeSrc":"8784:12:26","nodeType":"YulFunctionCall","src":"8784:12:26"},"nativeSrc":"8784:12:26","nodeType":"YulExpressionStatement","src":"8784:12:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8754:6:26","nodeType":"YulIdentifier","src":"8754:6:26"},{"kind":"number","nativeSrc":"8762:18:26","nodeType":"YulLiteral","src":"8762:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8751:2:26","nodeType":"YulIdentifier","src":"8751:2:26"},"nativeSrc":"8751:30:26","nodeType":"YulFunctionCall","src":"8751:30:26"},"nativeSrc":"8748:50:26","nodeType":"YulIf","src":"8748:50:26"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"8818:7:26","nodeType":"YulIdentifier","src":"8818:7:26"},{"kind":"number","nativeSrc":"8827:3:26","nodeType":"YulLiteral","src":"8827:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8814:3:26","nodeType":"YulIdentifier","src":"8814:3:26"},"nativeSrc":"8814:17:26","nodeType":"YulFunctionCall","src":"8814:17:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8854:5:26","nodeType":"YulIdentifier","src":"8854:5:26"},{"name":"offset","nativeSrc":"8861:6:26","nodeType":"YulIdentifier","src":"8861:6:26"}],"functionName":{"name":"add","nativeSrc":"8850:3:26","nodeType":"YulIdentifier","src":"8850:3:26"},"nativeSrc":"8850:18:26","nodeType":"YulFunctionCall","src":"8850:18:26"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"8870:12:26","nodeType":"YulIdentifier","src":"8870:12:26"},"nativeSrc":"8870:14:26","nodeType":"YulFunctionCall","src":"8870:14:26"}],"functionName":{"name":"abi_decode_bytes","nativeSrc":"8833:16:26","nodeType":"YulIdentifier","src":"8833:16:26"},"nativeSrc":"8833:52:26","nodeType":"YulFunctionCall","src":"8833:52:26"}],"functionName":{"name":"mstore","nativeSrc":"8807:6:26","nodeType":"YulIdentifier","src":"8807:6:26"},"nativeSrc":"8807:79:26","nodeType":"YulFunctionCall","src":"8807:79:26"},"nativeSrc":"8807:79:26","nodeType":"YulExpressionStatement","src":"8807:79:26"},{"nativeSrc":"8895:20:26","nodeType":"YulAssignment","src":"8895:20:26","value":{"name":"value_1","nativeSrc":"8908:7:26","nodeType":"YulIdentifier","src":"8908:7:26"},"variableNames":[{"name":"converted","nativeSrc":"8895:9:26","nodeType":"YulIdentifier","src":"8895:9:26"}]}]},"name":"convert_t_struct$_CrossChainOrder_$4309_calldata_ptr_to_t_struct$_CrossChainOrder_$4309_memory_ptr","nativeSrc":"8056:865:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8164:5:26","nodeType":"YulTypedName","src":"8164:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"8174:9:26","nodeType":"YulTypedName","src":"8174:9:26","type":""}],"src":"8056:865:26"},{"body":{"nativeSrc":"9093:1067:26","nodeType":"YulBlock","src":"9093:1067:26","statements":[{"nativeSrc":"9103:12:26","nodeType":"YulVariableDeclaration","src":"9103:12:26","value":{"kind":"number","nativeSrc":"9113:2:26","nodeType":"YulLiteral","src":"9113:2:26","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"9107:2:26","nodeType":"YulTypedName","src":"9107:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9131:9:26","nodeType":"YulIdentifier","src":"9131:9:26"},{"kind":"number","nativeSrc":"9142:2:26","nodeType":"YulLiteral","src":"9142:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9124:6:26","nodeType":"YulIdentifier","src":"9124:6:26"},"nativeSrc":"9124:21:26","nodeType":"YulFunctionCall","src":"9124:21:26"},"nativeSrc":"9124:21:26","nodeType":"YulExpressionStatement","src":"9124:21:26"},{"nativeSrc":"9154:29:26","nodeType":"YulVariableDeclaration","src":"9154:29:26","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9172:3:26","nodeType":"YulLiteral","src":"9172:3:26","type":"","value":"160"},{"kind":"number","nativeSrc":"9177:1:26","nodeType":"YulLiteral","src":"9177:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9168:3:26","nodeType":"YulIdentifier","src":"9168:3:26"},"nativeSrc":"9168:11:26","nodeType":"YulFunctionCall","src":"9168:11:26"},{"kind":"number","nativeSrc":"9181:1:26","nodeType":"YulLiteral","src":"9181:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9164:3:26","nodeType":"YulIdentifier","src":"9164:3:26"},"nativeSrc":"9164:19:26","nodeType":"YulFunctionCall","src":"9164:19:26"},"variables":[{"name":"_2","nativeSrc":"9158:2:26","nodeType":"YulTypedName","src":"9158:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9203:9:26","nodeType":"YulIdentifier","src":"9203:9:26"},{"kind":"number","nativeSrc":"9214:2:26","nodeType":"YulLiteral","src":"9214:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9199:3:26","nodeType":"YulIdentifier","src":"9199:3:26"},"nativeSrc":"9199:18:26","nodeType":"YulFunctionCall","src":"9199:18:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"9229:6:26","nodeType":"YulIdentifier","src":"9229:6:26"}],"functionName":{"name":"mload","nativeSrc":"9223:5:26","nodeType":"YulIdentifier","src":"9223:5:26"},"nativeSrc":"9223:13:26","nodeType":"YulFunctionCall","src":"9223:13:26"},{"name":"_2","nativeSrc":"9238:2:26","nodeType":"YulIdentifier","src":"9238:2:26"}],"functionName":{"name":"and","nativeSrc":"9219:3:26","nodeType":"YulIdentifier","src":"9219:3:26"},"nativeSrc":"9219:22:26","nodeType":"YulFunctionCall","src":"9219:22:26"}],"functionName":{"name":"mstore","nativeSrc":"9192:6:26","nodeType":"YulIdentifier","src":"9192:6:26"},"nativeSrc":"9192:50:26","nodeType":"YulFunctionCall","src":"9192:50:26"},"nativeSrc":"9192:50:26","nodeType":"YulExpressionStatement","src":"9192:50:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9262:9:26","nodeType":"YulIdentifier","src":"9262:9:26"},{"kind":"number","nativeSrc":"9273:2:26","nodeType":"YulLiteral","src":"9273:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9258:3:26","nodeType":"YulIdentifier","src":"9258:3:26"},"nativeSrc":"9258:18:26","nodeType":"YulFunctionCall","src":"9258:18:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"9292:6:26","nodeType":"YulIdentifier","src":"9292:6:26"},{"kind":"number","nativeSrc":"9300:2:26","nodeType":"YulLiteral","src":"9300:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9288:3:26","nodeType":"YulIdentifier","src":"9288:3:26"},"nativeSrc":"9288:15:26","nodeType":"YulFunctionCall","src":"9288:15:26"}],"functionName":{"name":"mload","nativeSrc":"9282:5:26","nodeType":"YulIdentifier","src":"9282:5:26"},"nativeSrc":"9282:22:26","nodeType":"YulFunctionCall","src":"9282:22:26"},{"name":"_2","nativeSrc":"9306:2:26","nodeType":"YulIdentifier","src":"9306:2:26"}],"functionName":{"name":"and","nativeSrc":"9278:3:26","nodeType":"YulIdentifier","src":"9278:3:26"},"nativeSrc":"9278:31:26","nodeType":"YulFunctionCall","src":"9278:31:26"}],"functionName":{"name":"mstore","nativeSrc":"9251:6:26","nodeType":"YulIdentifier","src":"9251:6:26"},"nativeSrc":"9251:59:26","nodeType":"YulFunctionCall","src":"9251:59:26"},"nativeSrc":"9251:59:26","nodeType":"YulExpressionStatement","src":"9251:59:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9330:9:26","nodeType":"YulIdentifier","src":"9330:9:26"},{"kind":"number","nativeSrc":"9341:2:26","nodeType":"YulLiteral","src":"9341:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9326:3:26","nodeType":"YulIdentifier","src":"9326:3:26"},"nativeSrc":"9326:18:26","nodeType":"YulFunctionCall","src":"9326:18:26"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"9356:6:26","nodeType":"YulIdentifier","src":"9356:6:26"},{"kind":"number","nativeSrc":"9364:2:26","nodeType":"YulLiteral","src":"9364:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9352:3:26","nodeType":"YulIdentifier","src":"9352:3:26"},"nativeSrc":"9352:15:26","nodeType":"YulFunctionCall","src":"9352:15:26"}],"functionName":{"name":"mload","nativeSrc":"9346:5:26","nodeType":"YulIdentifier","src":"9346:5:26"},"nativeSrc":"9346:22:26","nodeType":"YulFunctionCall","src":"9346:22:26"}],"functionName":{"name":"mstore","nativeSrc":"9319:6:26","nodeType":"YulIdentifier","src":"9319:6:26"},"nativeSrc":"9319:50:26","nodeType":"YulFunctionCall","src":"9319:50:26"},"nativeSrc":"9319:50:26","nodeType":"YulExpressionStatement","src":"9319:50:26"},{"nativeSrc":"9378:42:26","nodeType":"YulVariableDeclaration","src":"9378:42:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"9408:6:26","nodeType":"YulIdentifier","src":"9408:6:26"},{"kind":"number","nativeSrc":"9416:2:26","nodeType":"YulLiteral","src":"9416:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9404:3:26","nodeType":"YulIdentifier","src":"9404:3:26"},"nativeSrc":"9404:15:26","nodeType":"YulFunctionCall","src":"9404:15:26"}],"functionName":{"name":"mload","nativeSrc":"9398:5:26","nodeType":"YulIdentifier","src":"9398:5:26"},"nativeSrc":"9398:22:26","nodeType":"YulFunctionCall","src":"9398:22:26"},"variables":[{"name":"memberValue0","nativeSrc":"9382:12:26","nodeType":"YulTypedName","src":"9382:12:26","type":""}]},{"nativeSrc":"9429:20:26","nodeType":"YulVariableDeclaration","src":"9429:20:26","value":{"kind":"number","nativeSrc":"9439:10:26","nodeType":"YulLiteral","src":"9439:10:26","type":"","value":"0xffffffff"},"variables":[{"name":"_3","nativeSrc":"9433:2:26","nodeType":"YulTypedName","src":"9433:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9469:9:26","nodeType":"YulIdentifier","src":"9469:9:26"},{"kind":"number","nativeSrc":"9480:3:26","nodeType":"YulLiteral","src":"9480:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9465:3:26","nodeType":"YulIdentifier","src":"9465:3:26"},"nativeSrc":"9465:19:26","nodeType":"YulFunctionCall","src":"9465:19:26"},{"arguments":[{"name":"memberValue0","nativeSrc":"9490:12:26","nodeType":"YulIdentifier","src":"9490:12:26"},{"name":"_3","nativeSrc":"9504:2:26","nodeType":"YulIdentifier","src":"9504:2:26"}],"functionName":{"name":"and","nativeSrc":"9486:3:26","nodeType":"YulIdentifier","src":"9486:3:26"},"nativeSrc":"9486:21:26","nodeType":"YulFunctionCall","src":"9486:21:26"}],"functionName":{"name":"mstore","nativeSrc":"9458:6:26","nodeType":"YulIdentifier","src":"9458:6:26"},"nativeSrc":"9458:50:26","nodeType":"YulFunctionCall","src":"9458:50:26"},"nativeSrc":"9458:50:26","nodeType":"YulExpressionStatement","src":"9458:50:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9528:9:26","nodeType":"YulIdentifier","src":"9528:9:26"},{"kind":"number","nativeSrc":"9539:3:26","nodeType":"YulLiteral","src":"9539:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9524:3:26","nodeType":"YulIdentifier","src":"9524:3:26"},"nativeSrc":"9524:19:26","nodeType":"YulFunctionCall","src":"9524:19:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"9559:6:26","nodeType":"YulIdentifier","src":"9559:6:26"},{"kind":"number","nativeSrc":"9567:3:26","nodeType":"YulLiteral","src":"9567:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9555:3:26","nodeType":"YulIdentifier","src":"9555:3:26"},"nativeSrc":"9555:16:26","nodeType":"YulFunctionCall","src":"9555:16:26"}],"functionName":{"name":"mload","nativeSrc":"9549:5:26","nodeType":"YulIdentifier","src":"9549:5:26"},"nativeSrc":"9549:23:26","nodeType":"YulFunctionCall","src":"9549:23:26"},{"name":"_3","nativeSrc":"9574:2:26","nodeType":"YulIdentifier","src":"9574:2:26"}],"functionName":{"name":"and","nativeSrc":"9545:3:26","nodeType":"YulIdentifier","src":"9545:3:26"},"nativeSrc":"9545:32:26","nodeType":"YulFunctionCall","src":"9545:32:26"}],"functionName":{"name":"mstore","nativeSrc":"9517:6:26","nodeType":"YulIdentifier","src":"9517:6:26"},"nativeSrc":"9517:61:26","nodeType":"YulFunctionCall","src":"9517:61:26"},"nativeSrc":"9517:61:26","nodeType":"YulExpressionStatement","src":"9517:61:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9598:9:26","nodeType":"YulIdentifier","src":"9598:9:26"},{"kind":"number","nativeSrc":"9609:3:26","nodeType":"YulLiteral","src":"9609:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9594:3:26","nodeType":"YulIdentifier","src":"9594:3:26"},"nativeSrc":"9594:19:26","nodeType":"YulFunctionCall","src":"9594:19:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"9629:6:26","nodeType":"YulIdentifier","src":"9629:6:26"},{"kind":"number","nativeSrc":"9637:3:26","nodeType":"YulLiteral","src":"9637:3:26","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9625:3:26","nodeType":"YulIdentifier","src":"9625:3:26"},"nativeSrc":"9625:16:26","nodeType":"YulFunctionCall","src":"9625:16:26"}],"functionName":{"name":"mload","nativeSrc":"9619:5:26","nodeType":"YulIdentifier","src":"9619:5:26"},"nativeSrc":"9619:23:26","nodeType":"YulFunctionCall","src":"9619:23:26"},{"name":"_3","nativeSrc":"9644:2:26","nodeType":"YulIdentifier","src":"9644:2:26"}],"functionName":{"name":"and","nativeSrc":"9615:3:26","nodeType":"YulIdentifier","src":"9615:3:26"},"nativeSrc":"9615:32:26","nodeType":"YulFunctionCall","src":"9615:32:26"}],"functionName":{"name":"mstore","nativeSrc":"9587:6:26","nodeType":"YulIdentifier","src":"9587:6:26"},"nativeSrc":"9587:61:26","nodeType":"YulFunctionCall","src":"9587:61:26"},"nativeSrc":"9587:61:26","nodeType":"YulExpressionStatement","src":"9587:61:26"},{"nativeSrc":"9657:45:26","nodeType":"YulVariableDeclaration","src":"9657:45:26","value":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"9689:6:26","nodeType":"YulIdentifier","src":"9689:6:26"},{"kind":"number","nativeSrc":"9697:3:26","nodeType":"YulLiteral","src":"9697:3:26","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9685:3:26","nodeType":"YulIdentifier","src":"9685:3:26"},"nativeSrc":"9685:16:26","nodeType":"YulFunctionCall","src":"9685:16:26"}],"functionName":{"name":"mload","nativeSrc":"9679:5:26","nodeType":"YulIdentifier","src":"9679:5:26"},"nativeSrc":"9679:23:26","nodeType":"YulFunctionCall","src":"9679:23:26"},"variables":[{"name":"memberValue0_1","nativeSrc":"9661:14:26","nodeType":"YulTypedName","src":"9661:14:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9722:9:26","nodeType":"YulIdentifier","src":"9722:9:26"},{"kind":"number","nativeSrc":"9733:4:26","nodeType":"YulLiteral","src":"9733:4:26","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"9718:3:26","nodeType":"YulIdentifier","src":"9718:3:26"},"nativeSrc":"9718:20:26","nodeType":"YulFunctionCall","src":"9718:20:26"},{"kind":"number","nativeSrc":"9740:4:26","nodeType":"YulLiteral","src":"9740:4:26","type":"","value":"0xe0"}],"functionName":{"name":"mstore","nativeSrc":"9711:6:26","nodeType":"YulIdentifier","src":"9711:6:26"},"nativeSrc":"9711:34:26","nodeType":"YulFunctionCall","src":"9711:34:26"},"nativeSrc":"9711:34:26","nodeType":"YulExpressionStatement","src":"9711:34:26"},{"nativeSrc":"9754:35:26","nodeType":"YulVariableDeclaration","src":"9754:35:26","value":{"arguments":[{"name":"memberValue0_1","nativeSrc":"9774:14:26","nodeType":"YulIdentifier","src":"9774:14:26"}],"functionName":{"name":"mload","nativeSrc":"9768:5:26","nodeType":"YulIdentifier","src":"9768:5:26"},"nativeSrc":"9768:21:26","nodeType":"YulFunctionCall","src":"9768:21:26"},"variables":[{"name":"length","nativeSrc":"9758:6:26","nodeType":"YulTypedName","src":"9758:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9809:9:26","nodeType":"YulIdentifier","src":"9809:9:26"},{"kind":"number","nativeSrc":"9820:3:26","nodeType":"YulLiteral","src":"9820:3:26","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"9805:3:26","nodeType":"YulIdentifier","src":"9805:3:26"},"nativeSrc":"9805:19:26","nodeType":"YulFunctionCall","src":"9805:19:26"},{"name":"length","nativeSrc":"9826:6:26","nodeType":"YulIdentifier","src":"9826:6:26"}],"functionName":{"name":"mstore","nativeSrc":"9798:6:26","nodeType":"YulIdentifier","src":"9798:6:26"},"nativeSrc":"9798:35:26","nodeType":"YulFunctionCall","src":"9798:35:26"},"nativeSrc":"9798:35:26","nodeType":"YulExpressionStatement","src":"9798:35:26"},{"nativeSrc":"9842:10:26","nodeType":"YulVariableDeclaration","src":"9842:10:26","value":{"kind":"number","nativeSrc":"9851:1:26","nodeType":"YulLiteral","src":"9851:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9846:1:26","nodeType":"YulTypedName","src":"9846:1:26","type":""}]},{"body":{"nativeSrc":"9911:99:26","nodeType":"YulBlock","src":"9911:99:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9940:9:26","nodeType":"YulIdentifier","src":"9940:9:26"},{"name":"i","nativeSrc":"9951:1:26","nodeType":"YulIdentifier","src":"9951:1:26"}],"functionName":{"name":"add","nativeSrc":"9936:3:26","nodeType":"YulIdentifier","src":"9936:3:26"},"nativeSrc":"9936:17:26","nodeType":"YulFunctionCall","src":"9936:17:26"},{"kind":"number","nativeSrc":"9955:3:26","nodeType":"YulLiteral","src":"9955:3:26","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"9932:3:26","nodeType":"YulIdentifier","src":"9932:3:26"},"nativeSrc":"9932:27:26","nodeType":"YulFunctionCall","src":"9932:27:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"memberValue0_1","nativeSrc":"9975:14:26","nodeType":"YulIdentifier","src":"9975:14:26"},{"name":"i","nativeSrc":"9991:1:26","nodeType":"YulIdentifier","src":"9991:1:26"}],"functionName":{"name":"add","nativeSrc":"9971:3:26","nodeType":"YulIdentifier","src":"9971:3:26"},"nativeSrc":"9971:22:26","nodeType":"YulFunctionCall","src":"9971:22:26"},{"name":"_1","nativeSrc":"9995:2:26","nodeType":"YulIdentifier","src":"9995:2:26"}],"functionName":{"name":"add","nativeSrc":"9967:3:26","nodeType":"YulIdentifier","src":"9967:3:26"},"nativeSrc":"9967:31:26","nodeType":"YulFunctionCall","src":"9967:31:26"}],"functionName":{"name":"mload","nativeSrc":"9961:5:26","nodeType":"YulIdentifier","src":"9961:5:26"},"nativeSrc":"9961:38:26","nodeType":"YulFunctionCall","src":"9961:38:26"}],"functionName":{"name":"mstore","nativeSrc":"9925:6:26","nodeType":"YulIdentifier","src":"9925:6:26"},"nativeSrc":"9925:75:26","nodeType":"YulFunctionCall","src":"9925:75:26"},"nativeSrc":"9925:75:26","nodeType":"YulExpressionStatement","src":"9925:75:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9872:1:26","nodeType":"YulIdentifier","src":"9872:1:26"},{"name":"length","nativeSrc":"9875:6:26","nodeType":"YulIdentifier","src":"9875:6:26"}],"functionName":{"name":"lt","nativeSrc":"9869:2:26","nodeType":"YulIdentifier","src":"9869:2:26"},"nativeSrc":"9869:13:26","nodeType":"YulFunctionCall","src":"9869:13:26"},"nativeSrc":"9861:149:26","nodeType":"YulForLoop","post":{"nativeSrc":"9883:19:26","nodeType":"YulBlock","src":"9883:19:26","statements":[{"nativeSrc":"9885:15:26","nodeType":"YulAssignment","src":"9885:15:26","value":{"arguments":[{"name":"i","nativeSrc":"9894:1:26","nodeType":"YulIdentifier","src":"9894:1:26"},{"name":"_1","nativeSrc":"9897:2:26","nodeType":"YulIdentifier","src":"9897:2:26"}],"functionName":{"name":"add","nativeSrc":"9890:3:26","nodeType":"YulIdentifier","src":"9890:3:26"},"nativeSrc":"9890:10:26","nodeType":"YulFunctionCall","src":"9890:10:26"},"variableNames":[{"name":"i","nativeSrc":"9885:1:26","nodeType":"YulIdentifier","src":"9885:1:26"}]}]},"pre":{"nativeSrc":"9865:3:26","nodeType":"YulBlock","src":"9865:3:26","statements":[]},"src":"9861:149:26"},{"nativeSrc":"10019:13:26","nodeType":"YulVariableDeclaration","src":"10019:13:26","value":{"kind":"number","nativeSrc":"10029:3:26","nodeType":"YulLiteral","src":"10029:3:26","type":"","value":"288"},"variables":[{"name":"_4","nativeSrc":"10023:2:26","nodeType":"YulTypedName","src":"10023:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10056:9:26","nodeType":"YulIdentifier","src":"10056:9:26"},{"name":"length","nativeSrc":"10067:6:26","nodeType":"YulIdentifier","src":"10067:6:26"}],"functionName":{"name":"add","nativeSrc":"10052:3:26","nodeType":"YulIdentifier","src":"10052:3:26"},"nativeSrc":"10052:22:26","nodeType":"YulFunctionCall","src":"10052:22:26"},{"name":"_4","nativeSrc":"10076:2:26","nodeType":"YulIdentifier","src":"10076:2:26"}],"functionName":{"name":"add","nativeSrc":"10048:3:26","nodeType":"YulIdentifier","src":"10048:3:26"},"nativeSrc":"10048:31:26","nodeType":"YulFunctionCall","src":"10048:31:26"},{"kind":"number","nativeSrc":"10081:1:26","nodeType":"YulLiteral","src":"10081:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"10041:6:26","nodeType":"YulIdentifier","src":"10041:6:26"},"nativeSrc":"10041:42:26","nodeType":"YulFunctionCall","src":"10041:42:26"},"nativeSrc":"10041:42:26","nodeType":"YulExpressionStatement","src":"10041:42:26"},{"nativeSrc":"10092:62:26","nodeType":"YulAssignment","src":"10092:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10108:9:26","nodeType":"YulIdentifier","src":"10108:9:26"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"10127:6:26","nodeType":"YulIdentifier","src":"10127:6:26"},{"kind":"number","nativeSrc":"10135:2:26","nodeType":"YulLiteral","src":"10135:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"10123:3:26","nodeType":"YulIdentifier","src":"10123:3:26"},"nativeSrc":"10123:15:26","nodeType":"YulFunctionCall","src":"10123:15:26"},{"arguments":[{"kind":"number","nativeSrc":"10144:2:26","nodeType":"YulLiteral","src":"10144:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"10140:3:26","nodeType":"YulIdentifier","src":"10140:3:26"},"nativeSrc":"10140:7:26","nodeType":"YulFunctionCall","src":"10140:7:26"}],"functionName":{"name":"and","nativeSrc":"10119:3:26","nodeType":"YulIdentifier","src":"10119:3:26"},"nativeSrc":"10119:29:26","nodeType":"YulFunctionCall","src":"10119:29:26"}],"functionName":{"name":"add","nativeSrc":"10104:3:26","nodeType":"YulIdentifier","src":"10104:3:26"},"nativeSrc":"10104:45:26","nodeType":"YulFunctionCall","src":"10104:45:26"},{"name":"_4","nativeSrc":"10151:2:26","nodeType":"YulIdentifier","src":"10151:2:26"}],"functionName":{"name":"add","nativeSrc":"10100:3:26","nodeType":"YulIdentifier","src":"10100:3:26"},"nativeSrc":"10100:54:26","nodeType":"YulFunctionCall","src":"10100:54:26"},"variableNames":[{"name":"tail","nativeSrc":"10092:4:26","nodeType":"YulIdentifier","src":"10092:4:26"}]}]},"name":"abi_encode_tuple_t_struct$_CrossChainOrder_$4309_memory_ptr__to_t_struct$_CrossChainOrder_$4309_memory_ptr__fromStack_reversed","nativeSrc":"8926:1234:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9062:9:26","nodeType":"YulTypedName","src":"9062:9:26","type":""},{"name":"value0","nativeSrc":"9073:6:26","nodeType":"YulTypedName","src":"9073:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9084:4:26","nodeType":"YulTypedName","src":"9084:4:26","type":""}],"src":"8926:1234:26"}]},"contents":"{\n    { }\n    function abi_decode_struct_CrossChainOrder_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 224) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_tuple_t_struct$_CrossChainOrder_$4309_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_struct_CrossChainOrder_calldata(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_CrossChainOrder_$4309_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_struct_CrossChainOrder_calldata(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_struct$_CrossChainOrder_$4309_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_struct_CrossChainOrder_calldata(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_uint32(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffff))\n    }\n    function abi_encode_array_struct_Input_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _2 := mload(srcPtr)\n            mstore(pos, and(mload(_2), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_2, _1)))\n            pos := add(pos, 0x40)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_array_struct_Output_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _2 := mload(srcPtr)\n            let _3 := sub(shl(160, 1), 1)\n            mstore(pos, and(mload(_2), _3))\n            mstore(add(pos, _1), mload(add(_2, _1)))\n            let _4 := 0x40\n            mstore(add(pos, _4), and(mload(add(_2, _4)), _3))\n            let _5 := 0x60\n            mstore(add(pos, _5), and(mload(add(_2, _5)), 0xffffffff))\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_struct$_ResolvedCrossChainOrder_$4344_memory_ptr__to_t_struct$_ResolvedCrossChainOrder_$4344_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        abi_encode_address(mload(value0), add(headStart, 32))\n        let memberValue0 := mload(add(value0, 32))\n        abi_encode_address(memberValue0, add(headStart, 64))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        let memberValue0_1 := mload(add(value0, 96))\n        abi_encode_uint32(memberValue0_1, add(headStart, 128))\n        let memberValue0_2 := mload(add(value0, 128))\n        abi_encode_uint32(memberValue0_2, add(headStart, 160))\n        let memberValue0_3 := mload(add(value0, 160))\n        abi_encode_uint32(memberValue0_3, add(headStart, 192))\n        let memberValue0_4 := mload(add(value0, 192))\n        let _1 := 0x0120\n        mstore(add(headStart, 224), _1)\n        let tail_1 := abi_encode_array_struct_Input_dyn(memberValue0_4, add(headStart, 320))\n        let memberValue0_5 := mload(add(value0, 224))\n        let _2 := not(31)\n        let _3 := 256\n        mstore(add(headStart, _3), add(sub(tail_1, headStart), _2))\n        let tail_2 := abi_encode_array_struct_Output_dyn(memberValue0_5, tail_1)\n        let memberValue0_6 := mload(add(value0, _3))\n        mstore(add(headStart, _1), add(sub(tail_2, headStart), _2))\n        tail := abi_encode_array_struct_Output_dyn(memberValue0_6, tail_2)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xe0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function convert_t_struct$_CrossChainOrder_$4309_calldata_ptr_to_t_struct$_CrossChainOrder_$4309_memory_ptr(value) -> converted\n    {\n        if slt(sub(calldatasize(), value), 0xe0) { revert(0, 0) }\n        let value_1 := allocate_memory()\n        mstore(value_1, abi_decode_address(value))\n        mstore(add(value_1, 32), abi_decode_address(add(value, 32)))\n        mstore(add(value_1, 64), calldataload(add(value, 64)))\n        mstore(add(value_1, 96), abi_decode_uint32(add(value, 96)))\n        mstore(add(value_1, 128), abi_decode_uint32(add(value, 128)))\n        mstore(add(value_1, 160), abi_decode_uint32(add(value, 160)))\n        let offset := calldataload(add(value, 192))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        mstore(add(value_1, 192), abi_decode_bytes(add(value, offset), calldatasize()))\n        converted := value_1\n    }\n    function abi_encode_tuple_t_struct$_CrossChainOrder_$4309_memory_ptr__to_t_struct$_CrossChainOrder_$4309_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let _2 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(mload(value0), _2))\n        mstore(add(headStart, 64), and(mload(add(value0, 32)), _2))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        let memberValue0 := mload(add(value0, 96))\n        let _3 := 0xffffffff\n        mstore(add(headStart, 128), and(memberValue0, _3))\n        mstore(add(headStart, 160), and(mload(add(value0, 128)), _3))\n        mstore(add(headStart, 192), and(mload(add(value0, 160)), _3))\n        let memberValue0_1 := mload(add(value0, 192))\n        mstore(add(headStart, 0xe0), 0xe0)\n        let length := mload(memberValue0_1)\n        mstore(add(headStart, 256), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 288), mload(add(add(memberValue0_1, i), _1)))\n        }\n        let _4 := 288\n        mstore(add(add(headStart, length), _4), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), _4)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c806397b2b09f1161005b57806397b2b09f146100ed578063bf6d01d314610100578063ed2a2d6414610120578063f2fde38b1461014957600080fd5b806344b438a71461008d578063715018a6146100b35780638da5cb5b146100bd578063962fc2a3146100d8575b600080fd5b6100a061009b366004610344565b61015c565b6040519081526020015b60405180910390f35b6100bb610175565b005b6000546040516001600160a01b0390911681526020016100aa565b6100bb6100e63660046103ca565b5050505050565b6100bb6100fb36600461047b565b610189565b61011361010e3660046104a5565b6101c2565b6040516100aa91906105c3565b6100a061012e3660046106a2565b6001600160a01b031660009081526004602052604090205490565b6100bb6101573660046106a2565b61023c565b600061016f61016a8361079d565b61027f565b92915050565b61017d6102af565b61018760006102dc565b565b6101916102af565b6001600160a01b039091166000908152600160208181526040808420805460ff191690931790925560029052902055565b61023560405180610120016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff1681526020016060815260200160608152602001606081525090565b9392505050565b6102446102af565b6001600160a01b03811661027357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61027c816102dc565b50565b6000816040516020016102929190610842565b604051602081830303815290604052805190602001209050919050565b6000546001600160a01b031633146101875760405163118cdaa760e01b815233600482015260240161026a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060e0828403121561033e57600080fd5b50919050565b60006020828403121561035657600080fd5b813567ffffffffffffffff81111561036d57600080fd5b6103798482850161032c565b949350505050565b60008083601f84011261039357600080fd5b50813567ffffffffffffffff8111156103ab57600080fd5b6020830191508360208285010111156103c357600080fd5b9250929050565b6000806000806000606086880312156103e257600080fd5b853567ffffffffffffffff808211156103fa57600080fd5b61040689838a0161032c565b9650602088013591508082111561041c57600080fd5b61042889838a01610381565b9096509450604088013591508082111561044157600080fd5b5061044e88828901610381565b969995985093965092949392505050565b80356001600160a01b038116811461047657600080fd5b919050565b6000806040838503121561048e57600080fd5b6104978361045f565b946020939093013593505050565b6000806000604084860312156104ba57600080fd5b833567ffffffffffffffff808211156104d257600080fd5b6104de8783880161032c565b945060208601359150808211156104f457600080fd5b5061050186828701610381565b9497909650939450505050565b60008151808452602080850194506020840160005b8381101561055357815180516001600160a01b031688528301518388015260409096019590820190600101610523565b509495945050505050565b60008151808452602080850194506020840160005b8381101561055357815180516001600160a01b03908116895284820151858a01526040808301519091169089015260609081015163ffffffff169088015260809096019590820190600101610573565b602081526105dd6020820183516001600160a01b03169052565b600060208301516105f960408401826001600160a01b03169052565b5060408301516060830152606083015161061b608084018263ffffffff169052565b50608083015163ffffffff811660a08401525060a083015163ffffffff811660c08401525060c08301516101208060e085015261065c61014085018361050e565b915060e0850151601f1961010081878603018188015261067c858461055e565b908801518782039092018488015293509050610698838261055e565b9695505050505050565b6000602082840312156106b457600080fd5b6102358261045f565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156106f6576106f66106bd565b60405290565b803563ffffffff8116811461047657600080fd5b600082601f83011261072157600080fd5b813567ffffffffffffffff8082111561073c5761073c6106bd565b604051601f8301601f19908116603f01168101908282118183101715610764576107646106bd565b8160405283815286602085880101111561077d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060e082360312156107af57600080fd5b6107b76106d3565b6107c08361045f565b81526107ce6020840161045f565b6020820152604083013560408201526107e9606084016106fc565b60608201526107fa608084016106fc565b608082015261080b60a084016106fc565b60a082015260c083013567ffffffffffffffff81111561082a57600080fd5b61083636828601610710565b60c08301525092915050565b6000602080835260018060a01b038085511660208501528060208601511660408501525060408401516060840152606084015163ffffffff80821660808601528060808701511660a08601528060a08701511660c0860152505060c084015160e08085015280518061010086015260005b818110156108d057828101840151868201610120015283016108b3565b506101209250600083828701015282601f19601f83011686010193505050509291505056fea2646970667358221220aadd3233edf3b820b96df9fea60b8912b271ed340f70967028aa023724d23c8864736f6c63430008160033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97B2B09F GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x97B2B09F EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xBF6D01D3 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xED2A2D64 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44B438A7 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x962FC2A3 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x344 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x175 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0xBB PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBB PUSH2 0xFB CALLDATASIZE PUSH1 0x4 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x10E CALLDATASIZE PUSH1 0x4 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x5C3 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F PUSH2 0x16A DUP4 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x27F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x187 PUSH1 0x0 PUSH2 0x2DC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x191 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 SWAP1 MSTORE SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x235 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x244 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27C DUP2 PUSH2 0x2DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x26A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x379 DUP5 DUP3 DUP6 ADD PUSH2 0x32C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x406 DUP10 DUP4 DUP11 ADD PUSH2 0x32C JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x428 DUP10 DUP4 DUP11 ADD PUSH2 0x381 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44E DUP9 DUP3 DUP10 ADD PUSH2 0x381 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x497 DUP4 PUSH2 0x45F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4DE DUP8 DUP4 DUP9 ADD PUSH2 0x32C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x501 DUP7 DUP3 DUP8 ADD PUSH2 0x381 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x553 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE DUP4 ADD MLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x40 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x523 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x553 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP10 MSTORE DUP5 DUP3 ADD MLOAD DUP6 DUP11 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP10 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 DUP9 ADD MSTORE PUSH1 0x80 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x573 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH2 0x5DD PUSH1 0x20 DUP3 ADD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x5F9 PUSH1 0x40 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x61B PUSH1 0x80 DUP5 ADD DUP3 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xC0 DUP5 ADD MSTORE POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x120 DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x65C PUSH2 0x140 DUP6 ADD DUP4 PUSH2 0x50E JUMP JUMPDEST SWAP2 POP PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x1F NOT PUSH2 0x100 DUP2 DUP8 DUP7 SUB ADD DUP2 DUP9 ADD MSTORE PUSH2 0x67C DUP6 DUP5 PUSH2 0x55E JUMP JUMPDEST SWAP1 DUP9 ADD MLOAD DUP8 DUP3 SUB SWAP1 SWAP3 ADD DUP5 DUP9 ADD MSTORE SWAP4 POP SWAP1 POP PUSH2 0x698 DUP4 DUP3 PUSH2 0x55E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x235 DUP3 PUSH2 0x45F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x6F6 JUMPI PUSH2 0x6F6 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x764 JUMPI PUSH2 0x764 PUSH2 0x6BD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B7 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x7C0 DUP4 PUSH2 0x45F JUMP JUMPDEST DUP2 MSTORE PUSH2 0x7CE PUSH1 0x20 DUP5 ADD PUSH2 0x45F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 ADD CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7E9 PUSH1 0x60 DUP5 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x7FA PUSH1 0x80 DUP5 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x80B PUSH1 0xA0 DUP5 ADD PUSH2 0x6FC JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x836 CALLDATASIZE DUP3 DUP7 ADD PUSH2 0x710 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP6 MLOAD AND PUSH1 0x20 DUP6 ADD MSTORE DUP1 PUSH1 0x20 DUP7 ADD MLOAD AND PUSH1 0x40 DUP6 ADD MSTORE POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x80 DUP7 ADD MSTORE DUP1 PUSH1 0x80 DUP8 ADD MLOAD AND PUSH1 0xA0 DUP7 ADD MSTORE DUP1 PUSH1 0xA0 DUP8 ADD MLOAD AND PUSH1 0xC0 DUP7 ADD MSTORE POP POP PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0xE0 DUP1 DUP6 ADD MSTORE DUP1 MLOAD DUP1 PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8D0 JUMPI DUP3 DUP2 ADD DUP5 ADD MLOAD DUP7 DUP3 ADD PUSH2 0x120 ADD MSTORE DUP4 ADD PUSH2 0x8B3 JUMP JUMPDEST POP PUSH2 0x120 SWAP3 POP PUSH1 0x0 DUP4 DUP3 DUP8 ADD ADD MSTORE DUP3 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP7 ADD ADD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xDD ORIGIN CALLER 0xED RETURN 0xB8 KECCAK256 0xB9 PUSH14 0xF9FEA60B8912B271ED340F709670 0x28 0xAA MUL CALLDATACOPY 0x24 0xD2 EXTCODECOPY DUP9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ","sourceMap":"473:1766:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;750:126;;;;;;:::i;:::-;;:::i;:::-;;;706:25:26;;;694:2;679:18;750:126:24;;;;;;;;2293:101:12;;;:::i;:::-;;1638:85;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:12;;;997:51:26;;985:2;970:18;1638:85:12;851:203:26;1829:120:24;;;;;;:::i;:::-;;;;;;;1445:224;;;;;;:::i;:::-;;:::i;2098:139::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1955:96::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2030:14:24;2004:7;2030:14;;;:8;:14;;;;;;;1955:96;2543:215:12;;;;;;:::i;:::-;;:::i;750:126:24:-;826:7;852:17;;863:5;852:17;:::i;:::-;:10;:17::i;:::-;845:24;750:126;-1:-1:-1;;750:126:24:o;2293:101:12:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1445:224:24:-;1531:13:12;:11;:13::i;:::-;-1:-1:-1;;;;;1553:42:24;;::::1;;::::0;;;1598:4:::1;1553:42;::::0;;;;;;;:49;;-1:-1:-1;;1553:49:24::1;::::0;;::::1;::::0;;;1612:20:::1;:40:::0;;;;:50;1445:224::o;2098:139::-;2197:30;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2197:30:24;2098:139;;;;;:::o;2543:215:12:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:12;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:12;;2700:1:::1;2672:31;::::0;::::1;997:51:26::0;970:18;;2672:31:12::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;882:134:24:-;955:7;1002:5;991:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;981:28;;;;;;974:35;;882:134;;;:::o;1796:162:12:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:12;735:10:17;1855:23:12;1851:101;;1901:40;;-1:-1:-1;;;1901:40:12;;735:10:17;1901:40:12;;;997:51:26;970:18;;1901:40:12;851:203:26;2912:187:12;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:12;;;-1:-1:-1;;;;;;3020:17:12;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:164:26:-;82:5;127:3;118:6;113:3;109:16;105:26;102:46;;;144:1;141;134:12;102:46;-1:-1:-1;166:6:26;14:164;-1:-1:-1;14:164:26:o;183:372::-;277:6;330:2;318:9;309:7;305:23;301:32;298:52;;;346:1;343;336:12;298:52;386:9;373:23;419:18;411:6;408:30;405:50;;;451:1;448;441:12;405:50;474:75;541:7;532:6;521:9;517:22;474:75;:::i;:::-;464:85;183:372;-1:-1:-1;;;;183:372:26:o;1059:347::-;1110:8;1120:6;1174:3;1167:4;1159:6;1155:17;1151:27;1141:55;;1192:1;1189;1182:12;1141:55;-1:-1:-1;1215:20:26;;1258:18;1247:30;;1244:50;;;1290:1;1287;1280:12;1244:50;1327:4;1319:6;1315:17;1303:29;;1379:3;1372:4;1363:6;1355;1351:19;1347:30;1344:39;1341:59;;;1396:1;1393;1386:12;1341:59;1059:347;;;;;:::o;1411:967::-;1545:6;1553;1561;1569;1577;1630:2;1618:9;1609:7;1605:23;1601:32;1598:52;;;1646:1;1643;1636:12;1598:52;1686:9;1673:23;1715:18;1756:2;1748:6;1745:14;1742:34;;;1772:1;1769;1762:12;1742:34;1795:75;1862:7;1853:6;1842:9;1838:22;1795:75;:::i;:::-;1785:85;;1923:2;1912:9;1908:18;1895:32;1879:48;;1952:2;1942:8;1939:16;1936:36;;;1968:1;1965;1958:12;1936:36;2007:60;2059:7;2048:8;2037:9;2033:24;2007:60;:::i;:::-;2086:8;;-1:-1:-1;1981:86:26;-1:-1:-1;2174:2:26;2159:18;;2146:32;;-1:-1:-1;2190:16:26;;;2187:36;;;2219:1;2216;2209:12;2187:36;;2258:60;2310:7;2299:8;2288:9;2284:24;2258:60;:::i;:::-;1411:967;;;;-1:-1:-1;1411:967:26;;-1:-1:-1;2337:8:26;;2232:86;1411:967;-1:-1:-1;;;1411:967:26:o;2383:173::-;2451:20;;-1:-1:-1;;;;;2500:31:26;;2490:42;;2480:70;;2546:1;2543;2536:12;2480:70;2383:173;;;:::o;2561:254::-;2629:6;2637;2690:2;2678:9;2669:7;2665:23;2661:32;2658:52;;;2706:1;2703;2696:12;2658:52;2729:29;2748:9;2729:29;:::i;:::-;2719:39;2805:2;2790:18;;;;2777:32;;-1:-1:-1;;;2561:254:26:o;2820:680::-;2934:6;2942;2950;3003:2;2991:9;2982:7;2978:23;2974:32;2971:52;;;3019:1;3016;3009:12;2971:52;3059:9;3046:23;3088:18;3129:2;3121:6;3118:14;3115:34;;;3145:1;3142;3135:12;3115:34;3168:75;3235:7;3226:6;3215:9;3211:22;3168:75;:::i;:::-;3158:85;;3296:2;3285:9;3281:18;3268:32;3252:48;;3325:2;3315:8;3312:16;3309:36;;;3341:1;3338;3331:12;3309:36;;3380:60;3432:7;3421:8;3410:9;3406:24;3380:60;:::i;:::-;2820:680;;3459:8;;-1:-1:-1;3354:86:26;;-1:-1:-1;;;;2820:680:26:o;3604:557::-;3662:3;3700:5;3694:12;3727:6;3722:3;3715:19;3753:4;3782;3777:3;3773:14;3766:21;;3821:4;3814:5;3810:16;3844:1;3854:282;3868:6;3865:1;3862:13;3854:282;;;3927:13;;3969:9;;-1:-1:-1;;;;;3965:35:26;3953:48;;4041:11;;4035:18;4021:12;;;4014:40;4083:4;4074:14;;;;4111:15;;;;3997:1;3883:9;3854:282;;;-1:-1:-1;4152:3:26;;3604:557;-1:-1:-1;;;;;3604:557:26:o;4166:769::-;4225:3;4263:5;4257:12;4290:6;4285:3;4278:19;4316:4;4345;4340:3;4336:14;4329:21;;4384:4;4377:5;4373:16;4407:1;4417:493;4431:6;4428:1;4425:13;4417:493;;;4490:13;;4574:9;;-1:-1:-1;;;;;4570:18:26;;;4558:31;;4629:11;;;4623:18;4609:12;;;4602:40;4665:4;4713:11;;;4707:18;4703:27;;;4689:12;;;4682:49;4754:4;4802:11;;;4796:18;4816:10;4792:35;4778:12;;;4771:57;4857:4;4848:14;;;;4885:15;;;;4543:1;4446:9;4417:493;;4940:1462;5151:2;5140:9;5133:21;5163:53;5212:2;5201:9;5197:18;5188:6;5182:13;-1:-1:-1;;;;;808:31:26;796:44;;742:104;5163:53;5114:4;5263:2;5255:6;5251:15;5245:22;5276:52;5324:2;5313:9;5309:18;5295:12;-1:-1:-1;;;;;808:31:26;796:44;;742:104;5276:52;;5382:2;5374:6;5370:15;5364:22;5359:2;5348:9;5344:18;5337:50;5436:2;5428:6;5424:15;5418:22;5449:54;5498:3;5487:9;5483:19;5467:14;3581:10;3570:22;3558:35;;3505:94;5449:54;-1:-1:-1;5552:3:26;5540:16;;5534:23;3581:10;3570:22;;5615:3;5600:19;;3558:35;-1:-1:-1;5669:3:26;5657:16;;5651:23;3581:10;3570:22;;5732:3;5717:19;;3558:35;5683:54;5786:3;5778:6;5774:16;5768:23;5810:6;5853:2;5847:3;5836:9;5832:19;5825:31;5879:70;5944:3;5933:9;5929:19;5913:14;5879:70;:::i;:::-;5865:84;;5998:3;5990:6;5986:16;5980:23;6026:2;6022:7;6048:3;6115:2;6103:9;6095:6;6091:22;6087:31;6082:2;6071:9;6067:18;6060:59;6142:58;6193:6;6177:14;6142:58;:::i;:::-;6237:15;;;6231:22;6293;;;6289:31;;;6269:18;;;6262:59;6128:72;-1:-1:-1;6231:22:26;-1:-1:-1;6338:58:26;6128:72;6231:22;6338:58;:::i;:::-;6330:66;4940:1462;-1:-1:-1;;;;;;4940:1462:26:o;6407:186::-;6466:6;6519:2;6507:9;6498:7;6494:23;6490:32;6487:52;;;6535:1;6532;6525:12;6487:52;6558:29;6577:9;6558:29;:::i;6780:127::-;6841:10;6836:3;6832:20;6829:1;6822:31;6872:4;6869:1;6862:15;6896:4;6893:1;6886:15;6912:248;6979:2;6973:9;7021:4;7009:17;;7056:18;7041:34;;7077:22;;;7038:62;7035:88;;;7103:18;;:::i;:::-;7139:2;7132:22;6912:248;:::o;7165:163::-;7232:20;;7292:10;7281:22;;7271:33;;7261:61;;7318:1;7315;7308:12;7333:718;7375:5;7428:3;7421:4;7413:6;7409:17;7405:27;7395:55;;7446:1;7443;7436:12;7395:55;7482:6;7469:20;7508:18;7545:2;7541;7538:10;7535:36;;;7551:18;;:::i;:::-;7626:2;7620:9;7594:2;7680:13;;-1:-1:-1;;7676:22:26;;;7700:2;7672:31;7668:40;7656:53;;;7724:18;;;7744:22;;;7721:46;7718:72;;;7770:18;;:::i;:::-;7810:10;7806:2;7799:22;7845:2;7837:6;7830:18;7891:3;7884:4;7879:2;7871:6;7867:15;7863:26;7860:35;7857:55;;;7908:1;7905;7898:12;7857:55;7972:2;7965:4;7957:6;7953:17;7946:4;7938:6;7934:17;7921:54;8019:1;8012:4;8007:2;7999:6;7995:15;7991:26;7984:37;8039:6;8030:15;;;;;;7333:718;;;;:::o;8056:865::-;8174:9;8233:4;8225:5;8209:14;8205:26;8201:37;8198:57;;;8251:1;8248;8241:12;8198:57;8279:17;;:::i;:::-;8321:25;8340:5;8321:25;:::i;:::-;8312:7;8305:42;8381:34;8411:2;8404:5;8400:14;8381:34;:::i;:::-;8376:2;8367:7;8363:16;8356:60;8474:2;8467:5;8463:14;8450:28;8445:2;8436:7;8432:16;8425:54;8513:33;8542:2;8535:5;8531:14;8513:33;:::i;:::-;8508:2;8499:7;8495:16;8488:59;8582:34;8611:3;8604:5;8600:15;8582:34;:::i;:::-;8576:3;8567:7;8563:17;8556:61;8652:34;8681:3;8674:5;8670:15;8652:34;:::i;:::-;8646:3;8637:7;8633:17;8626:61;8734:3;8727:5;8723:15;8710:29;8762:18;8754:6;8751:30;8748:50;;;8794:1;8791;8784:12;8748:50;8833:52;8870:14;8861:6;8854:5;8850:18;8833:52;:::i;:::-;8827:3;8814:17;;8807:79;-1:-1:-1;8818:7:26;8056:865;-1:-1:-1;;8056:865:26:o;8926:1234::-;9084:4;9113:2;9142;9131:9;9124:21;9181:1;9177;9172:3;9168:11;9164:19;9238:2;9229:6;9223:13;9219:22;9214:2;9203:9;9199:18;9192:50;9306:2;9300;9292:6;9288:15;9282:22;9278:31;9273:2;9262:9;9258:18;9251:59;;9364:2;9356:6;9352:15;9346:22;9341:2;9330:9;9326:18;9319:50;9416:2;9408:6;9404:15;9398:22;9439:10;9504:2;9490:12;9486:21;9480:3;9469:9;9465:19;9458:50;9574:2;9567:3;9559:6;9555:16;9549:23;9545:32;9539:3;9528:9;9524:19;9517:61;9644:2;9637:3;9629:6;9625:16;9619:23;9615:32;9609:3;9598:9;9594:19;9587:61;;;9697:3;9689:6;9685:16;9679:23;9740:4;9733;9722:9;9718:20;9711:34;9774:14;9768:21;9826:6;9820:3;9809:9;9805:19;9798:35;9851:1;9861:149;9875:6;9872:1;9869:13;9861:149;;;9971:22;;;9967:31;;9961:38;9936:17;;;9955:3;9932:27;9925:75;9890:10;;9861:149;;;9865:3;10029;10019:13;;10081:1;10076:2;10067:6;10056:9;10052:22;10048:31;10041:42;10151:2;10144;10140:7;10135:2;10127:6;10123:15;10119:29;10108:9;10104:45;10100:54;10092:62;;;;;8926:1234;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"469400","executionCost":"26368","totalCost":"495768"},"external":{"computeHash((address,address,uint256,uint32,uint32,uint32,bytes))":"infinite","initiate((address,address,uint256,uint32,uint32,uint32,bytes),bytes,bytes)":"infinite","nonceOf(address)":"2570","owner()":"2346","renounceOwnership()":"infinite","resolve((address,address,uint256,uint32,uint32,uint32,bytes),bytes)":"infinite","transferOwnership(address)":"28399","whitelistSettlementContract(address,uint256)":"48970"},"internal":{"_hashOrder(struct CrossChainOrder memory)":"infinite","_verifySignature(struct CrossChainOrder memory,bytes memory)":"infinite"}},"methodIdentifiers":{"computeHash((address,address,uint256,uint32,uint32,uint32,bytes))":"44b438a7","initiate((address,address,uint256,uint32,uint32,uint32,bytes),bytes,bytes)":"962fc2a3","nonceOf(address)":"ed2a2d64","owner()":"8da5cb5b","renounceOwnership()":"715018a6","resolve((address,address,uint256,uint32,uint32,uint32,bytes),bytes)":"bf6d01d3","transferOwnership(address)":"f2fde38b","whitelistSettlementContract(address,uint256)":"97b2b09f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"originChainId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initiateDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"orderData\",\"type\":\"bytes\"}],\"internalType\":\"struct CrossChainOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"computeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"originChainId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initiateDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"orderData\",\"type\":\"bytes\"}],\"internalType\":\"struct CrossChainOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"fillerData\",\"type\":\"bytes\"}],\"name\":\"initiate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"nonceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"originChainId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initiateDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"orderData\",\"type\":\"bytes\"}],\"internalType\":\"struct CrossChainOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"fillerData\",\"type\":\"bytes\"}],\"name\":\"resolve\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"originChainId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initiateDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Input[]\",\"name\":\"swapperInputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"chainId\",\"type\":\"uint32\"}],\"internalType\":\"struct Output[]\",\"name\":\"swapperOutputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"chainId\",\"type\":\"uint32\"}],\"internalType\":\"struct Output[]\",\"name\":\"fillerOutputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ResolvedCrossChainOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"settlementContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"whitelistSettlementContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"computeHash((address,address,uint256,uint32,uint32,uint32,bytes))\":{\"notice\":\" Order Hashing\"},\"constructor\":{\"notice\":\" Constructor\"},\"resolve((address,address,uint256,uint32,uint32,uint32,bytes),bytes)\":{\"notice\":\" Order Resolving\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SettlementContract.sol\":\"SettlementContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     */\\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError, bytes32) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Strings} from \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\\n *\\n * The library provides methods for generating a hash of a message that conforms to the\\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\\n * specifications.\\n */\\nlibrary MessageHashUtils {\\n    /**\\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\\n     * `0x45` (`personal_sign` messages).\\n     *\\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\\n     * `\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\"` and hashing the result. It corresponds with the\\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\\n     *\\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\\n     * keccak256, although any bytes32 value can be safely used because the final digest will\\n     * be re-hashed.\\n     *\\n     * See {ECDSA-recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\") // 32 is the bytes-length of messageHash\\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\\n     * `0x45` (`personal_sign` messages).\\n     *\\n     * The digest is calculated by prefixing an arbitrary `message` with\\n     * `\\\"\\\\x19Ethereum Signed Message:\\\\n\\\" + len(message)` and hashing the result. It corresponds with the\\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\\n     *\\n     * See {ECDSA-recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\\n        return\\n            keccak256(bytes.concat(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", bytes(Strings.toString(message.length)), message));\\n    }\\n\\n    /**\\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\\n     * `0x00` (data with intended validator).\\n     *\\n     * The digest is calculated by prefixing an arbitrary `data` with `\\\"\\\\x19\\\\x00\\\"` and the intended\\n     * `validator` address. Then hashing the result.\\n     *\\n     * See {ECDSA-recover}.\\n     */\\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(hex\\\"19_00\\\", validator, data));\\n    }\\n\\n    /**\\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\\n     *\\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\\n     * `\\\\x19\\\\x01` and hashing the result. It corresponds to the hash signed by the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\\n     *\\n     * See {ECDSA-recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, hex\\\"19_01\\\")\\n            mstore(add(ptr, 0x02), domainSeparator)\\n            mstore(add(ptr, 0x22), structHash)\\n            digest := keccak256(ptr, 0x42)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"contracts/SettlementContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\nimport {ISettlementContract, CrossChainOrder, ResolvedCrossChainOrder} from \\\"./interfaces/IERC7683.sol\\\";\\nimport {ECDSA} from \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport {MessageHashUtils} from \\\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\\\";\\nimport {Context} from \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract SettlementContract is\\n    ISettlementContract,\\n    Context,\\n    Ownable\\n{\\n    using ECDSA for bytes32;\\n    using MessageHashUtils for bytes32;\\n\\n    ///\\n    /// Constructor\\n    ///\\n\\n    constructor() Ownable(_msgSender()) {}\\n\\n    ///\\n    /// Order Hashing\\n    ///\\n\\n    function computeHash(CrossChainOrder calldata order) external pure returns (bytes32) {\\n        return _hashOrder(order);\\n    }\\n\\n    function _hashOrder(CrossChainOrder memory order) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(order));\\n    }\\n\\n    function _verifySignature(CrossChainOrder memory order, bytes memory signature) internal view returns (bool) {\\n        return _hashOrder(order)\\n            .toEthSignedMessageHash()\\n            .recover(signature) == _msgSender();\\n    }\\n\\n    ///\\n    /// Whitelisted Settlement Contracts\\n    ///\\n\\n    mapping(address => bool) internal _isSettlementSupported;\\n    mapping(address => uint) internal _settlementToChainId;\\n\\n    function whitelistSettlementContract(address settlementContract, uint chainId) external onlyOwner {\\n        _isSettlementSupported[settlementContract] = true;\\n        _settlementToChainId[settlementContract] = chainId;\\n    }\\n\\n    ///\\n    /// Order Registration\\n    ///\\n\\n    mapping(bytes32 => CrossChainOrder) internal _orders;\\n    mapping(address => uint256) internal _nonceOf;\\n\\n    function initiate(CrossChainOrder calldata order, bytes calldata signature, bytes calldata fillerData) external {\\n\\n    }\\n\\n    function nonceOf(address user) external returns (uint256) {\\n        return _nonceOf[user];\\n    }\\n\\n    ///\\n    /// Order Resolving\\n    ///\\n\\n    function resolve(CrossChainOrder calldata order, bytes calldata fillerData) external view returns (ResolvedCrossChainOrder memory) {\\n\\n    }\\n}\",\"keccak256\":\"0xb1f19099bdae8b2c3de96328d32e2efc0c1c81b55a624f710f339ca9f7761db8\",\"license\":\"MIT\"},\"contracts/interfaces/IERC7683.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\n/// @title CrossChainOrder type\\n/// @notice Standard order struct to be signed by swappers, disseminated to fillers, and submitted to settlement contracts\\nstruct CrossChainOrder {\\n\\t/// @dev The contract address that the order is meant to be settled by.\\n\\t/// Fillers send this order to this contract address on the origin chain\\n\\taddress settlementContract;\\n\\t/// @dev The address of the user who is initiating the swap,\\n\\t/// whose input tokens will be taken and escrowed\\n\\taddress swapper;\\n\\t/// @dev Nonce to be used as replay protection for the order\\n\\tuint256 nonce;\\n\\t/// @dev The chainId of the origin chain\\n\\tuint32 originChainId;\\n\\t/// @dev The timestamp by which the order must be initiated\\n\\tuint32 initiateDeadline;\\n\\t/// @dev The timestamp by which the order must be filled on the destination chain\\n\\tuint32 fillDeadline;\\n\\t/// @dev Arbitrary implementation-specific data\\n\\t/// Can be used to define tokens, amounts, destination chains, fees, settlement parameters,\\n\\t/// or any other order-type specific information\\n\\tbytes orderData;\\n}\\n\\n/// @title ResolvedCrossChainOrder type\\n/// @notice An implementation-generic representation of an order\\n/// @dev Defines all requirements for filling an order by unbundling the implementation-specific orderData.\\n/// @dev Intended to improve integration generalization by allowing fillers to compute the exact input and output information of any order\\nstruct ResolvedCrossChainOrder {\\n\\t/// @dev The contract address that the order is meant to be settled by.\\n\\taddress settlementContract;\\n\\t/// @dev The address of the user who is initiating the swap\\n\\taddress swapper;\\n\\t/// @dev Nonce to be used as replay protection for the order\\n\\tuint256 nonce;\\n\\t/// @dev The chainId of the origin chain\\n\\tuint32 originChainId;\\n\\t/// @dev The timestamp by which the order must be initiated\\n\\tuint32 initiateDeadline;\\n\\t/// @dev The timestamp by which the order must be filled on the destination chain(s)\\n\\tuint32 fillDeadline;\\n\\n\\t/// @dev The inputs to be taken from the swapper as part of order initiation\\n\\tInput[] swapperInputs;\\n\\t/// @dev The outputs to be given to the swapper as part of order fulfillment\\n\\tOutput[] swapperOutputs;\\n\\t/// @dev The outputs to be given to the filler as part of order settlement\\n\\tOutput[] fillerOutputs;\\n}\\n\\n/// @notice Tokens sent by the swapper as inputs to the order\\nstruct Input {\\n\\t/// @dev The address of the ERC20 token on the origin chain\\n\\taddress token;\\n\\t/// @dev The amount of the token to be sent\\n\\tuint256 amount;\\n}\\n\\n/// @notice Tokens that must be receive for a valid order fulfillment\\nstruct Output {\\n\\t/// @dev The address of the ERC20 token on the destination chain\\n\\t/// @dev address(0) used as a sentinel for the native token\\n\\taddress token;\\n\\t/// @dev The amount of the token to be sent\\n\\tuint256 amount;\\n\\t/// @dev The address to receive the output tokens\\n\\taddress recipient;\\n\\t/// @dev The destination chain for this output\\n\\tuint32 chainId;\\n}\\n\\n\\n/// @title ISettlementContract\\n/// @notice Standard interface for settlement contracts\\ninterface ISettlementContract {\\n    function initiate(CrossChainOrder calldata order, bytes calldata signature, bytes calldata fillerData) external;\\n\\n    function resolve(CrossChainOrder calldata order, bytes calldata fillerData) external view returns (ResolvedCrossChainOrder memory);\\n}\\n\",\"keccak256\":\"0xaccf5fff04d4ab4eaaee9ba0aec112b22bf71ddc6a9e9fb63e9de2d886d0fa8c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1327,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":4211,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"_isSettlementSupported","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":4215,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"_settlementToChainId","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":4243,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"_orders","offset":0,"slot":"3","type":"t_mapping(t_bytes32,t_struct(CrossChainOrder)4309_storage)"},{"astId":4247,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"_nonceOf","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(CrossChainOrder)4309_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct CrossChainOrder)","numberOfBytes":"32","value":"t_struct(CrossChainOrder)4309_storage"},"t_struct(CrossChainOrder)4309_storage":{"encoding":"inplace","label":"struct CrossChainOrder","members":[{"astId":4290,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"settlementContract","offset":0,"slot":"0","type":"t_address"},{"astId":4293,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"swapper","offset":0,"slot":"1","type":"t_address"},{"astId":4296,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"nonce","offset":0,"slot":"2","type":"t_uint256"},{"astId":4299,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"originChainId","offset":0,"slot":"3","type":"t_uint32"},{"astId":4302,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"initiateDeadline","offset":4,"slot":"3","type":"t_uint32"},{"astId":4305,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"fillDeadline","offset":8,"slot":"3","type":"t_uint32"},{"astId":4308,"contract":"contracts/SettlementContract.sol:SettlementContract","label":"orderData","offset":0,"slot":"4","type":"t_bytes_storage"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"}}},"userdoc":{"kind":"user","methods":{"computeHash((address,address,uint256,uint32,uint32,uint32,bytes))":{"notice":" Order Hashing"},"constructor":{"notice":" Constructor"},"resolve((address,address,uint256,uint32,uint32,uint32,bytes),bytes)":{"notice":" Order Resolving"}},"version":1}}},"contracts/interfaces/IERC7683.sol":{"ISettlementContract":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"settlementContract","type":"address"},{"internalType":"address","name":"swapper","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"originChainId","type":"uint32"},{"internalType":"uint32","name":"initiateDeadline","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"bytes","name":"orderData","type":"bytes"}],"internalType":"struct CrossChainOrder","name":"order","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"fillerData","type":"bytes"}],"name":"initiate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"settlementContract","type":"address"},{"internalType":"address","name":"swapper","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"originChainId","type":"uint32"},{"internalType":"uint32","name":"initiateDeadline","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"internalType":"bytes","name":"orderData","type":"bytes"}],"internalType":"struct CrossChainOrder","name":"order","type":"tuple"},{"internalType":"bytes","name":"fillerData","type":"bytes"}],"name":"resolve","outputs":[{"components":[{"internalType":"address","name":"settlementContract","type":"address"},{"internalType":"address","name":"swapper","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint32","name":"originChainId","type":"uint32"},{"internalType":"uint32","name":"initiateDeadline","type":"uint32"},{"internalType":"uint32","name":"fillDeadline","type":"uint32"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct Input[]","name":"swapperInputs","type":"tuple[]"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint32","name":"chainId","type":"uint32"}],"internalType":"struct Output[]","name":"swapperOutputs","type":"tuple[]"},{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint32","name":"chainId","type":"uint32"}],"internalType":"struct Output[]","name":"fillerOutputs","type":"tuple[]"}],"internalType":"struct ResolvedCrossChainOrder","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"ISettlementContract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"initiate((address,address,uint256,uint32,uint32,uint32,bytes),bytes,bytes)":"962fc2a3","resolve((address,address,uint256,uint32,uint32,uint32,bytes),bytes)":"bf6d01d3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"originChainId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initiateDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"orderData\",\"type\":\"bytes\"}],\"internalType\":\"struct CrossChainOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"fillerData\",\"type\":\"bytes\"}],\"name\":\"initiate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"originChainId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initiateDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"orderData\",\"type\":\"bytes\"}],\"internalType\":\"struct CrossChainOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"fillerData\",\"type\":\"bytes\"}],\"name\":\"resolve\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"settlementContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"originChainId\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"initiateDeadline\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fillDeadline\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Input[]\",\"name\":\"swapperInputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"chainId\",\"type\":\"uint32\"}],\"internalType\":\"struct Output[]\",\"name\":\"swapperOutputs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"chainId\",\"type\":\"uint32\"}],\"internalType\":\"struct Output[]\",\"name\":\"fillerOutputs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ResolvedCrossChainOrder\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ISettlementContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Standard interface for settlement contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC7683.sol\":\"ISettlementContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC7683.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.22;\\n\\n/// @title CrossChainOrder type\\n/// @notice Standard order struct to be signed by swappers, disseminated to fillers, and submitted to settlement contracts\\nstruct CrossChainOrder {\\n\\t/// @dev The contract address that the order is meant to be settled by.\\n\\t/// Fillers send this order to this contract address on the origin chain\\n\\taddress settlementContract;\\n\\t/// @dev The address of the user who is initiating the swap,\\n\\t/// whose input tokens will be taken and escrowed\\n\\taddress swapper;\\n\\t/// @dev Nonce to be used as replay protection for the order\\n\\tuint256 nonce;\\n\\t/// @dev The chainId of the origin chain\\n\\tuint32 originChainId;\\n\\t/// @dev The timestamp by which the order must be initiated\\n\\tuint32 initiateDeadline;\\n\\t/// @dev The timestamp by which the order must be filled on the destination chain\\n\\tuint32 fillDeadline;\\n\\t/// @dev Arbitrary implementation-specific data\\n\\t/// Can be used to define tokens, amounts, destination chains, fees, settlement parameters,\\n\\t/// or any other order-type specific information\\n\\tbytes orderData;\\n}\\n\\n/// @title ResolvedCrossChainOrder type\\n/// @notice An implementation-generic representation of an order\\n/// @dev Defines all requirements for filling an order by unbundling the implementation-specific orderData.\\n/// @dev Intended to improve integration generalization by allowing fillers to compute the exact input and output information of any order\\nstruct ResolvedCrossChainOrder {\\n\\t/// @dev The contract address that the order is meant to be settled by.\\n\\taddress settlementContract;\\n\\t/// @dev The address of the user who is initiating the swap\\n\\taddress swapper;\\n\\t/// @dev Nonce to be used as replay protection for the order\\n\\tuint256 nonce;\\n\\t/// @dev The chainId of the origin chain\\n\\tuint32 originChainId;\\n\\t/// @dev The timestamp by which the order must be initiated\\n\\tuint32 initiateDeadline;\\n\\t/// @dev The timestamp by which the order must be filled on the destination chain(s)\\n\\tuint32 fillDeadline;\\n\\n\\t/// @dev The inputs to be taken from the swapper as part of order initiation\\n\\tInput[] swapperInputs;\\n\\t/// @dev The outputs to be given to the swapper as part of order fulfillment\\n\\tOutput[] swapperOutputs;\\n\\t/// @dev The outputs to be given to the filler as part of order settlement\\n\\tOutput[] fillerOutputs;\\n}\\n\\n/// @notice Tokens sent by the swapper as inputs to the order\\nstruct Input {\\n\\t/// @dev The address of the ERC20 token on the origin chain\\n\\taddress token;\\n\\t/// @dev The amount of the token to be sent\\n\\tuint256 amount;\\n}\\n\\n/// @notice Tokens that must be receive for a valid order fulfillment\\nstruct Output {\\n\\t/// @dev The address of the ERC20 token on the destination chain\\n\\t/// @dev address(0) used as a sentinel for the native token\\n\\taddress token;\\n\\t/// @dev The amount of the token to be sent\\n\\tuint256 amount;\\n\\t/// @dev The address to receive the output tokens\\n\\taddress recipient;\\n\\t/// @dev The destination chain for this output\\n\\tuint32 chainId;\\n}\\n\\n\\n/// @title ISettlementContract\\n/// @notice Standard interface for settlement contracts\\ninterface ISettlementContract {\\n    function initiate(CrossChainOrder calldata order, bytes calldata signature, bytes calldata fillerData) external;\\n\\n    function resolve(CrossChainOrder calldata order, bytes calldata fillerData) external view returns (ResolvedCrossChainOrder memory);\\n}\\n\",\"keccak256\":\"0xaccf5fff04d4ab4eaaee9ba0aec112b22bf71ddc6a9e9fb63e9de2d886d0fa8c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Standard interface for settlement contracts","version":1}}}}}}